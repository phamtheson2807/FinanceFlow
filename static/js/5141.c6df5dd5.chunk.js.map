{"version":3,"file":"static/js/5141.c6df5dd5.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Delete.js","pages/transactions/TransactionCategories.tsx","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/Edit.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import { Add, Delete, Edit } from '@mui/icons-material';\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, List, ListItem, ListItemText, MenuItem, Paper, TextField, Typography } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react';\nimport { useThemeContext } from '../../contexts/ThemeContext';\nimport axiosInstance from '../../utils/axiosInstance';\n\ninterface Category {\n  _id: string;\n  name: string;\n  type: 'income' | 'expense';\n  color: string;\n  icon: string;\n}\n\nconst TransactionCategories: React.FC = () => {\n  const { darkMode } = useThemeContext();\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [formData, setFormData] = useState({ name: '', type: 'expense' as 'income' | 'expense', color: '#000000', icon: '' });\n  const [editingCategory, setEditingCategory] = useState<Category | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        setLoading(true);\n        const response = await axiosInstance.get('/api/categories');\n        setCategories(response.data || []);\n      } catch (err) {\n        console.error('Lỗi tải danh mục:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  const handleAddOrEditCategory = async () => {\n    try {\n      if (!formData.name) return;\n      const payload = { ...formData };\n      if (editingCategory) {\n        await axiosInstance.put(`/api/categories/${editingCategory._id}`, payload);\n      } else {\n        await axiosInstance.post('/api/categories', payload);\n      }\n      setOpenDialog(false);\n      setFormData({ name: '', type: 'expense', color: '#000000', icon: '' });\n      setEditingCategory(null);\n      const response = await axiosInstance.get('/api/categories');\n      setCategories(response.data || []);\n    } catch (err) {\n      console.error('Lỗi lưu danh mục:', err);\n    }\n  };\n\n  const handleDeleteCategory = async (id: string) => {\n    try {\n      await axiosInstance.delete(`/api/categories/${id}`);\n      setCategories(categories.filter((cat) => cat._id !== id));\n    } catch (err) {\n      console.error('Lỗi xóa danh mục:', err);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        p: { xs: 1, sm: 2, md: 3 },\n        background: darkMode\n          ? 'linear-gradient(135deg, #0F172A 0%, #1E293B 100%)'\n          : 'linear-gradient(135deg, #F1F5F9 0%, #E2E8F0 100%)',\n        minHeight: '100vh',\n      }}\n    >\n      <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }}>\n        <Typography\n          variant=\"h4\"\n          gutterBottom\n          sx={{\n            fontWeight: 700,\n            color: darkMode ? '#E2E8F0' : '#1E293B',\n            background: 'linear-gradient(45deg, #3B82F6, #7C3AED)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n          }}\n        >\n          Phân loại giao dịch\n        </Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<Add />}\n          sx={{\n            mb: 2,\n            bgcolor: 'linear-gradient(45deg, #3B82F6 30%, #7C3AED 90%)',\n            color: '#fff',\n            borderRadius: '8px',\n            fontWeight: 600,\n          }}\n          onClick={() => setOpenDialog(true)}\n        >\n          Thêm danh mục\n        </Button>\n        <Paper\n          sx={{\n            p: 3,\n            borderRadius: '12px',\n            bgcolor: darkMode ? 'rgba(30, 41, 59, 0.95)' : 'rgba(255, 255, 255, 0.98)',\n            boxShadow: darkMode ? '0 5px 15px rgba(0,0,0,0.5)' : '0 5px 15px rgba(0,0,0,0.1)',\n          }}\n        >\n          {loading ? (\n            <Typography>Đang tải...</Typography>\n          ) : (\n            <List>\n              {categories.map((category) => (\n                <motion.div\n                  key={category._id}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  <ListItem\n                    secondaryAction={\n                      <Box>\n                        <IconButton\n                          onClick={() => {\n                            setEditingCategory(category);\n                            setFormData({ name: category.name, type: category.type, color: category.color, icon: category.icon });\n                            setOpenDialog(true);\n                          }}\n                        >\n                          <Edit sx={{ color: darkMode ? '#A5B4FC' : '#3B82F6' }} />\n                        </IconButton>\n                        <IconButton onClick={() => handleDeleteCategory(category._id)}>\n                          <Delete sx={{ color: darkMode ? '#F87171' : '#EF4444' }} />\n                        </IconButton>\n                      </Box>\n                    }\n                  >\n                    <ListItemText\n                      primary={`${category.icon} ${category.name}`}\n                      secondary={category.type === 'income' ? 'Thu nhập' : 'Chi tiêu'}\n                      primaryTypographyProps={{ fontWeight: 500, color: darkMode ? '#E2E8F0' : '#1E293B' }}\n                      secondaryTypographyProps={{ color: darkMode ? '#CBD5E1' : '#64748B' }}\n                    />\n                  </ListItem>\n                </motion.div>\n              ))}\n            </List>\n          )}\n        </Paper>\n      </motion.div>\n\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\n        <DialogTitle sx={{ color: darkMode ? '#A5B4FC' : '#4B5563' }}>\n          {editingCategory ? 'Sửa danh mục' : 'Thêm danh mục'}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            label=\"Tên danh mục\"\n            value={formData.name}\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n            fullWidth\n            margin=\"normal\"\n            sx={{ bgcolor: darkMode ? '#1E293B' : '#fff' }}\n          />\n          <TextField\n            select\n            label=\"Loại\"\n            value={formData.type}\n            onChange={(e) => setFormData({ ...formData, type: e.target.value as 'income' | 'expense' })}\n            fullWidth\n            margin=\"normal\"\n            sx={{ bgcolor: darkMode ? '#1E293B' : '#fff' }}\n          >\n            <MenuItem value=\"income\">Thu nhập</MenuItem>\n            <MenuItem value=\"expense\">Chi tiêu</MenuItem>\n          </TextField>\n          <TextField\n            label=\"Màu sắc\"\n            type=\"color\"\n            value={formData.color}\n            onChange={(e) => setFormData({ ...formData, color: e.target.value })}\n            fullWidth\n            margin=\"normal\"\n            sx={{ bgcolor: darkMode ? '#1E293B' : '#fff' }}\n          />\n          <TextField\n            label=\"Icon (emoji)\"\n            value={formData.icon}\n            onChange={(e) => setFormData({ ...formData, icon: e.target.value })}\n            fullWidth\n            margin=\"normal\"\n            sx={{ bgcolor: darkMode ? '#1E293B' : '#fff' }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDialog(false)} sx={{ color: darkMode ? '#CBD5E1' : '#64748B' }}>\n            Hủy\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={handleAddOrEditCategory}\n            sx={{ bgcolor: 'linear-gradient(45deg, #3B82F6 30%, #7C3AED 90%)', color: '#fff' }}\n          >\n            Lưu\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default TransactionCategories;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["createSvgIcon","_jsx","d","TransactionCategories","darkMode","useThemeContext","categories","setCategories","useState","openDialog","setOpenDialog","formData","setFormData","name","type","color","icon","editingCategory","setEditingCategory","loading","setLoading","useEffect","async","response","axiosInstance","get","data","err","console","error","fetchCategories","_jsxs","Box","sx","p","xs","sm","md","background","minHeight","children","motion","div","initial","opacity","y","animate","transition","duration","Typography","variant","gutterBottom","fontWeight","WebkitBackgroundClip","WebkitTextFillColor","Button","startIcon","Add","mb","bgcolor","borderRadius","onClick","Paper","boxShadow","List","map","category","ListItem","secondaryAction","IconButton","Edit","delete","concat","id","filter","cat","_id","handleDeleteCategory","Delete","ListItemText","primary","secondary","primaryTypographyProps","secondaryTypographyProps","Dialog","open","onClose","DialogTitle","DialogContent","TextField","label","value","onChange","e","_objectSpread","target","fullWidth","margin","select","MenuItem","DialogActions","payload","put","post"],"sourceRoot":""}