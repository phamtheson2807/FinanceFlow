{"version":3,"file":"static/js/5140.fbccf756.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","pages/user/BankIntegration.tsx","services/bankApi.ts"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { Box, Button, Card, CardContent, CircularProgress, MenuItem, Select, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { connectBank, deleteBankAccount, getBankTransactions, getLinkedAccounts } from '../../services/bankApi';\n\nconst BankIntegration: React.FC = () => {\n  const [bankName, setBankName] = useState('Giả lập MB Bank');\n  const [accounts, setAccounts] = useState<any[]>([]);\n  const [transactions, setTransactions] = useState<any[]>([]);\n  const [selectedAccount, setSelectedAccount] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const fetchAccounts = async () => {\n    setLoading(true);\n    const data = await getLinkedAccounts();\n    setAccounts(data);\n    setLoading(false);\n  };\n\n  const handleConnect = async () => {\n    await connectBank(bankName);\n    fetchAccounts();\n  };\n\n  const handleSelectAccount = async (id: string) => {\n    setSelectedAccount(id);\n    const tx = await getBankTransactions(id);\n    setTransactions(tx);\n  };\n\n  const handleDelete = async (id: string) => {\n    await deleteBankAccount(id);\n    fetchAccounts();\n    if (selectedAccount === id) {\n      setSelectedAccount(null);\n      setTransactions([]);\n    }\n  };\n\n  useEffect(() => { fetchAccounts(); }, []);\n\n  return (\n    <Box p={3}>\n      <Typography variant=\"h5\">Tích hợp ngân hàng (Giả lập)</Typography>\n      <Box mt={2}>\n        <Select value={bankName} onChange={(e) => setBankName(e.target.value)} sx={{ mr: 2 }}>\n          <MenuItem value=\"Giả lập MB Bank\">Giả lập MB Bank</MenuItem>\n          <MenuItem value=\"Giả lập Vietcombank\">Giả lập Vietcombank</MenuItem>\n          <MenuItem value=\"Giả lập BIDV\">Giả lập BIDV</MenuItem>\n        </Select>\n        <Button variant=\"contained\" onClick={handleConnect}>Liên kết</Button>\n      </Box>\n\n      {loading ? <CircularProgress /> : accounts.map((acc) => (\n        <Card key={acc._id} sx={{ my: 2 }}>\n          <CardContent>\n            <Typography>{acc.bankName}</Typography>\n            <Typography>Số tài khoản: {acc.accountNumber}</Typography>\n            <Typography>Số dư: {acc.balance.toLocaleString()} đ</Typography>\n            <Button size=\"small\" onClick={() => handleSelectAccount(acc._id)}>Xem giao dịch</Button>\n            <Button size=\"small\" color=\"error\" onClick={() => handleDelete(acc._id)}>Huỷ liên kết</Button>\n          </CardContent>\n        </Card>\n      ))}\n\n      {transactions.length > 0 && (\n        <Box mt={3}>\n          <Typography variant=\"h6\">Giao dịch</Typography>\n          {transactions.map((tx, idx) => (\n            <Typography key={idx}>{tx.date.slice(0, 10)} - {tx.description} - {tx.amount.toLocaleString()} đ ({tx.type})</Typography>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default BankIntegration;\n","import axiosInstance from '../utils/axiosInstance';\n\nexport const connectBank = async (bankName: string) => {\n  const response = await axiosInstance.post('/api/bank/connect', { bankName });\n  return response.data;\n};\n\nexport const getLinkedAccounts = async () => {\n  const response = await axiosInstance.get('/api/bank/accounts');\n  return response.data;\n};\n\nexport const getBankTransactions = async (accountId: string) => {\n  const response = await axiosInstance.get(`/api/bank/transactions/${accountId}`);\n  return response.data.transactions;\n};\n\nexport const deleteBankAccount = async (id: string) => {\n  const response = await axiosInstance.delete(`/api/bank/${id}`);\n  return response.data;\n};\n"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","BankIntegration","bankName","setBankName","useState","accounts","setAccounts","transactions","setTransactions","selectedAccount","setSelectedAccount","loading","setLoading","fetchAccounts","async","data","axiosInstance","get","getLinkedAccounts","handleSelectAccount","id","tx","concat","accountId","getBankTransactions","handleDelete","delete","deleteBankAccount","useEffect","_jsxs","Box","p","children","Typography","variant","mt","Select","value","onChange","e","target","sx","mr","MenuItem","Button","onClick","post","connectBank","CircularProgress","map","acc","Card","my","CardContent","accountNumber","balance","toLocaleString","size","_id","color","length","idx","date","slice","description","amount","type"],"sourceRoot":""}