{"version":3,"file":"static/js/8199.b5207712.chunk.js","mappings":"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","sources":["../node_modules/recharts/es6/chart/BarChart.js","components/investments/InvestmentAnalytics.tsx"],"sourcesContent":["/**\n * @fileOverview Bar Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Bar } from '../cartesian/Bar';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var BarChart = generateCategoricalChart({\n  chartName: 'BarChart',\n  GraphicalChild: Bar,\n  defaultTooltipEventType: 'axis',\n  validateTooltipEventTypes: ['axis', 'item'],\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","import {\n    ArrowDownward,\n    ArrowUpward,\n    TrendingUp,\n} from '@mui/icons-material';\nimport {\n    alpha,\n    Box,\n    Card,\n    Grid,\n    Paper,\n    styled,\n    Typography,\n    useTheme\n} from '@mui/material';\nimport React, { useMemo } from 'react';\nimport {\n    Bar,\n    BarChart,\n    Cell,\n    Legend,\n    Line,\n    LineChart,\n    Pie,\n    PieChart,\n    Tooltip as RechartsTooltip,\n    ResponsiveContainer,\n    XAxis,\n    YAxis,\n} from 'recharts';\nimport { Investment } from './InvestmentCard';\nimport { InvestmentType } from './InvestmentHeader';\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  padding: theme.spacing(3, 4),\n  borderRadius: '16px',\n  background: theme.palette.mode === 'dark' \n    ? 'linear-gradient(145deg, rgba(36,47,64,0.8) 0%, rgba(50,63,84,0.9) 100%)' \n    : 'linear-gradient(145deg, #ffffff 0%, #f8fafc 100%)',\n  boxShadow: theme.palette.mode === 'dark'\n    ? '0 10px 25px rgba(0,0,0,0.2)'\n    : '0 10px 25px rgba(0,0,0,0.05)'\n}));\n\ninterface PieChartData {\n  name: string;\n  value: number;\n  color: string;\n}\n\ninterface ChartData {\n  date: string;\n  profitLoss: number;\n}\n\ninterface InvestmentAnalyticsProps {\n  investments: Investment[];\n  investmentTypes: InvestmentType[];\n  formatCurrency: (amount: number) => string;\n  calculateProfitLoss: (investment: Investment) => { \n    amount: number;\n    percentage: string;\n    isProfit: boolean \n  };\n  getTypeDetails: (type: string) => {\n    value: string;\n    label: string;\n    color: string;\n    icon: React.ReactNode \n  };\n}\n\nconst InvestmentAnalytics: React.FC<InvestmentAnalyticsProps> = ({\n  investments,\n  investmentTypes,\n  formatCurrency,\n  calculateProfitLoss,\n  getTypeDetails,\n}) => {\n  const theme = useTheme();\n\n  // Tính toán tổng quan về hiệu suất đầu tư\n  const totalProfitLoss = useMemo(() => {\n    const total = investments.reduce(\n      (acc, inv) => {\n        const { amount, isProfit } = calculateProfitLoss(inv);\n        return {\n          profit: isProfit ? acc.profit + amount : acc.profit,\n          loss: !isProfit ? acc.loss + Math.abs(amount) : acc.loss,\n          totalInvested: acc.totalInvested + inv.initialAmount,\n          totalCurrent: acc.totalCurrent + inv.currentAmount,\n        };\n      },\n      { profit: 0, loss: 0, totalInvested: 0, totalCurrent: 0 }\n    );\n    return total;\n  }, [investments, calculateProfitLoss]);\n\n  const totalPerformance = useMemo(() => {\n    return totalProfitLoss.totalInvested > 0\n      ? ((totalProfitLoss.totalCurrent - totalProfitLoss.totalInvested) / totalProfitLoss.totalInvested) * 100\n      : 0;\n  }, [totalProfitLoss]);\n\n  // Dữ liệu biểu đồ tròn theo tên đầu tư\n  const pieData: PieChartData[] = useMemo(() => {\n    return investments.map((inv) => ({\n      name: inv.name,\n      value: inv.currentAmount,\n      color: getTypeDetails(inv.type).color,\n    }));\n  }, [investments, getTypeDetails]);\n\n  // Dữ liệu biểu đồ theo loại đầu tư\n  const investmentByTypeData: PieChartData[] = useMemo(() => {\n    const typeMap = new Map<string, number>();\n    investments.forEach((inv) => {\n      const type = getTypeDetails(inv.type).label;\n      typeMap.set(type, (typeMap.get(type) || 0) + inv.currentAmount);\n    });\n    return Array.from(typeMap.entries()).map(([name, value]) => ({\n      name,\n      value,\n      color: getTypeDetails(investmentTypes.find((t) => t.label === name)?.value || 'other').color,\n    }));\n  }, [investments, getTypeDetails, investmentTypes]);\n\n  // Dữ liệu biểu đồ hiệu suất theo thời gian\n  const performanceChartData: ChartData[] = useMemo(() => {\n    const data: ChartData[] = [];\n    if (investments.length === 0) return data;\n    \n    const startDate = new Date(Math.min(...investments.map((inv) => new Date(inv.startDate).getTime())));\n    const endDate = new Date();\n    \n    for (let date = new Date(startDate); date <= endDate; date.setMonth(date.getMonth() + 1)) {\n      const monthKey = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}`;\n      let totalProfitLoss = 0;\n      \n      investments.forEach((inv) => {\n        const invStartDate = new Date(inv.startDate);\n        if (invStartDate <= date) {\n          const profitLoss = inv.currentAmount - inv.initialAmount;\n          totalProfitLoss += profitLoss;\n        }\n      });\n      \n      data.push({\n        date: monthKey,\n        profitLoss: totalProfitLoss,\n      });\n    }\n    \n    return data;\n  }, [investments]);\n\n  if (investments.length === 0) {\n    return (\n      <StyledCard>\n        <Box sx={{ \n          textAlign: 'center', \n          py: 8, \n          display: 'flex', \n          flexDirection: 'column', \n          alignItems: 'center', \n          justifyContent: 'center' \n        }}>\n          <Box sx={{ \n            width: 80, \n            height: 80, \n            bgcolor: alpha(theme.palette.primary.light, 0.1),\n            borderRadius: '50%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            mb: 3\n          }}>\n            <TrendingUp color=\"primary\" sx={{ fontSize: 40 }} />\n          </Box>\n          <Typography variant=\"h5\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n            Chưa có dữ liệu phân tích\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            Hãy thêm các khoản đầu tư để xem thống kê và phân tích chi tiết\n          </Typography>\n        </Box>\n      </StyledCard>\n    );\n  }\n\n  return (\n    <Grid container spacing={3} sx={{ width: '100%', m: 0, p: 0 }}>\n      <Grid item xs={12}>\n        <StyledCard>\n          <Typography \n            variant=\"h5\" \n            fontWeight=\"bold\" \n            sx={{ \n              mb: 4, \n              fontSize: { xs: '1.3rem', sm: '1.5rem' },\n              position: 'relative',\n              display: 'inline-block',\n              '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                bottom: -10,\n                left: 0,\n                width: 40,\n                height: 4,\n                borderRadius: 2,\n                backgroundColor: theme.palette.primary.main\n              } \n            }}\n          >\n            Tổng quan hiệu suất\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6} md={3}>\n              <Paper \n                elevation={0} \n                sx={{ \n                  p: { xs: 2, sm: 2.5 }, \n                  borderRadius: 4, \n                  background: alpha(theme.palette.primary.light, 0.08),\n                  border: `1px solid ${alpha(theme.palette.primary.light, 0.2)}`\n                }}\n              >\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: { xs: '0.85rem', sm: '0.9rem' }, mb: 1.5 }}>\n                  Tổng vốn đầu tư\n                </Typography>\n                <Typography variant=\"h5\" fontWeight=\"bold\" sx={{ fontSize: { xs: '1.3rem', sm: '1.5rem' }, color: theme.palette.primary.main }}>\n                  {formatCurrency(totalProfitLoss.totalInvested)}\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Paper \n                elevation={0} \n                sx={{ \n                  p: { xs: 2, sm: 2.5 }, \n                  borderRadius: 4, \n                  background: alpha(theme.palette.info.light, 0.08),\n                  border: `1px solid ${alpha(theme.palette.info.light, 0.2)}`\n                }}\n              >\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: { xs: '0.85rem', sm: '0.9rem' }, mb: 1.5 }}>\n                  Giá trị hiện tại\n                </Typography>\n                <Typography variant=\"h5\" fontWeight=\"bold\" sx={{ fontSize: { xs: '1.3rem', sm: '1.5rem' }, color: theme.palette.info.main }}>\n                  {formatCurrency(totalProfitLoss.totalCurrent)}\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Paper \n                elevation={0} \n                sx={{ \n                  p: { xs: 2, sm: 2.5 }, \n                  borderRadius: 4, \n                  background: alpha(theme.palette.success.light, 0.08),\n                  border: `1px solid ${alpha(theme.palette.success.light, 0.2)}`\n                }}\n              >\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: { xs: '0.85rem', sm: '0.9rem' }, mb: 1.5 }}>\n                  Lợi nhuận\n                </Typography>\n                <Typography\n                  variant=\"h5\"\n                  fontWeight=\"bold\"\n                  sx={{ color: theme.palette.success.main, fontSize: { xs: '1.3rem', sm: '1.5rem' }, display: 'flex', alignItems: 'center', gap: 1 }}\n                >\n                  <ArrowUpward fontSize={window.innerWidth < 600 ? 'small' : 'medium'} />\n                  {formatCurrency(totalProfitLoss.profit)}\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Paper \n                elevation={0} \n                sx={{ \n                  p: { xs: 2, sm: 2.5 }, \n                  borderRadius: 4, \n                  background: alpha(theme.palette.error.light, 0.08),\n                  border: `1px solid ${alpha(theme.palette.error.light, 0.2)}`\n                }}\n              >\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: { xs: '0.85rem', sm: '0.9rem' }, mb: 1.5 }}>\n                  Lỗ\n                </Typography>\n                <Typography\n                  variant=\"h5\"\n                  fontWeight=\"bold\"\n                  sx={{ color: theme.palette.error.main, fontSize: { xs: '1.3rem', sm: '1.5rem' }, display: 'flex', alignItems: 'center', gap: 1 }}\n                >\n                  <ArrowDownward fontSize={window.innerWidth < 600 ? 'small' : 'medium'} />\n                  {formatCurrency(totalProfitLoss.loss)}\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper \n                elevation={0} \n                sx={{ \n                  p: 3, \n                  borderRadius: 4, \n                  background: alpha(totalPerformance >= 0 ? theme.palette.success.light : theme.palette.error.light, 0.08),\n                  border: `1px solid ${alpha(totalPerformance >= 0 ? theme.palette.success.light : theme.palette.error.light, 0.2)}`\n                }}\n              >\n                <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 1, fontSize: '1rem', fontWeight: 500 }}>\n                  Tổng hiệu suất đầu tư\n                </Typography>\n                <Typography\n                  variant=\"h4\"\n                  fontWeight=\"bold\"\n                  sx={{\n                    color: totalPerformance >= 0 ? theme.palette.success.main : theme.palette.error.main,\n                    display: 'flex',\n                    alignItems: 'center',\n                    fontSize: '2rem',\n                  }}\n                >\n                  {totalPerformance >= 0 ? <ArrowUpward fontSize=\"large\" sx={{ mr: 1 }} /> : <ArrowDownward fontSize=\"large\" sx={{ mr: 1 }} />}\n                  {totalPerformance >= 0 ? '+' : '-'}{Math.abs(totalPerformance).toFixed(2)}%\n                </Typography>\n              </Paper>\n            </Grid>\n            \n            <Grid item xs={12}>\n              <Paper \n                elevation={0} \n                sx={{ \n                  p: 3, \n                  borderRadius: 4,\n                  mt: 2\n                }}\n              >\n                <Typography variant=\"h6\" fontWeight=\"bold\" sx={{ mb: 3, fontSize: '1.2rem' }}>\n                  Hiệu suất theo thời gian\n                </Typography>\n                {performanceChartData.length > 0 ? (\n                  <ResponsiveContainer width=\"100%\" height={350}>\n                    <LineChart data={performanceChartData}>\n                      <XAxis \n                        dataKey=\"date\" \n                        tick={{ fontSize: 12 }} \n                        tickFormatter={(value) => {\n                          // Trên mobile chỉ hiển thị năm\n                          const isMobile = window.innerWidth < 600;\n                          if (isMobile) {\n                            return value.split('-')[0]; // Chỉ lấy năm\n                          }\n                          return value; // Trên desktop hiển thị đầy đủ\n                        }}\n                      />\n                      <YAxis \n                        tickFormatter={(value) => value.toLocaleString('vi-VN')} \n                        tick={{ fontSize: 12 }}\n                        width={60}\n                      />\n                      <RechartsTooltip \n                        formatter={(value: number) => formatCurrency(value)} \n                        contentStyle={{ \n                          borderRadius: 8, \n                          border: 'none', \n                          boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\n                          padding: '10px 14px' \n                        }}\n                      />\n                      <Legend />\n                      <Line\n                        type=\"monotone\"\n                        dataKey=\"profitLoss\"\n                        stroke={theme.palette.primary.main}\n                        strokeWidth={3}\n                        name=\"Lợi nhuận/Lỗ\"\n                        dot={{ strokeWidth: 2, r: 4, fill: '#fff' }}\n                        activeDot={{ strokeWidth: 0, r: 6, fill: theme.palette.primary.main }}\n                      />\n                    </LineChart>\n                  </ResponsiveContainer>\n                ) : (\n                  <Box sx={{ textAlign: 'center', py: 5 }}>\n                    <Typography variant=\"body1\" color=\"text.secondary\" sx={{ fontSize: '1rem' }}>\n                      Chưa có dữ liệu hiệu suất\n                    </Typography>\n                  </Box>\n                )}\n              </Paper>\n            </Grid>\n          </Grid>\n        </StyledCard>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <StyledCard sx={{ \n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column'\n        }}>\n          <Typography \n            variant=\"h6\" \n            fontWeight=\"bold\" \n            sx={{ \n              mb: 3, \n              fontSize: '1.2rem',\n              position: 'relative',\n              display: 'inline-block',\n              '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                bottom: -8,\n                left: 0,\n                width: 30,\n                height: 3,\n                borderRadius: 1.5,\n                backgroundColor: theme.palette.primary.main\n              }\n            }}\n          >\n            Phân bổ theo loại đầu tư\n          </Typography>\n          {investmentByTypeData.length > 0 ? (\n            <Box sx={{ flex: 1, display: 'flex', alignItems: 'center', justifyContent: 'center', minHeight: 300 }}>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <PieChart>\n                  <Pie\n                    data={investmentByTypeData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    outerRadius={100}\n                    innerRadius={60}\n                    dataKey=\"value\"\n                    paddingAngle={2}\n                    label={({ name, percent }) => `${name} (${(percent * 100).toFixed(1)}%)`}\n                  >\n                    {investmentByTypeData.map((entry, index) => (\n                      <Cell \n                        key={`cell-${index}`} \n                        fill={entry.color} \n                        stroke={theme.palette.background.paper}\n                        strokeWidth={2}\n                      />\n                    ))}\n                  </Pie>\n                  <Legend \n                    wrapperStyle={{ fontSize: '0.9rem', paddingTop: '20px' }}\n                    iconSize={10}\n                    iconType=\"circle\"\n                  />\n                  <RechartsTooltip \n                    formatter={(value: number) => formatCurrency(value)}\n                    contentStyle={{ \n                      borderRadius: 8, \n                      border: 'none', \n                      boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\n                      padding: '10px 14px' \n                    }}\n                  />\n                </PieChart>\n              </ResponsiveContainer>\n            </Box>\n          ) : (\n            <Box sx={{ \n              textAlign: 'center', \n              py: 6, \n              flex: 1, \n              display: 'flex', \n              flexDirection: 'column', \n              alignItems: 'center', \n              justifyContent: 'center' \n            }}>\n              <Box sx={{ \n                width: 60, \n                height: 60, \n                bgcolor: alpha(theme.palette.primary.light, 0.1),\n                borderRadius: '50%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                mb: 2\n              }}>\n                <TrendingUp color=\"primary\" fontSize=\"large\" />\n              </Box>\n              <Typography variant=\"body1\" color=\"text.secondary\" sx={{ fontSize: '1rem' }}>\n                Chưa có dữ liệu đầu tư\n              </Typography>\n            </Box>\n          )}\n        </StyledCard>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <StyledCard sx={{ \n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column'\n        }}>\n          <Typography \n            variant=\"h6\" \n            fontWeight=\"bold\" \n            sx={{ \n              mb: 3, \n              fontSize: '1.2rem',\n              position: 'relative',\n              display: 'inline-block',\n              '&:after': {\n                content: '\"\"',\n                position: 'absolute',\n                bottom: -8,\n                left: 0,\n                width: 30,\n                height: 3,\n                borderRadius: 1.5,\n                backgroundColor: theme.palette.primary.main\n              }\n            }}\n          >\n            Phân bổ theo giá trị\n          </Typography>\n          {pieData.length > 0 ? (\n            <Box sx={{ flex: 1, display: 'flex', alignItems: 'center' }}>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart data={pieData}>\n                  <XAxis dataKey=\"name\" tick={{ fontSize: 12 }} axisLine={false} tickLine={false} />\n                  <YAxis \n                    tickFormatter={(value) => value.toLocaleString('vi-VN')} \n                    tick={{ fontSize: 12 }} \n                    axisLine={false}\n                    tickLine={false}\n                  />\n                  <RechartsTooltip \n                    formatter={(value: number) => formatCurrency(value)}\n                    contentStyle={{ \n                      borderRadius: 8, \n                      border: 'none', \n                      boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\n                      padding: '10px 14px' \n                    }}\n                  />\n                  <Bar dataKey=\"value\" radius={[8, 8, 0, 0]} barSize={40}>\n                    {pieData.map((entry, index) => (\n                      <Cell \n                        key={`cell-${index}`} \n                        fill={entry.color} \n                        stroke={theme.palette.background.paper}\n                        strokeWidth={1}\n                      />\n                    ))}\n                  </Bar>\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n          ) : (\n            <Box sx={{ \n              textAlign: 'center', \n              py: 6, \n              flex: 1, \n              display: 'flex', \n              flexDirection: 'column', \n              alignItems: 'center', \n              justifyContent: 'center' \n            }}>\n              <Box sx={{ \n                width: 60, \n                height: 60, \n                bgcolor: alpha(theme.palette.primary.light, 0.1),\n                borderRadius: '50%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                mb: 2\n              }}>\n                <TrendingUp color=\"primary\" fontSize=\"large\" />\n              </Box>\n              <Typography variant=\"body1\" color=\"text.secondary\" sx={{ fontSize: '1rem' }}>\n                Chưa có dữ liệu\n              </Typography>\n            </Box>\n          )}\n        </StyledCard>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default InvestmentAnalytics; "],"names":["BarChart","generateCategoricalChart","chartName","GraphicalChild","Bar","defaultTooltipEventType","validateTooltipEventTypes","axisComponents","axisType","AxisComp","XAxis","YAxis","formatAxisMap","StyledCard","styled","Card","_ref","theme","padding","spacing","borderRadius","background","palette","mode","boxShadow","_ref2","investments","investmentTypes","formatCurrency","calculateProfitLoss","getTypeDetails","useTheme","totalProfitLoss","useMemo","reduce","acc","inv","amount","isProfit","profit","loss","Math","abs","totalInvested","initialAmount","totalCurrent","currentAmount","totalPerformance","pieData","map","name","value","color","type","investmentByTypeData","typeMap","Map","forEach","label","set","get","Array","from","entries","_ref3","_investmentTypes$find","find","t","performanceChartData","data","length","startDate","Date","min","getTime","endDate","date","setMonth","getMonth","monthKey","concat","getFullYear","toString","padStart","profitLoss","push","_jsx","children","_jsxs","Box","sx","textAlign","py","display","flexDirection","alignItems","justifyContent","width","height","bgcolor","alpha","primary","light","mb","TrendingUp","fontSize","Typography","variant","fontWeight","Grid","container","m","p","item","xs","sm","position","content","bottom","left","backgroundColor","main","md","Paper","elevation","border","info","success","gap","ArrowUpward","window","innerWidth","error","ArrowDownward","mr","toFixed","mt","ResponsiveContainer","LineChart","dataKey","tick","tickFormatter","split","toLocaleString","RechartsTooltip","formatter","contentStyle","Legend","Line","stroke","strokeWidth","dot","r","fill","activeDot","flex","minHeight","PieChart","Pie","cx","cy","labelLine","outerRadius","innerRadius","paddingAngle","_ref4","percent","entry","index","Cell","paper","wrapperStyle","paddingTop","iconSize","iconType","axisLine","tickLine","radius","barSize"],"sourceRoot":""}