{"version":3,"file":"static/js/6631.af377d33.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/@tsparticles/move-base/browser/Utils.js","../node_modules/@tsparticles/move-base/browser/BaseMover.js","../node_modules/@tsparticles/shape-circle/browser/Utils.js","../node_modules/@tsparticles/shape-circle/browser/CircleDrawer.js","../node_modules/@tsparticles/updater-color/browser/ColorUpdater.js","../node_modules/@tsparticles/plugin-hex-color/browser/HexColorManager.js","../node_modules/@tsparticles/plugin-hsl-color/browser/HslColorManager.js","../node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js","../node_modules/@tsparticles/updater-out-modes/browser/BounceOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/Utils.js","../node_modules/@tsparticles/updater-out-modes/browser/DestroyOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/NoneOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/OutOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js","../node_modules/@tsparticles/plugin-rgb-color/browser/RgbColorManager.js","../node_modules/@tsparticles/updater-size/browser/SizeUpdater.js","../node_modules/@tsparticles/basic/browser/index.js","../node_modules/@tsparticles/plugin-hex-color/browser/index.js","../node_modules/@tsparticles/plugin-hsl-color/browser/index.js","../node_modules/@tsparticles/plugin-rgb-color/browser/index.js","../node_modules/@tsparticles/move-base/browser/index.js","../node_modules/@tsparticles/shape-circle/browser/index.js","../node_modules/@tsparticles/updater-color/browser/index.js","../node_modules/@tsparticles/updater-opacity/browser/index.js","../node_modules/@tsparticles/updater-out-modes/browser/index.js","../node_modules/@tsparticles/updater-size/browser/index.js","../node_modules/@tsparticles/shape-emoji/browser/EmojiDrawer.js","../node_modules/@tsparticles/shape-emoji/browser/Utils.js","../node_modules/@tsparticles/interaction-external-attract/browser/Utils.js","../node_modules/@tsparticles/interaction-external-attract/browser/Options/Classes/Attract.js","../node_modules/@tsparticles/interaction-external-attract/browser/Attractor.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Options/Classes/Bounce.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleBase.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleDiv.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/Bubble.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Enums.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Utils.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Bubbler.js","../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/ConnectLinks.js","../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/Connect.js","../node_modules/@tsparticles/interaction-external-connect/browser/Utils.js","../node_modules/@tsparticles/interaction-external-connect/browser/Connector.js","../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/GrabLinks.js","../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/Grab.js","../node_modules/@tsparticles/interaction-external-grab/browser/Utils.js","../node_modules/@tsparticles/interaction-external-grab/browser/Grabber.js","../node_modules/@tsparticles/interaction-external-pause/browser/Pauser.js","../node_modules/@tsparticles/interaction-external-push/browser/Options/Classes/Push.js","../node_modules/@tsparticles/interaction-external-push/browser/Pusher.js","../node_modules/@tsparticles/interaction-external-remove/browser/Options/Classes/Remove.js","../node_modules/@tsparticles/interaction-external-remove/browser/Remover.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseBase.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseDiv.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/Repulse.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Repulser.js","../node_modules/@tsparticles/interaction-external-slow/browser/Options/Classes/Slow.js","../node_modules/@tsparticles/interaction-external-slow/browser/Slower.js","../node_modules/@tsparticles/shape-image/browser/Utils.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Constants.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/ByteStream.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Enums/DisposalMethod.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Types/GIFDataHeaders.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Utils.js","../node_modules/@tsparticles/shape-image/browser/ImageDrawer.js","../node_modules/@tsparticles/shape-image/browser/Options/Classes/Preload.js","../node_modules/@tsparticles/shape-image/browser/ImagePreloader.js","../node_modules/@tsparticles/shape-image/browser/index.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDelay.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDuration.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/Life.js","../node_modules/@tsparticles/updater-life/browser/LifeUpdater.js","../node_modules/@tsparticles/updater-life/browser/Utils.js","../node_modules/@tsparticles/shape-line/browser/LineDrawer.js","../node_modules/@tsparticles/shape-line/browser/Utils.js","../node_modules/@tsparticles/move-parallax/browser/ParallaxMover.js","../node_modules/@tsparticles/interaction-particles-attract/browser/Attractor.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Absorb.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Bounce.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/ResolveCollision.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Destroy.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Collider.js","../node_modules/@tsparticles/interaction-particles-links/browser/CircleWarp.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksShadow.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksTriangle.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/Links.js","../node_modules/@tsparticles/interaction-particles-links/browser/Linker.js","../node_modules/@tsparticles/interaction-particles-links/browser/Utils.js","../node_modules/@tsparticles/interaction-particles-links/browser/LinkInstance.js","../node_modules/@tsparticles/interaction-particles-links/browser/LinksPlugin.js","../node_modules/@tsparticles/interaction-particles-links/browser/index.js","../node_modules/@tsparticles/interaction-particles-links/browser/interaction.js","../node_modules/@tsparticles/interaction-particles-links/browser/plugin.js","../node_modules/@tsparticles/shape-polygon/browser/Utils.js","../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawerBase.js","../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawer.js","../node_modules/@tsparticles/shape-polygon/browser/TriangleDrawer.js","../node_modules/@tsparticles/shape-polygon/browser/index.js","../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/RotateAnimation.js","../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/Rotate.js","../node_modules/@tsparticles/updater-rotate/browser/RotateUpdater.js","../node_modules/@tsparticles/shape-square/browser/Utils.js","../node_modules/@tsparticles/shape-square/browser/SquareDrawer.js","../node_modules/@tsparticles/shape-star/browser/Utils.js","../node_modules/@tsparticles/shape-star/browser/StarDrawer.js","../node_modules/@tsparticles/updater-stroke-color/browser/StrokeColorUpdater.js","../node_modules/@tsparticles/slim/browser/index.js","../node_modules/@tsparticles/move-parallax/browser/index.js","../node_modules/@tsparticles/interaction-external-attract/browser/index.js","../node_modules/@tsparticles/interaction-external-bounce/browser/index.js","../node_modules/@tsparticles/interaction-external-bubble/browser/index.js","../node_modules/@tsparticles/interaction-external-connect/browser/index.js","../node_modules/@tsparticles/interaction-external-grab/browser/index.js","../node_modules/@tsparticles/interaction-external-pause/browser/index.js","../node_modules/@tsparticles/interaction-external-push/browser/index.js","../node_modules/@tsparticles/interaction-external-remove/browser/index.js","../node_modules/@tsparticles/interaction-external-repulse/browser/index.js","../node_modules/@tsparticles/interaction-external-slow/browser/index.js","../node_modules/@tsparticles/interaction-particles-attract/browser/index.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/index.js","../node_modules/@tsparticles/plugin-easing-quad/browser/index.js","../node_modules/@tsparticles/shape-emoji/browser/index.js","../node_modules/@tsparticles/shape-line/browser/index.js","../node_modules/@tsparticles/shape-square/browser/index.js","../node_modules/@tsparticles/shape-star/browser/index.js","../node_modules/@tsparticles/updater-life/browser/index.js","../node_modules/@tsparticles/updater-rotate/browser/index.js","../node_modules/@tsparticles/updater-stroke-color/browser/index.js","../node_modules/@mui/system/esm/createStyled.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@tsparticles/react/dist/Particles.js","../node_modules/@tsparticles/react/dist/index.js","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Constants.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/MoveDirection.js","../node_modules/@tsparticles/engine/browser/Utils/TypeUtils.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Vectors.js","../node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/AnimationMode.js","../node_modules/@tsparticles/engine/browser/Enums/AnimationStatus.js","../node_modules/@tsparticles/engine/browser/Enums/Types/DestroyType.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/PixelMode.js","../node_modules/@tsparticles/engine/browser/Enums/Types/StartValueType.js","../node_modules/@tsparticles/engine/browser/Utils/Utils.js","../node_modules/@tsparticles/engine/browser/Enums/Types/AlterType.js","../node_modules/@tsparticles/engine/browser/Enums/InteractivityDetect.js","../node_modules/@tsparticles/engine/browser/Enums/Types/EventType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/DivType.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/ThemeMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/CollisionMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/OutMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/LimitMode.js","../node_modules/@tsparticles/engine/browser/Enums/Types/InteractorType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/ParticleOutType.js","../node_modules/@tsparticles/engine/browser/Types/RangeType.js","../node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js","../node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js","../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Options/Classes/OptionsColor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Background/Background.js","../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ManualParticle.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Responsive.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/Theme.js","../node_modules/@tsparticles/engine/browser/Options/Classes/AnimationOptions.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ColorAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/HslAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/AnimatableColor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js","../node_modules/@tsparticles/engine/browser/Utils/OptionsUtils.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Options.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Particle.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Ranges.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js","../node_modules/@tsparticles/engine/browser/Utils/EventDispatcher.js","../node_modules/@tsparticles/engine/browser/Core/Engine.js","../node_modules/@tsparticles/engine/browser/Core/Utils/ExternalInteractorBase.js","../node_modules/@tsparticles/engine/browser/Core/Utils/ParticlesInteractorBase.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/RotateDirection.js","../node_modules/@tsparticles/engine/browser/Enums/Types/GradientType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/EasingType.js","../node_modules/@tsparticles/engine/browser/index.js","../node_modules/@tsparticles/engine/browser/init.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import { RotateDirection, clamp, getDistance, getDistances, getRandom, getRangeValue, } from \"@tsparticles/engine\";\nconst half = 0.5, double = 2, minVelocity = 0, identity = 1, moveSpeedFactor = 60, minSpinRadius = 0, spinFactor = 0.01, doublePI = Math.PI * double;\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    const hasHDistance = (hDistance && dxFixed >= hDistance) ?? false, hasVDistance = (vDistance && dyFixed >= vDistance) ?? false;\n    if ((hasHDistance || hasVDistance) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y * half - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x * half - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance &&\n            ((pos.x < initialPosition.x && vel.x < minVelocity) || (pos.x > initialPosition.x && vel.x > minVelocity))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance &&\n            ((pos.y < initialPosition.y && vel.y < minVelocity) || (pos.y > initialPosition.y && vel.y > minVelocity))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -identity : identity;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (moveSpeedFactor * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y +=\n            (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (moveSpeedFactor * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > minVelocity &&\n        ((!gravityOptions.inverse && velocity.y >= minVelocity && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= minVelocity && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (identity - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const spinClockwise = particle.spin.direction === RotateDirection.clockwise, updateFunc = {\n        x: spinClockwise ? Math.cos : Math.sin,\n        y: spinClockwise ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height), halfMaxSize = maxCanvasSize * half;\n    if (particle.spin.radius > halfMaxSize) {\n        particle.spin.radius = halfMaxSize;\n        particle.spin.acceleration *= -identity;\n    }\n    else if (particle.spin.radius < minSpinRadius) {\n        particle.spin.radius = minSpinRadius;\n        particle.spin.acceleration *= -identity;\n    }\n    particle.spin.angle += moveSpeed * spinFactor * (identity - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -identity, identity);\n        particle.velocity.y = clamp(particle.velocity.y, -identity, identity);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : identity;\n}\nexport function initSpin(particle) {\n    const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n    if (!spinOptions.enable) {\n        return;\n    }\n    const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinFactor = 0.01, spinCenter = {\n        x: spinPos.x * spinFactor * container.canvas.size.width,\n        y: spinPos.y * spinFactor * container.canvas.size.height,\n    }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n    particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n    particle.spin = {\n        center: spinCenter,\n        direction: particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise,\n        angle: getRandom() * doublePI,\n        radius: distance,\n        acceleration: particle.retina.spinAcceleration,\n    };\n}\n","import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","const double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 };\nexport function drawCircle(data) {\n    const { context, particle, radius } = data;\n    if (!particle.circleRange) {\n        particle.circleRange = { min: minAngle, max: doublePI };\n    }\n    const circleRange = particle.circleRange;\n    context.arc(origin.x, origin.y, radius, circleRange.min, circleRange.max, false);\n}\n","import { degToRad, isObject } from \"@tsparticles/engine\";\nimport { drawCircle } from \"./Utils.js\";\nconst sides = 12, maxAngle = 360, minAngle = 0;\nexport class CircleDrawer {\n    constructor() {\n        this.validTypes = [\"circle\"];\n    }\n    draw(data) {\n        drawCircle(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: maxAngle,\n            min: minAngle,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: minAngle,\n                max: degToRad(angle),\n            }\n            : { min: degToRad(angle.min), max: degToRad(angle.max) };\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(this._engine, particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this._container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle.color, delta);\n    }\n}\n","var RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 4] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nconst shorthandHexRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, hexRadix = 16, defaultAlpha = 1, alphaFactor = 0xff;\nexport class HexColorManager {\n    constructor() {\n        this.key = \"hex\";\n        this.stringPrefix = \"#\";\n    }\n    handleColor(color) {\n        return this._parseString(color.value);\n    }\n    handleRangeColor(color) {\n        return this._parseString(color.value);\n    }\n    parseString(input) {\n        return this._parseString(input);\n    }\n    _parseString(hexColor) {\n        if (typeof hexColor !== \"string\") {\n            return;\n        }\n        if (!hexColor?.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const hexFixed = hexColor.replace(shorthandHexRegex, (_, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        }), result = hexRegex.exec(hexFixed);\n        return result\n            ? {\n                a: result[RgbIndexes.a] !== undefined\n                    ? parseInt(result[RgbIndexes.a], hexRadix) / alphaFactor\n                    : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], hexRadix),\n                g: parseInt(result[RgbIndexes.g], hexRadix),\n                r: parseInt(result[RgbIndexes.r], hexRadix),\n            }\n            : undefined;\n    }\n}\n","import { getRangeValue, hslToRgb, hslaToRgba, parseAlpha, } from \"@tsparticles/engine\";\nvar HslIndexes;\n(function (HslIndexes) {\n    HslIndexes[HslIndexes[\"h\"] = 1] = \"h\";\n    HslIndexes[HslIndexes[\"s\"] = 2] = \"s\";\n    HslIndexes[HslIndexes[\"l\"] = 3] = \"l\";\n    HslIndexes[HslIndexes[\"a\"] = 5] = \"a\";\n})(HslIndexes || (HslIndexes = {}));\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*[\\s,]\\s*(\\d+)%\\s*[\\s,]\\s*(\\d+)%\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), minLength = 4, defaultAlpha = 1, radix = 10;\n        return result\n            ? hslaToRgba({\n                a: result.length > minLength ? parseAlpha(result[HslIndexes.a]) : defaultAlpha,\n                h: parseInt(result[HslIndexes.h], radix),\n                l: parseInt(result[HslIndexes.l], radix),\n                s: parseInt(result[HslIndexes.s], radix),\n            })\n            : undefined;\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n","import { OutMode, calculateBounds, } from \"@tsparticles/engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils.js\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            OutMode.bounce,\n            OutMode.split,\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { OutMode, OutModeDirection, getRangeValue } from \"@tsparticles/engine\";\nconst minVelocity = 0, boundsMin = 0;\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.left && data.direction !== OutModeDirection.right)) {\n        return;\n    }\n    if (data.bounds.right < boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.right &&\n        data.bounds.right >= data.canvasSize.width &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.left && data.bounds.left <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.bottom && data.direction !== OutModeDirection.top)) {\n        return;\n    }\n    if (data.bounds.bottom < boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.bottom &&\n        data.bounds.bottom >= data.canvasSize.height &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.top && data.bounds.top <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\n","import { OutMode, ParticleOutType, Vector, getDistances, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.destroy];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.normal:\n            case ParticleOutType.outside:\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case ParticleOutType.inside: {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter), { x: vx, y: vy } = particle.velocity;\n                if ((vx < minVelocity && dx > particle.moveCenter.radius) ||\n                    (vy < minVelocity && dy > particle.moveCenter.radius) ||\n                    (vx >= minVelocity && dx < -particle.moveCenter.radius) ||\n                    (vy >= minVelocity && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, particle.group, true);\n    }\n}\n","import { OutMode, OutModeDirection, Vector, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.none];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === OutModeDirection.left || direction === OutModeDirection.right)) ??\n            (particle.options.move.distance.vertical &&\n                (direction === OutModeDirection.top || direction === OutModeDirection.bottom))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container, canvasSize = container.canvas.size, pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > minVelocity && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < minVelocity && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > minVelocity && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < minVelocity && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === OutModeDirection.bottom) ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, ParticleOutType, Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"@tsparticles/engine\";\nconst minVelocity = 0, minDistance = 0;\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.out];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.inside: {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= minVelocity && dx >= minDistance) ||\n                    (vy <= minVelocity && dy >= minDistance) ||\n                    (vx >= minVelocity && dx <= minDistance) ||\n                    (vy >= minVelocity && dy <= minDistance)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case ParticleOutType.outside: {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case ParticleOutType.normal: {\n                        const warp = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === OutModeDirection.right &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === OutModeDirection.bottom &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._addUpdaterIfMissing = (particle, outMode, getUpdater) => {\n            const outModes = particle.options.move.outModes;\n            if (!this.updaters.has(outMode) && checkOutMode(outModes, outMode)) {\n                this.updaters.set(outMode, getUpdater(this.container));\n            }\n        };\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters.values()) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = new Map();\n    }\n    init(particle) {\n        this._addUpdaterIfMissing(particle, OutMode.bounce, container => new BounceOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.out, container => new OutOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.destroy, container => new DestroyOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.none, container => new NoneOutMode(container));\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n    }\n}\n","import { getRangeValue, parseAlpha, } from \"@tsparticles/engine\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 5] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), radix = 10, minLength = 4, defaultAlpha = 1;\n        return result\n            ? {\n                a: result.length > minLength ? parseAlpha(result[RgbIndexes.a]) : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], radix),\n                g: parseInt(result[RgbIndexes.g], radix),\n                r: parseInt(result[RgbIndexes.r], radix),\n            }\n            : undefined;\n    }\n}\n","import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n    }\n}\n","import { loadBaseMover } from \"@tsparticles/move-base\";\nimport { loadCircleShape } from \"@tsparticles/shape-circle\";\nimport { loadColorUpdater } from \"@tsparticles/updater-color\";\nimport { loadHexColorPlugin } from \"@tsparticles/plugin-hex-color\";\nimport { loadHslColorPlugin } from \"@tsparticles/plugin-hsl-color\";\nimport { loadOpacityUpdater } from \"@tsparticles/updater-opacity\";\nimport { loadOutModesUpdater } from \"@tsparticles/updater-out-modes\";\nimport { loadRgbColorPlugin } from \"@tsparticles/plugin-rgb-color\";\nimport { loadSizeUpdater } from \"@tsparticles/updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadHexColorPlugin(engine, false);\n    await loadHslColorPlugin(engine, false);\n    await loadRgbColorPlugin(engine, false);\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { HexColorManager } from \"./HexColorManager.js\";\nexport async function loadHexColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HexColorManager(), refresh);\n}\n","import { HslColorManager } from \"./HslColorManager.js\";\nexport async function loadHslColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new HslColorManager(), refresh);\n}\n","import { RgbColorManager } from \"./RgbColorManager.js\";\nexport async function loadRgbColorPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addColorManager(new RgbColorManager(), refresh);\n}\n","import { BaseMover } from \"./BaseMover.js\";\nexport async function loadBaseMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"base\", () => {\n        return Promise.resolve(new BaseMover());\n    }, refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer.js\";\nexport async function loadCircleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater.js\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"color\", container => {\n        return Promise.resolve(new ColorUpdater(container, engine));\n    }, refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater.js\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"opacity\", container => {\n        return Promise.resolve(new OpacityUpdater(container));\n    }, refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater.js\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"outModes\", container => {\n        return Promise.resolve(new OutOfCanvasUpdater(container));\n    }, refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater.js\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"size\", () => {\n        return Promise.resolve(new SizeUpdater());\n    }, refresh);\n}\n","import { executeOnSingleOrMultiple, getRangeMax, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawEmoji } from \"./Utils.js\";\nconst defaultFont = '\"Twemoji Mozilla\", Apple Color Emoji, \"Segoe UI Emoji\", \"Noto Color Emoji\", \"EmojiOne Color\"', noPadding = 0;\nexport class EmojiDrawer {\n    constructor() {\n        this.validTypes = [\"emoji\"];\n        this._emojiShapeDict = new Map();\n    }\n    destroy() {\n        for (const [key, data] of this._emojiShapeDict) {\n            if (data instanceof ImageBitmap) {\n                data?.close();\n            }\n            this._emojiShapeDict.delete(key);\n        }\n    }\n    draw(data) {\n        const key = data.particle.emojiDataKey;\n        if (!key) {\n            return;\n        }\n        const image = this._emojiShapeDict.get(key);\n        if (!image) {\n            return;\n        }\n        drawEmoji(data, image);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (!validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            return;\n        }\n        const promises = [loadFont(defaultFont)], shapeOptions = validTypes\n            .map(t => options.particles.shape.options[t])\n            .find(t => !!t);\n        if (shapeOptions) {\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                if (shape.font) {\n                    promises.push(loadFont(shape.font));\n                }\n            });\n        }\n        await Promise.all(promises);\n    }\n    particleDestroy(particle) {\n        particle.emojiDataKey = undefined;\n    }\n    particleInit(_container, particle) {\n        const double = 2, shapeData = particle.shapeData;\n        if (!shapeData?.value) {\n            return;\n        }\n        const emoji = itemFromSingleOrMultiple(shapeData.value, particle.randomIndexData);\n        if (!emoji) {\n            return;\n        }\n        const emojiOptions = typeof emoji === \"string\"\n            ? {\n                font: shapeData.font ?? defaultFont,\n                padding: shapeData.padding ?? noPadding,\n                value: emoji,\n            }\n            : {\n                font: defaultFont,\n                padding: noPadding,\n                ...shapeData,\n                ...emoji,\n            }, font = emojiOptions.font, value = emojiOptions.value;\n        const key = `${value}_${font}`;\n        if (this._emojiShapeDict.has(key)) {\n            particle.emojiDataKey = key;\n            return;\n        }\n        const padding = emojiOptions.padding * double, maxSize = getRangeMax(particle.size.value), fullSize = maxSize + padding, canvasSize = fullSize * double;\n        let image;\n        if (typeof OffscreenCanvas !== \"undefined\") {\n            const canvas = new OffscreenCanvas(canvasSize, canvasSize), context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas.transferToImageBitmap();\n        }\n        else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvasSize;\n            canvas.height = canvasSize;\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas;\n        }\n        this._emojiShapeDict.set(key, image);\n        particle.emojiDataKey = key;\n    }\n}\n","export function drawEmoji(data, image) {\n    const { context, opacity } = data, half = 0.5, previousAlpha = context.globalAlpha;\n    if (!image) {\n        return;\n    }\n    const diameter = image.width, radius = diameter * half;\n    context.globalAlpha = opacity;\n    context.drawImage(image, -radius, -radius, diameter, diameter);\n    context.globalAlpha = previousAlpha;\n}\n","import { Circle, Vector, clamp, getDistances, } from \"@tsparticles/engine\";\nconst minFactor = 1, identity = 1, minRadius = 0;\nfunction processAttract(engine, container, position, attractRadius, area, queryCb) {\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    if (!attractOptions) {\n        return;\n    }\n    const query = container.particles.quadTree.query(area, queryCb);\n    for (const particle of query) {\n        const { dx, dy, distance } = getDistances(particle.position, position), velocity = attractOptions.speed * attractOptions.factor, attractFactor = clamp(engine.getEasing(attractOptions.easing)(identity - distance / attractRadius) * velocity, minFactor, attractOptions.maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * attractFactor, !distance ? velocity : (dy / distance) * attractFactor);\n        particle.position.subFrom(normVec);\n    }\n}\nexport function clickAttract(engine, container, enabledCb) {\n    if (!container.attract) {\n        container.attract = { particles: [] };\n    }\n    const { attract } = container;\n    if (!attract.finish) {\n        if (!attract.count) {\n            attract.count = 0;\n        }\n        attract.count++;\n        if (attract.count === container.particles.count) {\n            attract.finish = true;\n        }\n    }\n    if (attract.clicking) {\n        const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < minRadius || !mousePos) {\n            return;\n        }\n        processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n    }\n    else if (attract.clicking === false) {\n        attract.particles = [];\n    }\n}\nexport function hoverAttract(engine, container, enabledCb) {\n    const mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n    if (!attractRadius || attractRadius < minRadius || !mousePos) {\n        return;\n    }\n    processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n}\n","import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = EasingType.easeOutQuad;\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { clickAttract, hoverAttract } from \"./Utils.js\";\nimport { Attract } from \"./Options/Classes/Attract.js\";\nconst attractMode = \"attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== attractMode) {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, { enable: hoverEnabled, mode: hoverMode } = events.onHover, { enable: clickEnabled, mode: clickMode } = events.onClick;\n        if (mouseMoveStatus && hoverEnabled && isInArray(attractMode, hoverMode)) {\n            hoverAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n        else if (clickEnabled && isInArray(attractMode, clickMode)) {\n            clickAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(attractMode, hoverMode) || isInArray(attractMode, clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Circle, DivType, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach(item => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === DivType.circle\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            mouseBounce(this.container, p => this.isEnabled(p));\n        }\n        else {\n            divBounce(this.container, divs, bounceMode, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, isNull, } from \"@tsparticles/engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, color => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nimport { BubbleDiv } from \"./BubbleDiv.js\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","export var ProcessBubbleType;\n(function (ProcessBubbleType) {\n    ProcessBubbleType[\"color\"] = \"color\";\n    ProcessBubbleType[\"opacity\"] = \"opacity\";\n    ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType || (ProcessBubbleType = {}));\n","import { clamp } from \"@tsparticles/engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, millisecondsToSeconds, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"@tsparticles/engine\";\nimport { Bubble } from \"./Options/Classes/Bubble.js\";\nimport { ProcessBubbleType } from \"./Enums.js\";\nimport { calculateBubbleValue } from \"./Utils.js\";\nconst bubbleMode = \"bubble\", minDistance = 0, defaultClickTime = 0, double = 2, defaultOpacity = 1, ratioOffset = 1, defaultBubbleValue = 0, minRatio = 0, half = 0.5, defaultRatio = 1;\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, p => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime ?? defaultClickTime)) /\n                    millisecondsToSeconds;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * double) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: ProcessBubbleType.size,\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? defaultOpacity,\n                    },\n                    type: ProcessBubbleType.opacity,\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance || !mousePos) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = ratioOffset - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= minRatio && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(this._engine, bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, ratioOffset - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? defaultOpacity, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value ?? defaultBubbleValue, type = data.type;\n            if (!bubbleDistance || bubbleDistance < minDistance || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, p => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, defaultRatio, divBubble);\n                    this._hoverBubbleOpacity(particle, defaultRatio, divBubble);\n                    this._hoverBubbleColor(particle, defaultRatio, divBubble);\n                }\n            });\n        };\n        this._engine = engine;\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== bubbleMode) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(bubbleMode, hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(bubbleMode, clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(bubbleMode, divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(bubbleMode, onDiv);\n        if (!(divBubble || (onHover.enable && !!mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(bubbleMode, onHover.mode) || isInArray(bubbleMode, onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { ConnectLinks } from \"./ConnectLinks.js\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { clamp, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"@tsparticles/engine\";\nconst gradientMin = 0, gradientMax = 1, defaultLinksWidth = 0;\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(gradientMin, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(clamp(gradStop, gradientMin, gradientMax), getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(gradientMax, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw(ctx => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? defaultLinksWidth, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"@tsparticles/engine\";\nimport { Connect } from \"./Options/Classes/Connect.js\";\nimport { drawConnection } from \"./Utils.js\";\nconst connectMode = \"connect\", minDistance = 0;\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position, { connectModeDistance, connectModeRadius } = container.retina;\n            if (!connectModeDistance ||\n                connectModeDistance < minDistance ||\n                !connectModeRadius ||\n                connectModeRadius < minDistance ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            query.forEach((p1, i) => {\n                const pos1 = p1.getPosition(), indexOffset = 1;\n                for (const p2 of query.slice(i + indexOffset)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n            });\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(connectMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { GrabLinks } from \"./GrabLinks.js\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"@tsparticles/engine\";\nconst defaultWidth = 0;\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw(ctx => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? defaultWidth, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Grab } from \"./Options/Classes/Grab.js\";\nimport { drawGrab } from \"./Utils.js\";\nconst grabMode = \"grab\", minDistance = 0, minOpacity = 0;\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < minDistance) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= minOpacity) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(grabMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst pauseMode = \"pause\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pauseMode) {\n                return;\n            }\n            const container = this.container;\n            if (container.animationStatus) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map(t => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"@tsparticles/engine\";\nimport { Push } from \"./Options/Classes/Push.js\";\nconst pushMode = \"push\", minQuantity = 0;\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pushMode) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= minQuantity) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            void container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"@tsparticles/engine\";\nimport { Remove } from \"./Options/Classes/Remove.js\";\nconst removeMode = \"remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== removeMode) {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = EasingType.easeOutQuad;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nimport { RepulseDiv } from \"./RepulseDiv.js\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, isDivModeEnabled, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Repulse } from \"./Options/Classes/Repulse.js\";\nconst repulseMode = \"repulse\", minDistance = 0, repulseRadiusFactor = 6, repulseRadiusPower = 3, squarePower = 2, minRadius = 0, minSpeed = 0, easingOffset = 1, half = 0.5;\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse ?? { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < minDistance) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / repulseRadiusFactor, repulseRadiusPower), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, p => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** squarePower, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < minRadius || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, p => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const { easing, speed, factor, maxSpeed } = repulseOptions, easingFunc = this._engine.getEasing(easing), velocity = (divRepulse?.speed ?? speed) * factor;\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), repulseFactor = clamp(easingFunc(easingOffset - distance / repulseRadius) * velocity, minSpeed, maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * repulseFactor, !distance ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== repulseMode) {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(repulseMode, hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(repulseMode, clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(repulseMode, divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(repulseMode, divs);\n        if (!(divRepulse || (hover.enable && !!mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(repulseMode, hoverMode) || isInArray(repulseMode, clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"@tsparticles/engine\";\nimport { Slow } from \"./Options/Classes/Slow.js\";\nconst slowMode = \"slow\", minRadius = 0;\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(slowMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < minRadius || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"@tsparticles/engine\";\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise(resolve => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        const increment = 2, previous = 1, shift = 8;\n        this.pos += increment;\n        return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        const minCount = 0, emptySize = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== emptySize);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = this.data[this.pos], len = 0;\n        const emptySize = 0, increment = 1;\n        for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        size = this.data[this.pos++];\n        for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n            for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {\n        }\n        this.pos++;\n    }\n}\n","export var DisposalMethod;\n(function (DisposalMethod) {\n    DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n    DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n    DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n    DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n    DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n    DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n    DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n    DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));\n","export var GIFDataHeaders;\n(function (GIFDataHeaders) {\n    GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n    GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n    GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));\n","import { loadImage } from \"../Utils.js\";\nimport { InterlaceOffsets, InterlaceSteps } from \"./Constants.js\";\nimport { ByteStream } from \"./ByteStream.js\";\nimport { DisposalMethod } from \"./Enums/DisposalMethod.js\";\nimport { GIFDataHeaders } from \"./Types/GIFDataHeaders.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n}, defaultFrame = 0, half = 0.5, initialTime = 0, firstIndex = 0, defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.GraphicsControlExtension: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case GIFDataHeaders.ApplicationExtension: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case GIFDataHeaders.CommentExtension: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case GIFDataHeaders.PlainTextExtension: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        if (index !== getTransparencyIndex(null)) {\n            return { r, g, b, a: 255 };\n        }\n        return { r, g, b, a: avgAlpha ? ~~((r + g + b) / 3) : 0 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                let pixelPos = 0, lineIndex = 0, exit = false;\n                while (!exit) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (const item of dic[code]) {\n                            const { r, g, b, a } = getColor(item);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            exit = true;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        let code = 0, size = minCodeSize + 1, pos = 0, pixelPos = -4, exit = false;\n        const dic = [[0]];\n        while (!exit) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    exit = true;\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (const item of dic[code]) {\n                    const { r, g, b, a } = getColor(item);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.EndOfFile:\n            return true;\n        case GIFDataHeaders.Image:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case GIFDataHeaders.Extension:\n            parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: DisposalMethod.Replace,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\nexport function drawGif(data) {\n    const { context, radius, particle, delta } = data, image = particle.image;\n    if (!image?.gifData || !image.gif) {\n        return;\n    }\n    const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n    if (!offscreenContext) {\n        throw new Error(\"could not create offscreen canvas context\");\n    }\n    offscreenContext.imageSmoothingQuality = \"low\";\n    offscreenContext.imageSmoothingEnabled = false;\n    offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    if (particle.gifLoopCount === undefined) {\n        particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n    }\n    let frameIndex = particle.gifFrame ?? defaultFrame;\n    const pos = { x: -image.gifData.width * half, y: -image.gifData.height * half }, frame = image.gifData.frames[frameIndex];\n    if (particle.gifTime === undefined) {\n        particle.gifTime = initialTime;\n    }\n    if (!frame.bitmap) {\n        return;\n    }\n    context.scale(radius / image.gifData.width, radius / image.gifData.height);\n    switch (frame.disposalMethod) {\n        case DisposalMethod.UndefinedA:\n        case DisposalMethod.UndefinedB:\n        case DisposalMethod.UndefinedC:\n        case DisposalMethod.UndefinedD:\n        case DisposalMethod.Replace:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            break;\n        case DisposalMethod.Combine:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            break;\n        case DisposalMethod.RestoreBackground:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            if (!image.gifData.globalColorTable.length) {\n                offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n            }\n            else {\n                offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n            }\n            break;\n        case DisposalMethod.RestorePrevious:\n            {\n                const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                context.drawImage(offscreenCanvas, pos.x, pos.y);\n                offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n            }\n            break;\n    }\n    particle.gifTime += delta.value;\n    if (particle.gifTime > frame.delayTime) {\n        particle.gifTime -= frame.delayTime;\n        if (++frameIndex >= image.gifData.frames.length) {\n            if (--particle.gifLoopCount <= defaultLoopCount) {\n                return;\n            }\n            frameIndex = firstIndex;\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        }\n        particle.gifFrame = frameIndex;\n    }\n    context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n        if (!image.gifLoopCount) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\n","import { errorPrefix } from \"@tsparticles/engine\";\nimport { replaceImageColor } from \"./Utils.js\";\nimport { drawGif } from \"./GifUtils/Utils.js\";\nconst double = 2, defaultAlpha = 1, sides = 12, defaultRatio = 1;\nexport class ImageDrawer {\n    constructor(engine) {\n        this.validTypes = [\"image\", \"images\"];\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(data) {\n        const { context, radius, particle, opacity } = data, image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            drawGif(data);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            }, diameter = radius * double;\n            context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n        }\n        context.globalAlpha = defaultAlpha;\n    }\n    getSidesCount() {\n        return sides;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            void this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        void (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height\n                        ? imageData.width / imageData.height\n                        : (image.ratio ?? defaultRatio),\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.shapeFill, close = imageData.close ?? particle.shapeClose, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.shapeFill = imageShape.fill;\n            particle.shapeClose = imageShape.close;\n        })();\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadImage } from \"./Utils.js\";\nimport { ImageDrawer } from \"./ImageDrawer.js\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader.js\";\nimport { errorPrefix } from \"@tsparticles/engine\";\nimport { loadGifImage } from \"./GifUtils/Utils.js\";\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                imageFunc = loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape(new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { LifeDelay } from \"./LifeDelay.js\";\nimport { LifeDuration } from \"./LifeDuration.js\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Life } from \"./Options/Classes/Life.js\";\nimport { updateLife } from \"./Utils.js\";\nconst noTime = 0, identity = 1, infiniteValue = -1;\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            delayTime: noTime,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            time: noTime,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= noTime) {\n            particle.life.duration = infiniteValue;\n        }\n        if (particle.life.count <= noTime) {\n            particle.life.count = infiniteValue;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > noTime;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        updateLife(particle, delta, this.container.canvas.size);\n    }\n}\n","import { getRangeValue, millisecondsToSeconds, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst noTime = 0, infiniteValue = -1, noLife = 0, minCanvasSize = 0;\nexport function updateLife(particle, delta, canvasSize) {\n    if (!particle.life) {\n        return;\n    }\n    const life = particle.life;\n    let justSpawned = false;\n    if (particle.spawning) {\n        life.delayTime += delta.value;\n        if (life.delayTime >= particle.life.delay) {\n            justSpawned = true;\n            particle.spawning = false;\n            life.delayTime = noTime;\n            life.time = noTime;\n        }\n        else {\n            return;\n        }\n    }\n    if (life.duration === infiniteValue) {\n        return;\n    }\n    if (particle.spawning) {\n        return;\n    }\n    if (justSpawned) {\n        life.time = noTime;\n    }\n    else {\n        life.time += delta.value;\n    }\n    if (life.time < life.duration) {\n        return;\n    }\n    life.time = noTime;\n    if (particle.life.count > noLife) {\n        particle.life.count--;\n    }\n    if (particle.life.count === noLife) {\n        particle.destroy();\n        return;\n    }\n    const widthRange = setRangeValue(minCanvasSize, canvasSize.width), heightRange = setRangeValue(minCanvasSize, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = noTime;\n    life.time = noTime;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    if (lifeOptions) {\n        life.delay = getRangeValue(lifeOptions.delay.value) * millisecondsToSeconds;\n        life.duration = getRangeValue(lifeOptions.duration.value) * millisecondsToSeconds;\n    }\n}\n","import { drawLine } from \"./Utils.js\";\nconst sides = 1;\nexport class LineDrawer {\n    constructor() {\n        this.validTypes = [\"line\"];\n    }\n    draw(data) {\n        drawLine(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","export function drawLine(data) {\n    const { context, particle, radius } = data, shapeData = particle.shapeData, centerY = 0;\n    context.moveTo(-radius, centerY);\n    context.lineTo(radius, centerY);\n    context.lineCap = shapeData?.cap ?? \"butt\";\n}\n","import { isSsr } from \"@tsparticles/engine\";\nconst half = 0.5;\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width * half,\n            y: canvasSize.height * half,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParticlesInteractorBase, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nconst attractFactor = 1000, identity = 1;\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1) {\n        const container = this.container;\n        if (p1.attractDistance === undefined) {\n            p1.attractDistance = getRangeValue(p1.options.move.attract.distance) * container.retina.pixelRatio;\n        }\n        const distance = p1.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * attractFactor), ay = dy / (rotate.y * attractFactor), p1Factor = p2.size.value / p1.size.value, p2Factor = identity / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"@tsparticles/engine\";\nconst half = 0.5, absorbFactor = 10, minAbsorbFactor = 0;\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / absorbFactor, minAbsorbFactor, r2);\n    p1.size.value += factor * half;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"@tsparticles/engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { CollisionMode } from \"@tsparticles/engine\";\nimport { absorb } from \"./Absorb.js\";\nimport { bounce } from \"./Bounce.js\";\nimport { destroy } from \"./Destroy.js\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case CollisionMode.absorb: {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case CollisionMode.bounce: {\n            bounce(p1, p2);\n            break;\n        }\n        case CollisionMode.destroy: {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce.js\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"@tsparticles/engine\";\nimport { resolveCollision } from \"./ResolveCollision.js\";\nconst double = 2;\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * double);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"@tsparticles/engine\";\nconst double = 2;\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize, { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * double);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * double, rect.size.height * double);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nimport { LinksShadow } from \"./LinksShadow.js\";\nimport { LinksTriangle } from \"./LinksTriangle.js\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"@tsparticles/engine\";\nimport { CircleWarp } from \"./CircleWarp.js\";\nimport { Links } from \"./Options/Classes/Links.js\";\nconst squarePower = 2, opacityOffset = 1, origin = {\n    x: 0,\n    y: 0,\n}, minDistance = 0;\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** squarePower + warpDistances.y ** squarePower);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._setColor = p1 => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this._linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this._linkContainer = container;\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        this._linkContainer.particles.linksColor = undefined;\n        this._linkContainer.particles.linksColors = new Map();\n    }\n    interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < origin.x || pos1.y < origin.y || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? minDistance, warp = linkOpt1.warp;\n        let range;\n        if (warp) {\n            range = new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize);\n        }\n        else {\n            range = new Circle(pos1.x, pos1.y, optDistance);\n        }\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some(t => t.destination === p2) ||\n                p2.links.some(t => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < origin.x || pos2.y < origin.y || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (opacityOffset - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"@tsparticles/engine\";\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, engine, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(engine, shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map(t => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils.js\";\nconst minOpacity = 0, minWidth = 0, minDistance = 0, half = 0.5, maxFrequency = 1;\nexport class LinkInstance {\n    constructor(container, engine) {\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw(ctx => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(this._engine, twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? minWidth, maxDistance = p1.retina.linksDistance ?? minDistance, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    engine: this._engine,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) * half;\n            if (opacityTriangle <= minOpacity) {\n                return;\n            }\n            container.canvas.draw(ctx => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? minDistance;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(this._engine, triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter(t => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination), minCount = 0;\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex(l => l.destination === t.destination) >= minCount);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._container = container;\n        this._engine = engine;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links?.length) {\n            return;\n        }\n        const p1Links = links.filter(l => options.links &&\n            (options.links.frequency >= maxFrequency ||\n                this._getLinkFrequency(particle, l.destination) <= options.links.frequency));\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > minOpacity && (particle.retina.linksWidth ?? minWidth) > minWidth) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n        await Promise.resolve();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this._container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance.js\";\nexport class LinksPlugin {\n    constructor(engine) {\n        this.id = \"links\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new LinkInstance(container, this._engine));\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { loadLinksInteraction } from \"./interaction.js\";\nimport { loadLinksPlugin } from \"./plugin.js\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links.js\";\nexport * from \"./Options/Classes/LinksShadow.js\";\nexport * from \"./Options/Classes/LinksTriangle.js\";\nexport * from \"./Options/Interfaces/ILinks.js\";\nexport * from \"./Options/Interfaces/ILinksShadow.js\";\nexport * from \"./Options/Interfaces/ILinksTriangle.js\";\n","import { Linker } from \"./Linker.js\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", async (container) => {\n        return Promise.resolve(new Linker(container, engine));\n    }, refresh);\n}\n","import { LinksPlugin } from \"./LinksPlugin.js\";\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n}\n","import { degToRad } from \"@tsparticles/engine\";\nconst piDeg = 180, origin = { x: 0, y: 0 }, sidesOffset = 2;\nexport function drawPolygon(data, start, side) {\n    const { context } = data, sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (piDeg * (decimalSides - sidesOffset)) / decimalSides, interiorAngle = Math.PI - degToRad(interiorAngleDegrees);\n    if (!context) {\n        return;\n    }\n    context.beginPath();\n    context.translate(start.x, start.y);\n    context.moveTo(origin.x, origin.y);\n    for (let i = 0; i < sideCount; i++) {\n        context.lineTo(side.length, origin.y);\n        context.translate(side.length, origin.y);\n        context.rotate(interiorAngle);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawPolygon } from \"./Utils.js\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n    draw(data) {\n        const { particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius);\n        drawPolygon(data, start, side);\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst sidesCenterFactor = 3.5, yFactor = 2.66, sidesFactor = 3;\nexport class PolygonDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"polygon\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / sidesCenterFactor),\n            y: -radius / (yFactor / sidesCenterFactor),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * yFactor) / (sides / sidesFactor),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst yFactor = 1.66, sides = 3, double = 2;\nexport class TriangleDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"triangle\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / yFactor,\n        };\n    }\n    getSidesCount() {\n        return sides;\n    }\n    getSidesData(particle, radius) {\n        const diameter = radius * double;\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: diameter,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer.js\";\nimport { TriangleDrawer } from \"./TriangleDrawer.js\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { RotateDirection, ValueWithRandom, isNull, } from \"@tsparticles/engine\";\nimport { RotateAnimation } from \"./RotateAnimation.js\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = RotateDirection.clockwise;\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { AnimationStatus, DestroyType, RotateDirection, degToRad, getRandom, getRangeValue, updateAnimation, } from \"@tsparticles/engine\";\nimport { Rotate } from \"./Options/Classes/Rotate.js\";\nconst double = 2, doublePI = Math.PI * double, identity = 1, doublePIDeg = 360;\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: degToRad(getRangeValue(rotateOptions.value)),\n            min: 0,\n            max: doublePI,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === RotateDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            rotateDirection = index > minIndex ? RotateDirection.counterClockwise : RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.rotate.status = AnimationStatus.decreasing;\n                break;\n            case RotateDirection.clockwise:\n                particle.rotate.status = AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = identity - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / doublePIDeg) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && (!!rotate.value || rotate.animation.enable || rotate.path);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        particle.isRotating = !!particle.rotate;\n        if (!particle.rotate) {\n            return;\n        }\n        updateAnimation(particle, particle.rotate, false, DestroyType.none, delta);\n        particle.rotation = particle.rotate.value;\n    }\n}\n","const fixFactorSquared = 2, fixFactor = Math.sqrt(fixFactorSquared), double = 2;\nexport function drawSquare(data) {\n    const { context, radius } = data, fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * double;\n    context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n}\n","import { drawSquare } from \"./Utils.js\";\nconst sides = 4;\nexport class SquareDrawer {\n    constructor() {\n        this.validTypes = [\"edge\", \"square\"];\n    }\n    draw(data) {\n        drawSquare(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","const defaultInset = 2, origin = { x: 0, y: 0 };\nexport function drawStar(data) {\n    const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? defaultInset;\n    context.moveTo(origin.x, origin.y - radius);\n    for (let i = 0; i < sides; i++) {\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius * inset);\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawStar } from \"./Utils.js\";\nconst defaultInset = 2, defaultSides = 5;\nexport class StarDrawer {\n    constructor() {\n        this.validTypes = [\"star\"];\n    }\n    draw(data) {\n        drawStar(data);\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? defaultSides));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData;\n        particle.starInset = getRangeValue(star?.inset ?? defaultInset);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nconst defaultOpacity = 1;\nexport class StrokeColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const container = this._container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? defaultOpacity);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(this._engine, stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateColor(particle.strokeColor, delta);\n    }\n}\n","import { loadBasic } from \"@tsparticles/basic\";\nimport { loadEasingQuadPlugin } from \"@tsparticles/plugin-easing-quad\";\nimport { loadEmojiShape } from \"@tsparticles/shape-emoji\";\nimport { loadExternalAttractInteraction } from \"@tsparticles/interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"@tsparticles/interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"@tsparticles/interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"@tsparticles/interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"@tsparticles/interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"@tsparticles/interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"@tsparticles/interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"@tsparticles/interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"@tsparticles/interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"@tsparticles/interaction-external-slow\";\nimport { loadImageShape } from \"@tsparticles/shape-image\";\nimport { loadLifeUpdater } from \"@tsparticles/updater-life\";\nimport { loadLineShape } from \"@tsparticles/shape-line\";\nimport { loadParallaxMover } from \"@tsparticles/move-parallax\";\nimport { loadParticlesAttractInteraction } from \"@tsparticles/interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"@tsparticles/interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"@tsparticles/interaction-particles-links\";\nimport { loadPolygonShape } from \"@tsparticles/shape-polygon\";\nimport { loadRotateUpdater } from \"@tsparticles/updater-rotate\";\nimport { loadSquareShape } from \"@tsparticles/shape-square\";\nimport { loadStarShape } from \"@tsparticles/shape-star\";\nimport { loadStrokeColorUpdater } from \"@tsparticles/updater-stroke-color\";\nexport async function loadSlim(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin(engine, false);\n    await loadEmojiShape(engine, false);\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover.js\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addMover(\"parallax\", () => {\n        return Promise.resolve(new ParallaxMover());\n    }, refresh);\n}\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalAttract\", container => {\n        return Promise.resolve(new Attractor(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Attract.js\";\nexport * from \"./Options/Interfaces/IAttract.js\";\n","import { Bouncer } from \"./Bouncer.js\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalBounce\", container => {\n        return Promise.resolve(new Bouncer(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Bounce.js\";\nexport * from \"./Options/Interfaces/IBounce.js\";\n","import { Bubbler } from \"./Bubbler.js\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalBubble\", container => {\n        return Promise.resolve(new Bubbler(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/BubbleBase.js\";\nexport * from \"./Options/Classes/BubbleDiv.js\";\nexport * from \"./Options/Classes/Bubble.js\";\nexport * from \"./Options/Interfaces/IBubbleBase.js\";\nexport * from \"./Options/Interfaces/IBubbleDiv.js\";\nexport * from \"./Options/Interfaces/IBubble.js\";\n","import { Connector } from \"./Connector.js\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalConnect\", container => {\n        return Promise.resolve(new Connector(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Connect.js\";\nexport * from \"./Options/Classes/ConnectLinks.js\";\nexport * from \"./Options/Interfaces/IConnect.js\";\nexport * from \"./Options/Interfaces/IConnectLinks.js\";\n","import { Grabber } from \"./Grabber.js\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalGrab\", container => {\n        return Promise.resolve(new Grabber(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Grab.js\";\nexport * from \"./Options/Classes/GrabLinks.js\";\nexport * from \"./Options/Interfaces/IGrab.js\";\nexport * from \"./Options/Interfaces/IGrabLinks.js\";\n","import { Pauser } from \"./Pauser.js\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPause\", container => {\n        return Promise.resolve(new Pauser(container));\n    }, refresh);\n}\n","import { Pusher } from \"./Pusher.js\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalPush\", container => {\n        return Promise.resolve(new Pusher(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Push.js\";\nexport * from \"./Options/Interfaces/IPush.js\";\n","import { Remover } from \"./Remover.js\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalRemove\", container => {\n        return Promise.resolve(new Remover(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Remove.js\";\nexport * from \"./Options/Interfaces/IRemove.js\";\n","import { Repulser } from \"./Repulser.js\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalRepulse\", container => {\n        return Promise.resolve(new Repulser(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/RepulseBase.js\";\nexport * from \"./Options/Classes/RepulseDiv.js\";\nexport * from \"./Options/Classes/Repulse.js\";\nexport * from \"./Options/Interfaces/IRepulseBase.js\";\nexport * from \"./Options/Interfaces/IRepulseDiv.js\";\nexport * from \"./Options/Interfaces/IRepulse.js\";\n","import { Slower } from \"./Slower.js\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"externalSlow\", container => {\n        return Promise.resolve(new Slower(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Slow.js\";\nexport * from \"./Options/Interfaces/ISlow.js\";\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesAttract\", container => {\n        return Promise.resolve(new Attractor(container));\n    }, refresh);\n}\n","import { Collider } from \"./Collider.js\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addInteractor(\"particlesCollisions\", container => {\n        return Promise.resolve(new Collider(container));\n    }, refresh);\n}\n","import { EasingType } from \"@tsparticles/engine\";\nexport async function loadEasingQuadPlugin(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addEasing(EasingType.easeInQuad, value => value ** 2, false);\n    await engine.addEasing(EasingType.easeOutQuad, value => 1 - (1 - value) ** 2, false);\n    await engine.addEasing(EasingType.easeInOutQuad, value => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2), false);\n    await engine.refresh(refresh);\n}\n","import { EmojiDrawer } from \"./EmojiDrawer.js\";\nexport async function loadEmojiShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new EmojiDrawer(), refresh);\n}\n","import { LineDrawer } from \"./LineDrawer.js\";\nexport async function loadLineShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer.js\";\nexport async function loadSquareShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer.js\";\nexport async function loadStarShape(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addShape(new StarDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater.js\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"life\", async (container) => {\n        return Promise.resolve(new LifeUpdater(container));\n    }, refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater.js\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"rotate\", container => {\n        return Promise.resolve(new RotateUpdater(container));\n    }, refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater.js\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    engine.checkVersion(\"3.8.1\");\n    await engine.addParticleUpdater(\"strokeColor\", container => {\n        return Promise.resolve(new StrokeColorUpdater(container, engine));\n    }, refresh);\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ownerState\"],\n  _excluded2 = [\"variants\"],\n  _excluded3 = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from './createTheme';\nimport styleFunctionSx from './styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nfunction processStyleArg(callableStyle, _ref) {\n  let {\n      ownerState\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const resolvedStylesArg = typeof callableStyle === 'function' ? callableStyle(_extends({\n    ownerState\n  }, props)) : callableStyle;\n  if (Array.isArray(resolvedStylesArg)) {\n    return resolvedStylesArg.flatMap(resolvedStyle => processStyleArg(resolvedStyle, _extends({\n      ownerState\n    }, props)));\n  }\n  if (!!resolvedStylesArg && typeof resolvedStylesArg === 'object' && Array.isArray(resolvedStylesArg.variants)) {\n    const {\n        variants = []\n      } = resolvedStylesArg,\n      otherStyles = _objectWithoutPropertiesLoose(resolvedStylesArg, _excluded2);\n    let result = otherStyles;\n    variants.forEach(variant => {\n      let isMatch = true;\n      if (typeof variant.props === 'function') {\n        isMatch = variant.props(_extends({\n          ownerState\n        }, props, ownerState));\n      } else {\n        Object.keys(variant.props).forEach(key => {\n          if ((ownerState == null ? void 0 : ownerState[key]) !== variant.props[key] && props[key] !== variant.props[key]) {\n            isMatch = false;\n          }\n        });\n      }\n      if (isMatch) {\n        if (!Array.isArray(result)) {\n          result = [result];\n        }\n        result.push(typeof variant.style === 'function' ? variant.style(_extends({\n          ownerState\n        }, props, ownerState)) : variant.style);\n      }\n    });\n    return result;\n  }\n  return resolvedStylesArg;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = _objectWithoutPropertiesLoose(inputOptions, _excluded3);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const transformStyleArg = stylesArg => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg || isPlainObject(stylesArg)) {\n        return props => processStyleArg(stylesArg, _extends({}, props, {\n          theme: resolveTheme({\n            theme: props.theme,\n            defaultTheme,\n            themeId\n          })\n        }));\n      }\n      return stylesArg;\n    };\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      let transformedStyleArg = transformStyleArg(styleArg);\n      const expressionsWithDefaultTheme = expressions ? expressions.map(transformStyleArg) : [];\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          if (!theme.components || !theme.components[componentName] || !theme.components[componentName].styleOverrides) {\n            return null;\n          }\n          const styleOverrides = theme.components[componentName].styleOverrides;\n          const resolvedStyleOverrides = {};\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n            resolvedStyleOverrides[slotKey] = processStyleArg(slotStyle, _extends({}, props, {\n              theme\n            }));\n          });\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          var _theme$components;\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[componentName]) == null ? void 0 : _theme$components.variants;\n          return processStyleArg({\n            variants: themeVariants\n          }, _extends({}, props, {\n            theme\n          }));\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import { jsx as d } from \"react/jsx-runtime\";\nimport { useEffect as m } from \"react\";\nimport { tsParticles as s } from \"@tsparticles/engine\";\nconst f = (t) => {\n  const i = t.id ?? \"tsparticles\";\n  return m(() => {\n    let e;\n    return s.load({ id: i, url: t.url, options: t.options }).then((l) => {\n      var a;\n      e = l, (a = t.particlesLoaded) == null || a.call(t, l);\n    }), () => {\n      e == null || e.destroy();\n    };\n  }, [i, t, t.url, t.options]), /* @__PURE__ */ d(\"div\", { id: i, className: t.className });\n};\nexport {\n  f as default\n};\n","import { tsParticles as i } from \"@tsparticles/engine\";\nimport o from \"./Particles.js\";\nimport \"react/jsx-runtime\";\nimport \"react\";\nasync function n(t) {\n  await t(i);\n}\nexport {\n  o as Particles,\n  o as default,\n  n as initParticlesEngine\n};\n","'use client';\n\nimport getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}","export const generatedAttribute = \"generated\", mouseDownEvent = \"pointerdown\", mouseUpEvent = \"pointerup\", mouseLeaveEvent = \"pointerleave\", mouseOutEvent = \"pointerout\", mouseMoveEvent = \"pointermove\", touchStartEvent = \"touchstart\", touchEndEvent = \"touchend\", touchMoveEvent = \"touchmove\", touchCancelEvent = \"touchcancel\", resizeEvent = \"resize\", visibilityChangeEvent = \"visibilitychange\", errorPrefix = \"tsParticles - Error\", percentDenominator = 100, half = 0.5, millisecondsToSeconds = 1000, originPoint = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n}, randomColorValue = \"random\", midColorValue = \"mid\", double = 2, doublePI = Math.PI * double, defaultFps = 60, defaultAlpha = 1, generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", defaultRetryCount = 0, squareExp = 2, qTreeCapacity = 4, defaultRemoveQuantity = 1, defaultRatio = 1, defaultReduceFactor = 1, subdivideCount = 4, inverseFactorNumerator = 1.0, rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, empty = 0, quarter = 0.25, threeQuarter = half + quarter, minVelocity = 0, defaultTransformValue = 1, minimumSize = 0, minimumLength = 0, zIndexFactorOffset = 1, defaultOpacity = 1, clickRadius = 1, touchEndLengthOffset = 1, minCoordinate = 0, removeDeleteCount = 1, removeMinIndex = 0, defaultFpsLimit = 120, minFpsLimit = 0, canvasFirstIndex = 0, loadRandomFactor = 10000, loadMinIndex = 0, one = 1, none = 0, decayOffset = 1, tryCountIncrement = 1, minRetries = 0, rollFactor = 1, minZ = 0, defaultRadius = 0, posOffset = -quarter, sizeFactor = 1.5, minLimit = 0, countOffset = 1, minCount = 0, minIndex = 0, manualCount = 0, lengthOffset = 1, defaultDensityFactor = 1, deleteCount = 1, touchDelay = 500, manualDefaultPosition = 50, defaultAngle = 0, identity = 1, minStrokeWidth = 0, lFactor = 1, lMin = 0, rgbFactor = 255, triple = 3, sextuple = 6, sNormalizedOffset = 1, phaseNumerator = 1, defaultRgbMin = 0, defaultVelocity = 0, defaultLoops = 0, defaultTime = 0;\n","export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n","export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\nexport function isNull(arg) {\n    return arg === null || arg === undefined;\n}\n","import { errorPrefix, inverseFactorNumerator, none, originPoint, squareExp } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : originPoint.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? originPoint.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(originPoint.x, originPoint.y, originPoint.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != none) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), originPoint.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : originPoint.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, originPoint.z);\n    }\n    static get origin() {\n        return Vector.create(originPoint.x, originPoint.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { double, doublePI, empty, half, percentDenominator, quarter, threeQuarter } from \"../Core/Utils/Constants.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n};\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n","export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n","export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n","export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n","export var OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));\n","export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n","export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n","import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { half, millisecondsToSeconds, minVelocity, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isNull, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction memoize(fn) {\n    const cache = new Map();\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (cache.has(key)) {\n            return cache.get(key);\n        }\n        const result = fn(...args);\n        cache.set(key, result);\n        return result;\n    };\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= half ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\nexport function cloneStyle(style) {\n    const clonedStyle = document.createElement(\"div\").style;\n    if (!style) {\n        return clonedStyle;\n    }\n    for (const key in style) {\n        const styleKey = style[key];\n        if (!Object.prototype.hasOwnProperty.call(style, key) || isNull(styleKey)) {\n            continue;\n        }\n        const styleValue = style.getPropertyValue?.(styleKey);\n        if (!styleValue) {\n            continue;\n        }\n        const stylePriority = style.getPropertyPriority?.(styleKey);\n        if (!stylePriority) {\n            clonedStyle.setProperty?.(styleKey, styleValue);\n        }\n        else {\n            clonedStyle.setProperty?.(styleKey, styleValue, stylePriority);\n        }\n    }\n    return clonedStyle;\n}\nfunction computeFullScreenStyle(zIndex) {\n    const fullScreenStyle = document.createElement(\"div\").style, radix = 10, style = {\n        width: \"100%\",\n        height: \"100%\",\n        margin: \"0\",\n        padding: \"0\",\n        borderWidth: \"0\",\n        position: \"fixed\",\n        zIndex: zIndex.toString(radix),\n        \"z-index\": zIndex.toString(radix),\n        top: \"0\",\n        left: \"0\",\n    };\n    for (const key in style) {\n        const value = style[key];\n        fullScreenStyle.setProperty(key, value);\n    }\n    return fullScreenStyle;\n}\nexport const getFullScreenStyle = memoize(computeFullScreenStyle);\n","export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n","export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n","export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n","export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n","export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n","export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n","export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n","export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n","export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n","export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n","export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n","export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { decayOffset, defaultLoops, defaultOpacity, defaultRgbMin, defaultTime, defaultVelocity, double, hMax, hMin, hPhase, half, identity, lMax, lMin, midColorValue, millisecondsToSeconds, percentDenominator, phaseNumerator, randomColorValue, rgbFactor, rgbMax, sMax, sMin, sNormalizedOffset, sextuple, triple, } from \"../Core/Utils/Constants.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nfunction stringToRgba(engine, input) {\n    if (!input) {\n        return;\n    }\n    for (const manager of engine.colorManagers.values()) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n}\nexport function rangeColorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(engine, color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(engine, color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(engine, color, index, useIndex = true) {\n    const rgb = colorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(engine, color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(engine, input) {\n    return stringToRgba(engine, input)?.a;\n}\nexport function stringToRgb(engine, input) {\n    return stringToRgba(engine, input);\n}\nexport function hslToRgb(hsl) {\n    const h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? defaultRgbMin, fixedMax = rgbMax + identity;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, fixedMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(engine, optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb(engine, {\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb(engine, {\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color, ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n","import { defaultAngle, defaultTransform, identity, lFactor, minStrokeWidth, originPoint, } from \"../Core/Utils/Constants.js\";\nimport { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, originPoint.x, originPoint.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(originPoint.x, originPoint.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : (transform.b ?? defaultTransform.b),\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : (transform.c ?? defaultTransform.c),\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { cloneStyle, getFullScreenStyle, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { defaultOpacity, defaultTransformValue, generatedAttribute, inverseFactorNumerator, minimumLength, minimumSize, zIndexFactorOffset, } from \"./Utils/Constants.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultTransformValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    const keys = new Set();\n    for (const key in elementStyle) {\n        if (!Object.prototype.hasOwnProperty.call(elementStyle, key)) {\n            continue;\n        }\n        keys.add(elementStyle[key]);\n    }\n    for (const key in style) {\n        if (!Object.prototype.hasOwnProperty.call(style, key)) {\n            continue;\n        }\n        keys.add(style[key]);\n    }\n    for (const key of keys) {\n        const value = style.getPropertyValue(key);\n        if (!value) {\n            elementStyle.removeProperty(key);\n        }\n        else {\n            elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n        }\n    }\n}\nexport class Canvas {\n    constructor(container, engine) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(this._engine, plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(this._engine, plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(this._engine, color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style || !Object.prototype.hasOwnProperty.call(options.style, key)) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const opacity = inverseFactorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(this._engine, trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!element || !originalStyle) {\n                return;\n            }\n            setStyle(element, originalStyle, true);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            setStyle(element, getFullScreenStyle(this.container.actualOptions.fullScreen.zIndex), true);\n        };\n        this._engine = engine;\n        this._standardSize = {\n            height: 0,\n            width: 0,\n        };\n        const pxRatio = container.retina.pixelRatio, stdSize = this._standardSize;\n        this.size = {\n            height: stdSize.height * pxRatio,\n            width: stdSize.width * pxRatio,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n            this.element = undefined;\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(this._engine, background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const plugin of this.container.plugins.values()) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = cloneStyle(this.element.style);\n        const standardSize = this._standardSize;\n        standardSize.height = canvas.offsetHeight;\n        standardSize.width = canvas.offsetWidth;\n        const pxRatio = this.container.retina.pixelRatio, retinaSize = this.size;\n        canvas.height = retinaSize.height = standardSize.height * pxRatio;\n        canvas.width = retinaSize.width = standardSize.width * pxRatio;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => obs.disconnect());\n        this.container.retina.init();\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, currentSize = container.canvas._standardSize, newSize = {\n            width: this.element.offsetWidth,\n            height: this.element.offsetHeight,\n        }, pxRatio = container.retina.pixelRatio, retinaSize = {\n            width: newSize.width * pxRatio,\n            height: newSize.height * pxRatio,\n        };\n        if (newSize.height === currentSize.height &&\n            newSize.width === currentSize.width &&\n            retinaSize.height === this.element.height &&\n            retinaSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...currentSize };\n        currentSize.height = newSize.height;\n        currentSize.width = newSize.width;\n        const canvasSize = this.size;\n        this.element.width = canvasSize.width = retinaSize.width;\n        this.element.height = canvasSize.height = retinaSize.height;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: currentSize.width / oldSize.width,\n                height: currentSize.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { double, lengthOffset, millisecondsToSeconds, minCoordinate, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchDelay, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const plugin of container.plugins.values()) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? minCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? minCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull, isString } from \"../../../Utils/TypeUtils.js\";\nimport { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { DivType } from \"../../../../Enums/Types/DivType.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { manualDefaultPosition } from \"../../Core/Utils/Constants.js\";\nexport class ManualParticle {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? manualDefaultPosition,\n                y: data.position.y ?? manualDefaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.maxWidth)) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (!isNull(data.mode)) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (!isNull(data.options)) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n","import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../../Utils/TypeUtils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNull, isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { isBoolean, isNull } from \"../../Utils/TypeUtils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { decayOffset, defaultRadius, defaultRetryCount, double, errorPrefix, half, millisecondsToSeconds, minRetries, minZ, none, randomColorValue, rollFactor, squareExp, tryCountIncrement, } from \"./Utils/Constants.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const plugin of container.plugins.values()) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + tryCountIncrement);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const plugin of container.plugins.values()) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomColorValue) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n        }\n        if (this.shape === randomColorValue) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this._engine, this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nimport { squareExp } from \"./Constants.js\";\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { double, half, subdivideCount } from \"./Constants.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { countOffset, defaultDensityFactor, defaultRemoveQuantity, deleteCount, errorPrefix, lengthOffset, manualCount, minCount, minIndex, minLimit, posOffset, qTreeCapacity, sizeFactor, squareExp, } from \"./Utils/Constants.js\";\nimport { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultDensityFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : (this._groupLimits.get(group) ?? this._limit), currentCount = this.count;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const plugin of container.plugins.values()) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i, group, override)) {\n                i--;\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(minIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.update();\n        }\n        for (const plugin of container.plugins.values()) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const plugin of this._container.plugins.values()) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { defaultRatio, defaultReduceFactor } from \"./Utils/Constants.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { clickRadius, defaultFps, defaultFpsLimit, errorPrefix, millisecondsToSeconds, minCoordinate, minFpsLimit, removeDeleteCount, removeMinIndex, touchEndLengthOffset, } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this, this._engine);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, clickRadius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - touchEndLengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - touchEndLengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const effectDrawer of this.effectDrawers.values()) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const shapeDrawer of this.shapeDrawers.values()) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this);\n            if (idx >= removeMinIndex) {\n                mainArr.splice(idx, removeDeleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const plugin of this.plugins.values()) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const plugin of this.plugins.values()) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const drawer of this.effectDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const drawer of this.shapeDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const plugin of this.plugins.values()) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const plugin of this.plugins.values()) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const plugin of this.plugins.values()) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const plugin of this.plugins.values()) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","import { deleteCount, minIndex } from \"../Core/Utils/Constants.js\";\nexport class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < minIndex) {\n            return;\n        }\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n","import { canvasFirstIndex, canvasTag, errorPrefix, generatedAttribute, generatedFalse, generatedTrue, loadMinIndex, loadRandomFactor, none, one, removeDeleteCount, } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            canvasEl = existingCanvases[canvasFirstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this.colorManagers = new Map();\n        this.easingFunctions = new Map();\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.8.1\";\n    }\n    async addColorManager(manager, refresh = true) {\n        this.colorManagers.set(manager.key, manager);\n        await this.refresh(refresh);\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEasing(name, easing, refresh = true) {\n        if (this.getEasing(name)) {\n            return;\n        }\n        this.easingFunctions.set(name, easing);\n        await this.refresh(refresh);\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    checkVersion(pluginVersion) {\n        if (this.version === pluginVersion) {\n            return;\n        }\n        throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${this.version}. Plugin version: ${pluginVersion}`);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEasing(name) {\n        return this.easingFunctions.get(name) ?? ((value) => value);\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            items.splice(index, removeDeleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * loadRandomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= loadMinIndex) {\n            const old = this.item(oldIndex), deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ExternalInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.external;\n        this.container = container;\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ParticlesInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.particles;\n        this.container = container;\n    }\n}\n","export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n","export var GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"linear\";\n    GradientType[\"radial\"] = \"radial\";\n    GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));\n","export var EasingType;\n(function (EasingType) {\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));\n","import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine.js\";\nexport function init() {\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n"],"names":["_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","Container","options","arguments","length","undefined","createStyledComponent","useThemeProps","componentName","ContainerRoot","_ref","theme","_extends","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref3","Math","max","xs","React","ref","className","component","other","_objectWithoutPropertiesLoose","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","_jsx","as","clsx","createContainer","styled","useDefaultProps","doublePI","PI","move","particle","moveOptions","moveSpeed","maxSpeed","moveDrift","delta","_particle$pathGenerat","particlesOptions","pathOptions","path","enable","lastPathTime","pathDelay","pathGenerator","generate","velocity","addTo","clamp","x","y","applyPath","gravityOptions","gravity","gravityFactor","inverse","factor","acceleration","decay","moveDecay","multTo","mult","zIndexOptions","zIndex","zVelocityFactor","zIndexFactor","velocityRate","position","vibrate","sin","cos","BaseMover","init","getRangeValue","_spinOptions$position","container","spinOptions","spin","spinPos","spinCenter","canvas","size","height","pos","getPosition","distance","getDistance","spinAcceleration","retina","pixelRatio","center","direction","RotateDirection","clockwise","counterClockwise","angle","getRandom","radius","initSpin","isEnabled","destroyed","_particle$retina","_particle$retina$move","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","pxRatio","speed","drift","slowFactor","slow","inRange","getProximitySpeedFactor","baseSpeed","reduceFactor","maxSize","getRangeMax","getRadius","spinClockwise","updateFunc","maxCanvasSize","halfMaxSize","initialPosition","dx","dy","getDistances","dxFixed","abs","dyFixed","maxDistance","hDistance","horizontal","vDistance","vertical","hasVDistance","misplaced","vel","applyDistance","origin","CircleDrawer","constructor","this","validTypes","draw","data","context","circleRange","min","arc","drawCircle","getSidesCount","particleInit","_shapeData$angle","shapeData","isObject","degToRad","ColorUpdater","engine","_container","_engine","hslColor","rangeColorToHsl","color","id","reduceDuplicates","getHslAnimationFromHsl","animation","h","hAnimation","s","sAnimation","l","lAnimation","spawning","update","updateColor","RgbIndexes","shorthandHexRegex","hexRegex","HexColorManager","key","stringPrefix","handleColor","_parseString","handleRangeColor","parseString","input","hexColor","startsWith","hexFixed","replace","_","r","g","b","a","result","exec","parseInt","HslIndexes","HslColorManager","_colorValue$hsl","hsl","hslToRgb","_colorValue$hsl2","hslaToRgba","parseAlpha","OpacityUpdater","opacityOptions","opacity","initParticleNumericAnimationValue","opacityAnimation","percentDenominator","sync","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","maxLoops","loops","reset","time","updateAnimation","destroy","BounceOutMode","modes","OutMode","bounce","split","outMode","includes","handled","plugin","plugins","particleBounce","offset","bounds","calculateBounds","canvasSize","OutModeDirection","left","right","bounced","newVelocity","minPos","bounceHorizontal","bottom","top","bounceVertical","DestroyOutMode","_delta","outType","ParticleOutType","normal","outside","isPointInside","Vector","inside","moveCenter","vx","vy","particles","remove","group","NoneOutMode","none","pRadius","OutOutMode","out","circVec","create","floor","randomInRange","newDx","newDy","atan2","warp","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_addUpdaterIfMissing","getUpdater","outModes","updaters","has","checkOutMode","default","set","_updateOutMode","updater","Map","_outModes$bottom","_outModes$left","_outModes$right","_outModes$top","RgbColorManager","_colorValue$rgb","rgbColor","rgb","_colorValue$rgb2","SizeUpdater","sizeAnimation","_particle$retina$size","sizeAnimationSpeed","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","async","loadBasic","refresh","checkVersion","addColorManager","loadHexColorPlugin","loadHslColorPlugin","loadRgbColorPlugin","addMover","Promise","resolve","loadBaseMover","addShape","loadCircleShape","addParticleUpdater","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","defaultFont","EmojiDrawer","_emojiShapeDict","ImageBitmap","close","delete","emojiDataKey","image","get","previousAlpha","globalAlpha","diameter","drawImage","drawEmoji","actualOptions","find","t","isInArray","shape","type","promises","loadFont","shapeOptions","map","executeOnSingleOrMultiple","font","push","all","particleDestroy","_shapeData$font","_shapeData$padding","emoji","itemFromSingleOrMultiple","randomIndexData","emojiOptions","padding","_objectSpread","fullSize","OffscreenCanvas","getContext","textBaseline","textAlign","fillText","transferToImageBitmap","document","createElement","processAttract","attractRadius","area","queryCb","attractOptions","interactivity","attract","query","quadTree","attractFactor","getEasing","easing","normVec","subFrom","Attract","duration","EasingType","easeOutQuad","load","isNull","attractMode","Attractor","ExternalInteractorBase","super","handleClickMode","mode","clicking","count","setTo","initialVelocity","finish","setTimeout","millisecondsToSeconds","clear","attractModeDistance","interact","mouseMoveStatus","status","mouseMoveEvent","events","hoverEnabled","hoverMode","onHover","clickEnabled","clickMode","onClick","enabledCb","mousePos","mouse","Circle","p","hoverAttract","clickPosition","clickAttract","_particle$interactivi","loadModeOptions","_len","sources","Array","_key","source","half","halfPI","processBounce","circleBounce","circleBounceDataFromParticle","mass","Rectangle","rectBounce","divBounce","divs","bounceMode","divModeExecute","selector","div","bounceCb","querySelectorAll","forEach","item","elem","offsetLeft","offsetWidth","offsetTop","offsetHeight","tolerance","DivType","circle","singleSelectorBounce","Bounce","Bouncer","bounceModeDistance","onDiv","mouseBounce","isDivModeEnabled","BubbleBase","mix","sourceColor","isArray","OptionsColor","BubbleDiv","selectors","Bubble","tmp","ProcessBubbleType","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","bubbleMode","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubble","bubbleModeDistance","queryCircle","_container$interactiv","_particle$opacity$val","_particle$opacity","durationEnd","distMouse","timeSpent","Date","getTime","clickTime","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","mouseLeaveEvent","divBubble","finalColor","modeColor","bubbleColor","pColor","getFillColor","rgbToHsl","colorMix","_divBubble$opacity","_options$interactivit","_particle$opacity$val2","_particle$opacity2","modeOpacity","optOpacity","modeSize","optSize","_data$particlesObj$va","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","contains","divMode","force","ConnectLinks","Connect","links","lineStyle","ctx","p1","p2","connectOptions","connect","gradStop","color1","color2","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","getStyleFromHsl","getStyleFromRgb","gradient","drawConnection","_p1$retina$linksWidth","ls","pos1","pos2","begin","end","drawLine","lineWidth","strokeStyle","stroke","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","i","slice","distMax","xDiff","yDiff","GrabLinks","blink","consent","Grab","drawGrab","lineColor","_particle$retina$link","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","_grabLineOptions$colo","_particle$options$lin","grabLineOptions","lineOpacity","opacityLine","optColor","grabLineColor","linksOptions","getLinkRandomColor","getLinkColor","Pauser","animationStatus","pause","play","Push","groups","quantity","setRangeValue","Pusher","pushOptions","itemFromArray","groupOptions","Remove","Remover","removeNb","removeQuantity","RepulseBase","RepulseDiv","Repulse","repulseMode","Repulser","_clickRepulse","_container$repulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","pow","range","d","vect","_hoverRepulse","_processRepulse","divRepulse","_divRepulse$speed","easingFunc","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","currentColorRegex","loadImage","loading","img","Image","element","addEventListener","error","getLogger","errorPrefix","src","downloadSvgImage","response","fetch","ok","svgData","text","replaceImageColor","imageData","svgColoredData","imageShape","colorStyle","preFillIndex","indexOf","substring","replaceColorSvg","imageRes","gif","loaded","replaceColor","svg","Blob","domUrl","URL","window","webkitURL","url","createObjectURL","revokeObjectURL","img2","errorHandler","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","curr","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","increment","noData","DisposalMethod","GIFDataHeaders","defaultLoopCount","parseColorTable","byteStream","colors","parseBlock","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","EndOfFile","frame","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","index","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","exit","last","bitmap","createImageBitmap","parseImageBlock","Extension","GraphicsControlExtension","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","delayTime","transparencyIndex","ApplicationExtension","applicationExtension","identifier","authenticationCode","applicationExtensions","CommentExtension","comments","PlainTextExtension","plainTextData","charSize","foregroundColor","backgroundColor","parseExtensionBlock","loadGifImage","_getGIFLoopAmount","gifData","gifURL","res","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","backgroundImage","Error","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","newValue","Replace","Infinity","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","_unused","ImageDrawer","loadImageShape","_imageShape$replaceCo","addImage","images","_particle$gifFrame","offscreenCanvas","offscreenContext","_image$gifLoopCount","imageSmoothingQuality","imageSmoothingEnabled","clearRect","gifFrame","gifTime","scale","UndefinedA","UndefinedB","UndefinedC","UndefinedD","Combine","RestoreBackground","putImageData","RestorePrevious","previousImageData","getImageData","drawGif","preload","loadShape","then","_imageData$replaceCol","_imageData$fill","_imageData$close","_image$ratio","fill","shapeFill","shapeClose","Preload","ImagePreloaderPlugin","getPlugin","loadOptions","preloadOptions","existing","needsPlugin","extLength","_data$gif","_data$name","imageFunc","_data$name2","addLoadImageToEngine","preloader","addPlugin","LifeDelay","ValueWithRandom","LifeDuration","Life","delay","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","updateLife","LineDrawer","_shapeData$cap","moveTo","lineTo","lineCap","cap","ParallaxMover","isSsr","parallax","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","smooth","centerDistance","ParticlesInteractorBase","attractDistance","rotate","ax","ay","p1Factor","p2Factor","updateAbsorb","r1","r2","collisions","absorb","fixBounceSpeed","collisionMaxSpeed","resolveCollision","CollisionMode","unbreakable","Collider","radius1","radius2","round","z","CircleWarp","point","intersects","rect","biggerCircle","rectSW","LinksShadow","blur","LinksTriangle","frequency","Links","shadow","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","sqrt","Linker","_setColor","_linkContainer","linkColor","linksColor","linksColors","_p1$retina$linksDista","linkOpt1","linksDistance","linkOpt2","some","destination","loadParticlesOptions","setLinkFrequency","dictionary","ids","sort","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","_p1$options$twinkle","twinkle","lines","twinkleFreq","twinkleRgb","rangeColorToRgb","backgroundMask","params","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","globalCompositeOperation","composite","shadowColor","shadowBlur","drawLinkLine","_drawLinkTriangle","link1","link2","_triangleOptions$opac","triangleOptions","p3","opacityTriangle","_p1$retina$linksDista2","pos3","colorTriangle","beginPath","closePath","drawTriangle","fillStyle","drawLinkTriangle","_drawTriangles","p1Links","_options$links","_p2$options$links","_p2$links","vertices","filter","linkFreq","_getLinkFrequency","findIndex","vertex","_getTriangleFrequency","_freqs","drawParticle","particleCreated","particleDestroyed","LinksPlugin","loadParticlesLinksInteraction","addInteractor","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","start","side","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","translate","drawPolygon","getCenter","getSidesData","_polygon$sides","polygon","sides","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","pathRotation","rotateDirection","random","AnimationStatus","decreasing","increasing","rotateAnimation","rotation","isRotating","DestroyType","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","drawSquare","StarDrawer","_particle$starInset","inset","starInset","drawStar","_star$sides","star","_star$inset","StrokeColorUpdater","_stroke$opacity","_stroke$color","_rangeColorToHsl","strokeWidth","strokeOpacity","strokeAnimation","strokeHslColor","strokeColor","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","addEasing","easeInQuad","easeInOutQuad","loadEasingQuadPlugin","loadEmojiShape","loadLineShape","loadSquareShape","loadStarShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater","_excluded2","_excluded3","shouldForwardProp","prop","systemDefaultTheme","lowercaseFirstLetter","string","charAt","toLowerCase","resolveTheme","themeId","obj","defaultOverridesResolver","processStyleArg","callableStyle","resolvedStylesArg","flatMap","resolvedStyle","variants","variant","isMatch","style","rootShouldForwardProp","slotShouldForwardProp","systemSx","styleFunctionSx","__mui_systemSx","tag","inputOptions","processStyles","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","shouldForwardPropOption","charCodeAt","isStringTag","defaultStyledResolver","styledEngineStyled","label","transformStyleArg","stylesArg","__emotion_real","isPlainObject","muiStyledResolver","styleArg","transformedStyleArg","expressions","expressionsWithDefaultTheme","components","styleOverrides","resolvedStyleOverrides","entries","slotKey","slotStyle","_theme$components","numOfCustomFnsApplied","placeholders","raw","Component","muiName","withConfig","createStyled","f","_t$id","m","e","particlesLoaded","call","n","useTheme","getThemeProps","generatedAttribute","touchEndEvent","originPoint","defaultTransform","randomColorValue","midColorValue","double","generatedTrue","generatedFalse","canvasTag","rgbMax","hMax","sMax","lMax","hMin","sMin","hPhase","quarter","threeQuarter","minVelocity","defaultOpacity","decayOffset","identity","lMin","rgbFactor","triple","sextuple","sNormalizedOffset","phaseNumerator","defaultRgbMin","defaultVelocity","defaultLoops","defaultTime","MoveDirection","isBoolean","arg","isString","isNumber","Vector3d","xOrCoords","_updateFromAngle","coords3d","getLengthSq","clone","add","v","copy","distanceTo","sub","distanceToSq","divTo","normalize","c","v3d","_random","_animationLoop","nextFrame","cb","requestAnimationFrame","cancel","idx","cancelAnimationFrame","Number","EPSILON","num","comp1","comp2","weight1","weight2","getRangeMin","pointA","pointB","degrees","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","_data$position$x2","_data$position6","_data$position$y2","_data$position7","endsWith","parseFloat","AnimationMode","PixelMode","StartValueType","_logger","debug","console","info","log","verbose","warning","warn","rectSideBounce","pSide","pOtherSide","rectSide","rectOtherSide","safeMatchMedia","matchMedia","array","weight","fonts","arrayRandomIndex","areBoundsInside","deepExtend","_len2","_key2","sourceIsArray","destDict","findItemFromSingleOrMultiple","callback","singleDivModeExecute","matches","checkSelector","getMass","xVelocityDiff","yVelocityDiff","xDist","yDist","u1","u2","vFinal1","vFinal2","divBounds","bounceOptions","resH","resV","useIndex","valueRange","animationOptions","increase","decrease","autoStatus","auto","startValue","initialValue","getPositionOrSize","positionOrSize","percent","_objectWithoutProperties","changeDirection","destroyType","_data$maxLoops","_data$loops","_data$maxLoops2","_data$velocity","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","minValue","maxValue","checkDestroy","getFullScreenStyle","fn","cache","args","JSON","stringify","memoize","fullScreenStyle","margin","borderWidth","toString","setProperty","AlterType","InteractivityDetect","EventType","ResponsiveMode","ThemeMode","LimitMode","InteractorType","RangeType","stringToRgba","manager","colorManagers","colorToRgb","getRandomRgbColor","stringToRgb","g1","b1","hNormalized","sNormalized","lNormalized","grayscaleValue","channel","temp1","temp2","temp3","phaseThird","red","green","blue","hsla","rgbResult","fixedMin","fixedMax","size1","size2","rgb1","rgb2","_p1$getFillColor","_p2$getFillColor","getStrokeColor","destColor","getHslFromAnimation","resColor","setColorAnimation","colorValue","colorAnimation","updateColorValue","ranges","dimension","_transform$a","_transform$b","_transform$b2","_transform$c","_transform$c2","_transform$d","_particle$strokeWidth","colorStyles","transform","rotateData","rotating","transformData","setTransform","shadowOffsetX","shadowOffsetY","drawData","drawer","shapeDrawers","drawShape","afterDraw","drawShapeAfterDraw","effect","effectDrawers","drawEffect","resetTransform","setTransformValue","newFactor","_factor$key","setStyle","important","elementStyle","Set","prototype","hasOwnProperty","getPropertyValue","removeProperty","Canvas","_applyPostDrawUpdaters","_postDrawUpdaters","_updater$afterDraw","_applyPreDrawUpdaters","zOpacity","_preDrawUpdaters","_updater$beforeDraw","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","_plugin$resize","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","coverRgb","coverColor","_coverColorStyle","reject","_coverImage","evt","_initStyle","_fullScreen","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","trailFill","fillColor","_trailFill","_paintBase","baseColor","fillRect","paintBase","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","Node","observe","attributes","originalStyle","_originalStyle","_mutationObserver","fullScreen","_standardSize","stdSize","_context","_generated","paint","stop","drawAsync","_particle$getStrokeCo","pfColor","psColor","_particle$bubble$opac","_particle$strokeOpaci","zOpacityFactor","opacityRate","zStrokeOpacity","sizeRate","drawParticlePlugin","drawPlugin","obs","MutationObserver","safeMutationObserver","records","record","attributeName","initUpdaters","initPlugins","background","backgroundPosition","backgroundRepeat","repeat","backgroundSize","_plugin$particleFillC","_updater$getColorStyl","loadCanvas","dataset","ariaHidden","clonedStyle","_style$getPropertyVal","_style$getPropertyPri","styleKey","styleValue","stylePriority","getPropertyPriority","_clonedStyle$setPrope2","_clonedStyle$setPrope","cloneStyle","standardSize","retinaSize","currentSize","newSize","oldSize","started","setResizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","themes","loadTheme","_handleVisibilityChange","_document","pauseOnBlur","hidden","pageHidden","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parent","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","target","_mouseDown","downPosition","_mouseTouchClick","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","Parallax","HoverEvent","ResizeEvent","Events","Modes","interactors","interactor","Interactivity","ManualParticle","_data$position$x","_data$position$y","_data$position$mode","Responsive","screen","ThemeDefault","any","Theme","AnimationOptions","RangedAnimationOptions","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","AnimationValueWithRandom","RangedAnimationValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","overlap","Effect","_this$options$effect","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","_data$bottom","_data$left","_data$right","_data$top","Spin","Move","straight","OpacityAnimation","Opacity","ParticlesDensity","ParticlesNumberLimit","ParticlesNumber","density","limit","Shadow","Shape","_this$options$shape","SizeAnimation","Size","Stroke","ZIndex","ParticlesOptions","number","hasOwn","_this$groups$group","strokeToLoad","sourceOptionsArr","sourceOptions","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","autoPlay","detectRetina","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","_this$_findDefaultThe","_this$_findDefaultThe2","optResponsive","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","availWidth","setTheme","chosenTheme","clientDarkMode","InteractionManager","_interactors","_externalInteractors","_particleInteractors","externalInteract","_interactor$handleCli","getInteractors","external","particlesInteract","fixOutMode","checkModes","coord","maxCoord","setCb","Particle","_this","_calcPosition","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","baseVelocity","getParticleBaseVelocity","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","backSum","darken","alterHsl","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","topRight","bottomRight","bottomLeft","topLeft","getParticleDirectionAngle","override","_shapeDrawer$particle","shapeDrawer","_plugin$particleDestr","_updater$particleDest","dispatchEvent","_this$bubble$color","_this$bubble$radius","_this$bubble$color2","overrideOptions","_effectData$fill","_effectData$close","_shapeData$fill","_shapeData$close","_effectDrawer","_shapeDrawer","_shapeDrawer2","_effectDrawer2","_effectDrawer2$partic","_shapeDrawer3","_shapeDrawer3$particl","effectClose","effectFill","ignoresResizeRatio","mainOptions","effectType","shapeType","effectOptions","_overrideOptions$effe","_overrideOptions$shap","availableEffects","availableShapes","effectData","loadEffectData","loadShapeData","getPathGenerator","addPath","initParticle","setLastZIndex","effectDrawer","getEffectDrawer","loadEffect","getShapeDrawer","sideCountFunc","mover","movers","_mover$init","_plugin$particleCreat","isInsideCanvas","isVisible","_updater$reset","Point","BaseRange","distPos","rectangle","rectRange","w","w2","h2","QuadTree","capacity","_subdivide","fixedIndex","_subs","_divided","_points","insert","check","queryRectangle","qTreeRectangle","Particles","_addToPool","_pool","_applyDensity","manualCount","_options$number$densi","numberOptions","_limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","densityOptions","_pushParticle","initializer","pop","_nextId","canAdd","_array","_zArray","particleAdded","_removeParticle","zIdx","splice","particleRemoved","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","addManualParticles","addParticle","_this$_groupLimits$ge","limitMode","currentCount","countToRemove","wait","condition","_plugin$particlesInit","_plugin$particlesInit2","particlesInitialization","j","_groupOptions$number","getMovers","getUpdaters","pathGenerators","nb","redraw","removeAt","deleted","_resizeFactor","particlesToDelete","_plugin$update","resizeFactor","_plugin$particleUpdat","particleUpdate","checkDelete","zArray","Retina","devicePixelRatio","moveDistance","guardCheck","loadContainerOptions","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","_this$_lastFrameTime","_smooth","_lastFrameTime","initDelta","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","_clickHandlers","_sourceOptions","_initialSourceOptions","_options","_eventListeners","_intersectionObserver","IntersectionObserver","safeIntersectionObserver","containerBuilt","addClickHandler","el","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","clearClickHandlers","_this$interactivity$e","_effectDrawer$destroy","_shapeDrawer$destroy","clearPlugins","mainArr","items","containerDestroyed","refreshTime","_drawAnimationFrame","export","supported","blob","_plugin$handleClickMo","effects","getSupportedEffects","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","_drawer$init","_drawer$init2","_plugin$init","containerInit","_plugin$particlesSetu","particlesSetup","_currentTheme","handle","_plugin$pause","containerPaused","needsUpdate","containerPlay","HTMLElement","_plugin$start","containerStarted","_delayTimeout","_plugin$stop","containerStopped","newMaxWidth","_responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","listeners","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","Engine","_configs","_domArray","_eventDispatcher","_initialized","easingFunctions","_initializers","presets","configs","config","version","addConfig","_config$key","configAdded","addEffect","interactorInitializer","moverInitializer","updaterInitializer","addPathGenerator","addPreset","validType","pluginVersion","dom","domItem","_this$easingFunctions","_params$id","_params$element","fallback","json","getDataFromUrl","currentOptions","oldIndex","description","newItem","old","deleteCount","domContainer","getDomContainer","getElementById","body","append","HTMLCanvasElement","tagName","existingCanvases","getElementsByTagName","appendChild","fullPercent","getCanvasFromContainer","_plugin$loadOptions","_updater$loadOptions","setOnClickHandler","GradientType","tsParticles"],"sourceRoot":""}