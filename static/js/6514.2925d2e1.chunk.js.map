{"version":3,"file":"static/js/6514.2925d2e1.chunk.js","mappings":"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","sources":["pages/oauth/VerifyEmail.tsx"],"sourcesContent":["import {\n    Alert,\n    Box,\n    Button,\n    CircularProgress,\n    Container,\n    Typography,\n} from '@mui/material';\nimport { Particles } from '@tsparticles/react';\nimport { loadSlim } from '@tsparticles/slim';\nimport { motion } from 'framer-motion';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport axiosInstance from '../../utils/axiosInstance';\n  \n  const MotionBox = motion(Box);\n  const MotionButton = motion(Button);\n  \n  const VerifyEmail: React.FC = () => {\n    const navigate = useNavigate();\n    const [searchParams] = useSearchParams();\n    const token = searchParams.get('token'); // Lấy token từ URL\n    const [status, setStatus] = useState<'loading' | 'success' | 'error'>('loading');\n    const [message, setMessage] = useState<string>('');\n    const [particlesLoaded, setParticlesLoaded] = useState(false);\n  \n    const particlesInit = useCallback(async () => {\n      await loadSlim(window.tsParticles);\n      setParticlesLoaded(true);\n    }, []);\n  \n    useEffect(() => {\n      particlesInit();\n    }, [particlesInit]);\n  \n    useEffect(() => {\n      const verifyEmail = async () => {\n        if (!token) {\n          setStatus('error');\n          setMessage('Token không hợp lệ. Vui lòng thử lại.');\n          return;\n        }\n  \n        try {\n          const response = await axiosInstance.get(`/api/auth/verify-email?token=${token}`);\n          if (response.status === 200) {\n            setStatus('success');\n            setMessage(response.data.message || 'Email đã được xác thực thành công!');\n            setTimeout(() => navigate('/login'), 3000); // Chuyển về login sau 3s\n          } else {\n            setStatus('error');\n            setMessage('Xác thực thất bại! Token không hợp lệ hoặc đã hết hạn.');\n          }\n        } catch (error: any) {\n          console.error('❌ Lỗi xác thực:', error);\n          setStatus('error');\n          setMessage(\n            error.response?.data?.message || 'Xác thực thất bại! Token không hợp lệ hoặc đã hết hạn.'\n          );\n        }\n      };\n  \n      verifyEmail();\n    }, [token, navigate]);\n  \n    const handleResendEmail = async () => {\n      try {\n        setStatus('loading');\n        setMessage('Đang gửi lại email xác thực...');\n        const response = await axiosInstance.post('/api/auth/resend-verification', {\n          email: searchParams.get('email') || '',\n        });\n        setStatus('success');\n        setMessage(response.data.message || 'Email xác thực đã được gửi lại! Vui lòng kiểm tra hộp thư.');\n      } catch (error: any) {\n        setStatus('error');\n        setMessage(\n          error.response?.data?.message || 'Không thể gửi lại email xác thực. Vui lòng thử lại sau.'\n        );\n      }\n    };\n  \n    return (\n      <Box\n        sx={{\n          minHeight: '100vh',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative',\n          overflow: 'hidden',\n          background: 'linear-gradient(135deg, #0A0A23 0%, #1C1C3D 100%)',\n        }}\n      >\n        {particlesLoaded && (\n          <Particles\n            id=\"tsparticles\"\n            options={{\n              background: { color: { value: 'transparent' } },\n              fpsLimit: 60,\n              particles: {\n                number: { value: 50, density: { enable: true } },\n                color: { value: '#A78BFA' },\n                shape: { type: 'circle' },\n                opacity: { value: { min: 0.1, max: 0.5 } },\n                size: { value: { min: 1, max: 3 } },\n                move: {\n                  enable: true,\n                  speed: 1,\n                  direction: 'none',\n                  random: true,\n                  straight: false,\n                  outModes: 'out',\n                },\n              },\n              interactivity: {\n                events: {\n                  onHover: { enable: true, mode: 'repulse' },\n                  onClick: { enable: true, mode: 'push' },\n                },\n                modes: {\n                  repulse: { distance: 100, duration: 0.4 },\n                  push: { quantity: 4 },\n                },\n              },\n              detectRetina: true,\n            }}\n            style={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              zIndex: 0,\n            }}\n          />\n        )}\n  \n        <Container\n          maxWidth=\"sm\"\n          sx={{\n            zIndex: 1,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            minHeight: '100vh',\n          }}\n        >\n          <MotionBox\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.8, type: 'spring', stiffness: 200, damping: 20 }}\n            sx={{\n              p: { xs: 3, sm: 4 },\n              borderRadius: '20px',\n              background: 'rgba(28, 28, 61, 0.95)',\n              backdropFilter: 'blur(10px)',\n              textAlign: 'center',\n              boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',\n              maxWidth: 500,\n              width: '100%',\n            }}\n          >\n            {/* Hình ảnh minh họa */}\n            <Box sx={{ mb: 3 }}>\n              <img\n                src=\"https://fakebill.taobillgia.com/public/src/vtd/img/svg/verify-email.svg\"\n                alt=\"Verify Email Illustration\"\n                style={{ width: '150px', height: '150px' }}\n              />\n            </Box>\n  \n            <Typography\n              variant=\"h4\"\n              sx={{\n                fontFamily: \"'Poppins', sans-serif\",\n                fontWeight: 700,\n                color: '#FFFFFF',\n                mb: 2,\n              }}\n            >\n              Xác thực email của bạn 📧\n            </Typography>\n  \n            {status === 'loading' && (\n              <>\n                <CircularProgress sx={{ color: '#A78BFA', mb: 2 }} />\n                <Typography\n                  sx={{\n                    fontFamily: \"'Poppins', sans-serif\",\n                    color: '#A1A1AA',\n                    fontSize: { xs: '1rem', sm: '1.2rem' },\n                  }}\n                >\n                  {message || 'Đang xác thực email...'}\n                </Typography>\n              </>\n            )}\n  \n            {status === 'success' && (\n              <>\n                <Alert\n                  severity=\"success\"\n                  sx={{\n                    mb: 3,\n                    borderRadius: '10px',\n                    background: 'rgba(255, 255, 255, 0.9)',\n                    color: '#333',\n                  }}\n                >\n                  ✅ {message}\n                </Alert>\n                <MotionButton\n                  variant=\"contained\"\n                  onClick={() => navigate('/login')}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  sx={{\n                    py: 1.5,\n                    borderRadius: '10px',\n                    fontSize: '1rem',\n                    fontWeight: 'bold',\n                    background: '#A78BFA',\n                    color: '#FFFFFF',\n                    '&:hover': { background: '#906EEB' },\n                  }}\n                >\n                  Đi đến trang đăng nhập\n                </MotionButton>\n              </>\n            )}\n  \n            {status === 'error' && (\n              <>\n                <Alert\n                  severity=\"error\"\n                  sx={{\n                    mb: 3,\n                    borderRadius: '10px',\n                    background: 'rgba(255, 255, 255, 0.9)',\n                    color: '#333',\n                  }}\n                >\n                  ❌ {message}\n                </Alert>\n                <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2 }}>\n                  <MotionButton\n                    variant=\"outlined\"\n                    onClick={handleResendEmail}\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    sx={{\n                      py: 1.5,\n                      borderRadius: '10px',\n                      fontSize: '1rem',\n                      fontWeight: 'bold',\n                      borderColor: '#A78BFA',\n                      color: '#A78BFA',\n                      '&:hover': { borderColor: '#906EEB', color: '#906EEB' },\n                    }}\n                  >\n                    Gửi lại email xác thực\n                  </MotionButton>\n                  <MotionButton\n                    variant=\"contained\"\n                    onClick={() => navigate('/register')}\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    sx={{\n                      py: 1.5,\n                      borderRadius: '10px',\n                      fontSize: '1rem',\n                      fontWeight: 'bold',\n                      background: '#A78BFA',\n                      color: '#FFFFFF',\n                      '&:hover': { background: '#906EEB' },\n                    }}\n                  >\n                    Quay lại trang đăng ký\n                  </MotionButton>\n                </Box>\n              </>\n            )}\n          </MotionBox>\n        </Container>\n      </Box>\n    );\n  };\n  \n  export default VerifyEmail;"],"names":["MotionBox","motion","Box","MotionButton","Button","VerifyEmail","navigate","useNavigate","searchParams","useSearchParams","token","get","status","setStatus","useState","message","setMessage","particlesLoaded","setParticlesLoaded","particlesInit","useCallback","async","loadSlim","window","tsParticles","useEffect","response","axiosInstance","concat","data","setTimeout","error","_error$response","_error$response$data","console","verifyEmail","_jsxs","sx","minHeight","display","alignItems","justifyContent","position","overflow","background","children","_jsx","Particles","id","options","color","value","fpsLimit","particles","number","density","enable","shape","type","opacity","min","max","size","move","speed","direction","random","straight","outModes","interactivity","events","onHover","mode","onClick","modes","repulse","distance","duration","push","quantity","detectRetina","style","top","left","width","height","zIndex","Container","maxWidth","initial","scale","animate","transition","stiffness","damping","p","xs","sm","borderRadius","backdropFilter","textAlign","boxShadow","mb","src","alt","Typography","variant","fontFamily","fontWeight","_Fragment","CircularProgress","fontSize","Alert","severity","whileHover","whileTap","py","gap","post","email","_error$response2","_error$response2$data","borderColor"],"sourceRoot":""}