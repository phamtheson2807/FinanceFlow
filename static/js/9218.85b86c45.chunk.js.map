{"version":3,"file":"static/js/9218.85b86c45.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Psychology.js","pages/ai-advisor/AIAdvisor.tsx","services/geminiService.ts","../node_modules/@mui/icons-material/esm/Send.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 8.57c-.79 0-1.43.64-1.43 1.43s.64 1.43 1.43 1.43 1.43-.64 1.43-1.43-.64-1.43-1.43-1.43\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 3C9.25 3 6.2 5.94 6.02 9.64L4.1 12.2c-.25.33-.01.8.4.8H6v3c0 1.1.9 2 2 2h1v3h7v-4.68c2.36-1.12 4-3.53 4-6.32 0-3.87-3.13-7-7-7m3 7c0 .13-.01.26-.02.39l.83.66c.08.06.1.16.05.25l-.8 1.39c-.05.09-.16.12-.24.09l-.99-.4c-.21.16-.43.29-.67.39L14 13.83c-.01.1-.1.17-.2.17h-1.6c-.1 0-.18-.07-.2-.17l-.15-1.06c-.25-.1-.47-.23-.68-.39l-.99.4c-.09.03-.2 0-.25-.09l-.8-1.39c-.05-.08-.03-.19.05-.25l.84-.66c-.01-.13-.02-.26-.02-.39s.02-.27.04-.39l-.85-.66c-.08-.06-.1-.16-.05-.26l.8-1.38c.05-.09.15-.12.24-.09l1 .4c.2-.15.43-.29.67-.39L12 6.17c.02-.1.1-.17.2-.17h1.6c.1 0 .18.07.2.17l.15 1.06c.24.1.46.23.67.39l1-.4c.09-.03.2 0 .24.09l.8 1.38c.05.09.03.2-.05.26l-.85.66c.03.12.04.25.04.39\"\n}, \"1\")], 'Psychology');","import {\n  Analytics,\n  Psychology,\n  Savings,\n  Send as SendIcon,\n  TrendingUp\n} from '@mui/icons-material';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CircularProgress,\n  Container,\n  Grid,\n  Paper,\n  TextField,\n  Typography\n} from '@mui/material';\nimport { motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport geminiService from '../../services/geminiService';\nimport axiosInstance from '../../utils/axiosInstance';\n\ninterface Message {\n  role: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;\n}\n\ninterface FinancialContext {\n  transactions: any[];\n  savings: any[];\n  investments: any[];\n  budget: any;\n}\n\nconst AIAdvisor: React.FC = () => {\n  // const theme = useTheme(); // Đã comment hoặc xóa do không sử dụng\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      role: 'assistant',\n      content: 'Xin chào! Tôi là AI Tư vấn tài chính của FinanceFlow. Tôi có thể giúp bạn:\\n\\n1. Phân tích chi tiêu và đưa ra gợi ý tối ưu\\n2. Đề xuất kế hoạch tiết kiệm phù hợp\\n3. Tư vấn chiến lược đầu tư\\n4. Giải đáp các thắc mắc về tài chính\\n\\nBạn cần hỗ trợ gì?',\n      timestamp: new Date()\n    }\n  ]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [context, setContext] = useState<FinancialContext>({\n    transactions: [],\n    savings: [],\n    investments: [],\n    budget: null\n  });\n\n  const features = [\n    {\n      icon: <Analytics sx={{ fontSize: 40, color: '#3B82F6' }} />,\n      title: 'Phân tích chi tiêu',\n      description: 'Phân tích chi tiết thói quen chi tiêu và đưa ra gợi ý tối ưu',\n      path: '/dashboard/ai-advisor/spending-analysis'\n    },\n    {\n      icon: <Savings sx={{ fontSize: 40, color: '#10B981' }} />,\n      title: 'Gợi ý tiết kiệm',\n      description: 'Đề xuất kế hoạch tiết kiệm phù hợp với mục tiêu của bạn',\n      path: '/dashboard/ai-advisor/savings-suggestions'\n    },\n    {\n      icon: <TrendingUp sx={{ fontSize: 40, color: '#F59E0B' }} />,\n      title: 'Tư vấn đầu tư',\n      description: 'Tư vấn chiến lược đầu tư dựa trên mục tiêu và mức độ rủi ro',\n      path: '/dashboard/ai-advisor/investment-advice'\n    }\n  ];\n\n  // Fetch financial data\n  useEffect(() => {\n    const fetchFinancialData = async () => {\n      try {\n        setLoading(true);\n        const [transactionsRes, savingsRes, investmentsRes, budgetRes] = await Promise.all([\n          axiosInstance.get('/api/transactions').catch(err => ({ data: { transactions: [] } })),\n          axiosInstance.get('/api/savings').catch(err => ({ data: [] })),\n          axiosInstance.get('/api/investments').catch(err => ({ data: [] })),\n          axiosInstance.get('/api/budgets').catch(err => ({ data: null }))\n        ]);\n\n        setContext({\n          transactions: transactionsRes.data.transactions || [],\n          savings: savingsRes.data || [],\n          investments: investmentsRes.data || [],\n          budget: budgetRes.data || null\n        });\n      } catch (error) {\n        console.error('Error fetching financial data:', error);\n        setContext({\n          transactions: [],\n          savings: [],\n          investments: [],\n          budget: null\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFinancialData();\n  }, []);\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const userMessage: Message = {\n      role: 'user',\n      content: input,\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setLoading(true);\n\n    try {\n      const aiResponse = await geminiService.generateFinancialAdvice(context, input);\n      \n      const assistantMessage: Message = {\n        role: 'assistant',\n        content: aiResponse,\n        timestamp: new Date()\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n    } catch (error: any) {\n      console.error('AI Response Error:', error);\n      const errorMessage: Message = {\n        role: 'assistant',\n        content: error.message || 'Xin lỗi, tôi không thể xử lý yêu cầu của bạn lúc này.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatMessage = (content: string) => {\n    return content.split('\\n').map((line, index) => (\n      <Typography key={index} variant=\"body1\" sx={{ mb: 1 }}>\n        {line}\n      </Typography>\n    ));\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <Grid container spacing={4}>\n        {/* Tính năng chính */}\n        <Grid item xs={12}>\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n          >\n            <Typography\n              variant=\"h4\"\n              gutterBottom\n              sx={{\n                fontWeight: 700,\n                background: 'linear-gradient(45deg, #3B82F6, #2563EB)',\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent',\n                mb: 4\n              }}\n            >\n              AI Tư vấn Tài chính\n            </Typography>\n\n            <Grid container spacing={3}>\n              {features.map((feature, index) => (\n                <Grid item xs={12} md={4} key={index}>\n                  <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5, delay: index * 0.1 }}\n                  >\n                    <Card\n                      sx={{\n                        height: '100%',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        borderRadius: 3,\n                        cursor: 'pointer',\n                        transition: 'all 0.3s ease-in-out',\n                        '&:hover': {\n                          transform: 'translateY(-8px)',\n                          boxShadow: '0 12px 24px rgba(0,0,0,0.1)'\n                        }\n                      }}\n                      onClick={() => navigate(feature.path)}\n                    >\n                      <CardContent>\n                        <Box sx={{ mb: 2 }}>{feature.icon}</Box>\n                        <Typography variant=\"h6\" gutterBottom>\n                          {feature.title}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {feature.description}\n                        </Typography>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                </Grid>\n              ))}\n            </Grid>\n          </motion.div>\n        </Grid>\n\n        {/* Chat với AI */}\n        <Grid item xs={12}>\n          <Card\n            sx={{\n              borderRadius: 3,\n              boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n              height: '600px',\n              display: 'flex',\n              flexDirection: 'column',\n              background: '#1C1C3D'\n            }}\n          >\n            <CardContent sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n              <Box sx={{ flexGrow: 1, overflowY: 'auto', mb: 2 }}>\n                {messages.map((message, index) => (\n                  <Box\n                    key={index}\n                    sx={{\n                      display: 'flex',\n                      justifyContent: message.role === 'user' ? 'flex-end' : 'flex-start',\n                      mb: 2\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        display: 'flex',\n                        alignItems: 'flex-start',\n                        maxWidth: '70%'\n                      }}\n                    >\n                      {message.role === 'assistant' && (\n                        <Avatar\n                          sx={{\n                            bgcolor: '#A78BFA',\n                            mr: 1,\n                            width: 32,\n                            height: 32\n                          }}\n                        >\n                          <Psychology fontSize=\"small\" />\n                        </Avatar>\n                      )}\n                      <Paper\n                        sx={{\n                          p: 2,\n                          bgcolor: message.role === 'user' ? '#A78BFA' : '#2A2A4A',\n                          color: message.role === 'user' ? 'white' : '#A1A1AA',\n                          borderRadius: 3,\n                          borderTopRightRadius: message.role === 'user' ? 0 : 3,\n                          borderTopLeftRadius: message.role === 'assistant' ? 0 : 3,\n                          boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n                        }}\n                      >\n                        {formatMessage(message.content)}\n                        <Typography\n                          variant=\"caption\"\n                          sx={{\n                            display: 'block',\n                            mt: 1,\n                            color: message.role === 'user' ? 'rgba(255,255,255,0.7)' : 'rgba(161,161,170,0.7)'\n                          }}\n                        >\n                          {message.timestamp.toLocaleTimeString()}\n                        </Typography>\n                      </Paper>\n                      {message.role === 'user' && (\n                        <Avatar\n                          sx={{\n                            ml: 1,\n                            width: 32,\n                            height: 32,\n                            bgcolor: '#A78BFA'\n                          }}\n                        >\n                          U\n                        </Avatar>\n                      )}\n                    </Box>\n                  </Box>\n                ))}\n              </Box>\n\n              <Box sx={{ display: 'flex', gap: 1 }}>\n                <TextField\n                  fullWidth\n                  placeholder=\"Nhập câu hỏi của bạn...\"\n                  value={input}\n                  onChange={(e) => setInput(e.target.value)}\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter' && !e.shiftKey) {\n                      e.preventDefault();\n                      handleSend();\n                    }\n                  }}\n                  multiline\n                  maxRows={4}\n                  sx={{\n                    '& .MuiOutlinedInput-root': {\n                      borderRadius: 3,\n                      background: '#2A2A4A',\n                      color: '#FFFFFF',\n                      '& fieldset': {\n                        borderColor: 'rgba(255,255,255,0.1)'\n                      },\n                      '&:hover fieldset': {\n                        borderColor: 'rgba(255,255,255,0.2)'\n                      },\n                      '&.Mui-focused fieldset': {\n                        borderColor: '#A78BFA'\n                      }\n                    },\n                    '& .MuiInputBase-input': {\n                      color: '#FFFFFF'\n                    }\n                  }}\n                />\n                <Button\n                  variant=\"contained\"\n                  onClick={handleSend}\n                  disabled={loading || !input.trim()}\n                  sx={{\n                    borderRadius: 3,\n                    minWidth: 100,\n                    bgcolor: '#A78BFA',\n                    '&:hover': {\n                      bgcolor: '#8B5CF6'\n                    }\n                  }}\n                >\n                  {loading ? (\n                    <CircularProgress size={24} sx={{ color: 'white' }} />\n                  ) : (\n                    <SendIcon />\n                  )}\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default AIAdvisor; ","import { GoogleGenerativeAI } from \"@google/generative-ai\";\n\nconst API_KEY = process.env.REACT_APP_GEMINI_API_KEY || \"AIzaSyCWqESnXoAoAgMGLeQwsTntDEzS5hmdIyc\";\nconst genAI = new GoogleGenerativeAI(API_KEY);\n\nconst geminiService = {\n  generateFinancialAdvice: async (context: any, userInput: string) => {\n    try {\n      // Khởi tạo model với cấu hình cụ thể\n      const model = genAI.getGenerativeModel({ \n        model: \"gemini-1.5-flash\",\n        generationConfig: {\n          temperature: 0.7,\n          topK: 40,\n          topP: 0.95,\n          maxOutputTokens: 2048,\n        }\n      });\n\n      // Chuẩn bị prompt với ngữ cảnh\n      const prompt = `\n        Bạn là trợ lý tài chính cá nhân của FinanceFlow, một trang web giúp người dùng quản lý tài chính. \n        Bạn hỗ trợ người dùng bằng tiếng Việt, trả lời các câu hỏi về quản lý tài chính, tiết kiệm, đầu tư, ngân sách, thu chi, báo cáo tài chính, và các tính năng của FinanceFlow.\n        Hãy trả lời một cách tự nhiên, dễ hiểu, và chuyên nghiệp.\n\n        Thông tin tài chính của người dùng:\n        - Giao dịch: ${JSON.stringify(context.transactions, null, 2)}\n        - Tiết kiệm: ${JSON.stringify(context.savings, null, 2)}\n        - Đầu tư: ${JSON.stringify(context.investments, null, 2)}\n        - Ngân sách: ${JSON.stringify(context.budget, null, 2)}\n\n        Câu hỏi của người dùng: ${userInput}\n\n        Hãy phân tích thông tin và đưa ra lời khuyên chi tiết bằng tiếng Việt. Tập trung vào:\n        1. Phân tích tình hình tài chính hiện tại\n        2. Đề xuất cải thiện cụ thể\n        3. Các bước hành động tiếp theo\n      `;\n\n      // Gọi API để sinh nội dung\n      const result = await model.generateContent(prompt);\n      const response = await result.response;\n      return response.text();\n    } catch (error: any) {\n      console.error('Gemini API Error:', error);\n      throw new Error('Không thể kết nối với AI Assistant. Vui lòng thử lại sau.');\n    }\n  }\n};\n\nexport default geminiService; ","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');"],"names":["createSvgIcon","_jsx","d","AIAdvisor","navigate","useNavigate","messages","setMessages","useState","role","content","timestamp","Date","input","setInput","loading","setLoading","context","setContext","transactions","savings","investments","budget","features","icon","Analytics","sx","fontSize","color","title","description","path","Savings","TrendingUp","useEffect","async","transactionsRes","savingsRes","investmentsRes","budgetRes","Promise","all","axiosInstance","get","catch","err","data","error","console","fetchFinancialData","handleSend","trim","userMessage","prev","assistantMessage","geminiService","generateFinancialAdvice","errorMessage","message","Container","maxWidth","py","children","_jsxs","Grid","container","spacing","item","xs","motion","div","initial","opacity","y","animate","transition","duration","Typography","variant","gutterBottom","fontWeight","background","WebkitBackgroundClip","WebkitTextFillColor","mb","map","feature","index","md","delay","Card","height","display","flexDirection","borderRadius","cursor","transform","boxShadow","onClick","CardContent","Box","flexGrow","overflowY","justifyContent","alignItems","Avatar","bgcolor","mr","width","Psychology","Paper","p","borderTopRightRadius","borderTopLeftRadius","split","line","mt","toLocaleTimeString","ml","gap","TextField","fullWidth","placeholder","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","multiline","maxRows","borderColor","Button","disabled","minWidth","CircularProgress","size","SendIcon","genAI","GoogleGenerativeAI","process","userInput","model","getGenerativeModel","generationConfig","temperature","topK","topP","maxOutputTokens","prompt","concat","JSON","stringify","result","generateContent","response","text","Error"],"sourceRoot":""}