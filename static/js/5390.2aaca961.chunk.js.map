{"version":3,"file":"static/js/5390.2aaca961.chunk.js","mappings":"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","sources":["components/StripeCheckoutDialog.tsx","components/PricingPage.tsx"],"sourcesContent":["import { Dialog, DialogTitle, DialogContent, DialogActions, Button, CircularProgress, Typography } from '@mui/material';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useState } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\n\ninterface StripeCheckoutDialogProps {\n  open: boolean;\n  onClose: () => void;\n  plan: 'premium' | 'pro';\n  onSuccess: () => void;\n}\n\nconst StripeCheckoutDialog = ({ open, onClose, plan, onSuccess }: StripeCheckoutDialogProps) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(null);\n    setLoading(true);\n\n    if (!stripe || !elements) {\n      setError('Stripe chưa sẵn sàng.');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // Gọi backend để tạo paymentIntent\n      const { data } = await axiosInstance.post('/api/stripe/create-payment-intent', { plan });\n      const clientSecret = data.clientSecret;\n\n      const result = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)!,\n        },\n      });\n\n      if (result.error) {\n        setError(result.error.message || 'Thanh toán thất bại');\n      } else if (result.paymentIntent && result.paymentIntent.status === 'succeeded') {\n        // Gọi backend để cập nhật subscription\n        await axiosInstance.post('/api/subscription/activate', { plan });\n        onSuccess();\n        onClose();\n      }\n    } catch (err: any) {\n      setError(err?.response?.data?.message || 'Có lỗi xảy ra');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Thanh toán với Stripe</DialogTitle>\n      <DialogContent>\n        <form onSubmit={handleSubmit}>\n          <CardElement options={{ hidePostalCode: true }} />\n          {error && <Typography color=\"error\" sx={{ mt: 2 }}>{error}</Typography>}\n          <DialogActions sx={{ mt: 2 }}>\n            <Button onClick={onClose} disabled={loading}>Hủy</Button>\n            <Button type=\"submit\" variant=\"contained\" disabled={loading || !stripe}>\n              {loading ? <CircularProgress size={24} /> : 'Thanh toán'}\n            </Button>\n          </DialogActions>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default StripeCheckoutDialog;","import { CheckCircleOutline, EmojiEvents } from '@mui/icons-material';\nimport { Box, Button, Card, CardContent, Chip, Grid, List, ListItem, ListItemIcon, Paper, styled, Typography } from '@mui/material';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../utils/axiosInstance';\nimport StripeCheckoutDialog from './StripeCheckoutDialog';\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  borderRadius: '24px',\n  background: 'linear-gradient(135deg, #ffffff 0%, #f5f7fa 100%)',\n  boxShadow: '0 10px 30px rgba(0, 0, 0, 0.12)',\n  transition: 'transform 0.3s, box-shadow 0.3s',\n  '&:hover': {\n    transform: 'translateY(-10px) scale(1.02)',\n    boxShadow: '0 20px 40px rgba(25, 118, 210, 0.18)',\n  },\n  position: 'relative',\n  overflow: 'hidden',\n}));\n\nconst ProCard = styled(StyledCard)(({ theme }) => ({\n  border: `2.5px solid ${theme.palette.primary.main}`,\n  background: 'linear-gradient(120deg, #e3f0ff 0%, #f0f7ff 100%)',\n  position: 'relative',\n  overflow: 'visible',\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    width: '150px',\n    height: '150px',\n    background: 'linear-gradient(135deg, rgba(25, 118, 210, 0.2) 0%, rgba(25, 118, 210, 0) 60%)',\n    borderRadius: '0 24px 0 150px',\n    zIndex: 0,\n  }\n}));\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  borderRadius: '30px',\n  padding: '14px 32px',\n  textTransform: 'none',\n  fontWeight: 'bold',\n  fontSize: '1.1rem',\n  background: `linear-gradient(90deg, ${theme.palette.primary.main} 0%, ${theme.palette.primary.dark} 100%)`,\n  color: '#fff',\n  boxShadow: '0 6px 20px rgba(25, 118, 210, 0.15)',\n  '&:hover': {\n    background: `linear-gradient(90deg, ${theme.palette.primary.dark} 0%, ${theme.palette.primary.main} 100%)`,\n    boxShadow: '0 10px 30px rgba(25, 118, 210, 0.25)',\n    transform: 'translateY(-2px)',\n  },\n  '&:disabled': {\n    background: 'linear-gradient(90deg, #cccccc 0%, #aaaaaa 100%)',\n    color: '#666',\n  },\n  transition: 'all 0.3s ease',\n}));\n\nconst FeatureItem = styled(ListItem)(({ theme }) => ({\n  paddingTop: 6,\n  paddingBottom: 6,\n  position: 'relative',\n}));\n\nconst PriceBadge = styled(Paper)(({ theme }) => ({\n  position: 'absolute',\n  top: -20,\n  right: -20, \n  padding: '5px 15px',\n  background: 'linear-gradient(90deg, #FF9800 0%, #FF5722 100%)',\n  color: 'white',\n  fontWeight: 'bold',\n  transform: 'rotate(45deg)',\n  zIndex: 10,\n  boxShadow: '0 2px 10px rgba(255, 152, 0, 0.3)',\n  borderRadius: 0,\n  width: 140,\n  textAlign: 'center',\n}));\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY!);\n\nconst PricingPage = () => {\n  const [selectedPlan, setSelectedPlan] = useState<'pro' | ''>('');\n  const [currentPlan, setCurrentPlan] = useState('free');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const [stripeDialogOpen, setStripeDialogOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchSubscription = async () => {\n      try {\n        const response = await axiosInstance.get('/api/subscription');\n        setCurrentPlan(response.data.plan || 'free');\n      } catch (error) {\n        setCurrentPlan('free');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSubscription();\n  }, []);\n\n  const handleUpgrade = () => {\n    setSelectedPlan('pro');\n    setStripeDialogOpen(true);\n  };\n\n  const plans = [\n    {\n      title: 'Free',\n      price: '0',\n      description: 'Bắt đầu hành trình quản lý tài chính cá nhân',\n      features: [\n        'Quản lý thu chi cơ bản',\n        'Báo cáo tổng thu chi hàng tháng',\n        'Tính năng đầu tư cơ bản',\n        'Giới hạn 50 giao dịch/tháng',\n        'Lưu trữ dữ liệu cơ bản',\n      ],\n      limitations: [\n        'Không xuất được báo cáo PDF/Excel',\n        'Không có phân tích chuyên sâu',\n        'Không có hỗ trợ ưu tiên',\n      ],\n      buttonText: currentPlan === 'free' ? 'Gói hiện tại' : 'Chọn gói này',\n      disabled: currentPlan === 'free' || currentPlan === 'pro',\n      highlight: false,\n    },\n    {\n      title: 'Pro',\n      price: '20',\n      description: 'Giải pháp toàn diện cho người dùng đầu tư chuyên nghiệp',\n      features: [\n        'Quản lý tài chính không giới hạn',\n        'Tính năng đầu tư nâng cao',\n        'Xuất báo cáo (PDF/Excel)',\n        'Phân tích chuyên sâu và dự báo',\n        'Quản lý nhiều tài khoản',\n        'Tích hợp ngân hàng (API)',\n        'Hỗ trợ ưu tiên 24/7',\n        'Dữ liệu được sao lưu đám mây',\n      ],\n      buttonText: currentPlan === 'pro' ? 'Gói hiện tại' : 'Nâng cấp ngay',\n      disabled: currentPlan === 'pro',\n      highlight: true,\n    },\n  ];\n\n  return (\n    <Box\n      sx={{\n        minHeight: '100vh',\n        background: 'linear-gradient(135deg, #f5f9ff 0%, #ebf5ff 100%)',\n        py: { xs: 8, md: 12 },\n        px: { xs: 2, md: 6 },\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n    >\n      <Box \n        sx={{ \n          position: 'absolute', \n          width: '600px', \n          height: '600px', \n          background: 'radial-gradient(circle, rgba(25,118,210,0.1) 0%, rgba(25,118,210,0) 70%)',\n          top: '-300px',\n          left: '-300px',\n          borderRadius: '50%',\n          zIndex: 0,\n        }}\n      />\n      \n      <Box \n        sx={{ \n          position: 'absolute', \n          width: '400px', \n          height: '400px', \n          background: 'radial-gradient(circle, rgba(25,118,210,0.08) 0%, rgba(25,118,210,0) 70%)',\n          bottom: '-200px',\n          right: '-200px',\n          borderRadius: '50%',\n          zIndex: 0,\n        }}\n      />\n\n      <Box sx={{ position: 'relative', zIndex: 1 }}>\n        <Typography\n          variant=\"h3\"\n          align=\"center\"\n          sx={{\n            fontWeight: 800,\n            color: '#1565c0',\n            mb: 2,\n            letterSpacing: 0.5,\n            textShadow: '0 2px 10px rgba(25, 118, 210, 0.1)',\n            fontSize: { xs: '2.2rem', md: '3rem' },\n          }}\n        >\n          Nâng cấp & Mở khóa Sức mạnh Tài chính\n        </Typography>\n        \n        <Typography\n          align=\"center\"\n          sx={{\n            color: '#546e7a',\n            mb: 3,\n            fontSize: { xs: '1.1rem', md: '1.25rem' },\n            maxWidth: '800px',\n            mx: 'auto',\n            lineHeight: 1.6,\n          }}\n        >\n          Chọn gói phù hợp với nhu cầu quản lý tài chính cá nhân của bạn.\n          Với FinanceFlow, bạn có thể tối ưu hóa dòng tiền và đưa ra quyết định tài chính thông minh hơn.\n        </Typography>\n\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: 1,\n            mb: 7,\n          }}\n        >\n          <Chip \n            label=\"Mới cập nhật\" \n            color=\"primary\" \n            sx={{ \n              fontWeight: 'bold',\n              borderRadius: '20px',\n              px: 1,\n            }} \n          />\n          <Typography sx={{ color: '#1976d2', fontWeight: 500 }}>\n            Gói Free đã hỗ trợ tính năng đầu tư cơ bản!\n          </Typography>\n        </Box>\n\n        {loading ? (\n          <Typography align=\"center\">Đang tải dữ liệu gói...</Typography>\n        ) : (\n          <Grid container spacing={5} justifyContent=\"center\">\n            {plans.map((plan) => (\n              <Grid item xs={12} sm={10} md={5} key={plan.title}>\n                {plan.highlight ? (\n                  <ProCard>\n                    <PriceBadge>NỔI BẬT</PriceBadge>\n                    <Box sx={{ position: 'absolute', top: -30, left: '50%', transform: 'translateX(-50%)', zIndex: 10 }}>\n                      <EmojiEvents sx={{ fontSize: 60, color: '#ff9800', filter: 'drop-shadow(0 3px 10px rgba(255, 152, 0, 0.3))' }} />\n                    </Box>\n                    <CardContent sx={{ textAlign: 'center', pt: 6, pb: 4, position: 'relative', zIndex: 5 }}>\n                      <Typography\n                        variant=\"h4\"\n                        sx={{ fontWeight: 'bold', color: '#1565c0', mb: 1.5, letterSpacing: 1 }}\n                      >\n                        {plan.title}\n                      </Typography>\n                      <Typography\n                        variant=\"h2\"\n                        sx={{\n                          fontWeight: 'bold',\n                          color: '#1565c0',\n                          mb: 1,\n                          lineHeight: 1.1,\n                          textShadow: '0 2px 12px rgba(21, 101, 192, 0.1)',\n                        }}\n                      >\n                        ${plan.price}\n                        <Typography\n                          component=\"span\"\n                          variant=\"h6\"\n                          sx={{ fontWeight: 500, color: '#546e7a', ml: 1, fontSize: '1.1rem' }}\n                        >\n                          /tháng\n                        </Typography>\n                      </Typography>\n                      <Typography\n                        variant=\"body1\"\n                        sx={{ color: '#37474f', mb: 3, fontWeight: 500, minHeight: '48px' }}\n                      >\n                        {plan.description}\n                      </Typography>\n                      <List sx={{ mb: 3, textAlign: 'left' }}>\n                        {plan.features.map((feature, index) => (\n                          <FeatureItem key={index} sx={{ py: 1 }}>\n                            <ListItemIcon sx={{ minWidth: 36 }}>\n                              <CheckCircleOutline sx={{ color: '#4caf50', fontSize: 20 }} />\n                            </ListItemIcon>\n                            <Typography variant=\"body1\" sx={{ fontWeight: 500, color: '#37474f' }}>{feature}</Typography>\n                          </FeatureItem>\n                        ))}\n                      </List>\n                      <StyledButton\n                        size=\"large\"\n                        fullWidth\n                        disabled={plan.disabled}\n                        onClick={handleUpgrade}\n                        sx={{\n                          fontSize: '1.1rem',\n                          py: 2,\n                          mt: 2,\n                          boxShadow: '0 8px 30px rgba(25, 118, 210, 0.2)',\n                          fontWeight: 700,\n                          letterSpacing: 0.5,\n                        }}\n                      >\n                        {plan.buttonText}\n                      </StyledButton>\n                    </CardContent>\n                  </ProCard>\n                ) : (\n                  <StyledCard>\n                    <CardContent sx={{ textAlign: 'center', py: 4, position: 'relative', zIndex: 5 }}>\n                      <Typography\n                        variant=\"h4\"\n                        sx={{ fontWeight: 'bold', color: '#546e7a', mb: 2 }}\n                      >\n                        {plan.title}\n                      </Typography>\n                      <Typography\n                        variant=\"h3\"\n                        sx={{\n                          fontWeight: 'bold',\n                          color: '#546e7a',\n                          mb: 1,\n                        }}\n                      >\n                        ${plan.price}\n                        <Typography\n                          component=\"span\"\n                          variant=\"body1\"\n                          sx={{ fontSize: '1rem', color: '#78909c', ml: 0.5 }}\n                        >\n                          /mãi mãi\n                        </Typography>\n                      </Typography>\n                      <Typography\n                        variant=\"body1\"\n                        sx={{ color: '#546e7a', mb: 3, minHeight: '48px', fontWeight: 500 }}\n                      >\n                        {plan.description}\n                      </Typography>\n                      \n                      <Box sx={{ textAlign: 'left', mb: 2 }}>\n                        <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', color: '#4caf50', mb: 1 }}>\n                          Bao gồm:\n                        </Typography>\n                        <List disablePadding>\n                          {plan.features.map((feature, index) => (\n                            <FeatureItem key={index} sx={{ py: 0.5 }}>\n                              <ListItemIcon sx={{ minWidth: 36 }}>\n                                <CheckCircleOutline sx={{ color: '#4caf50', fontSize: 20 }} />\n                              </ListItemIcon>\n                              <Typography variant=\"body2\" sx={{ color: '#455a64' }}>{feature}</Typography>\n                            </FeatureItem>\n                          ))}\n                        </List>\n                      </Box>\n                      \n                      {plan.limitations && (\n                        <Box sx={{ textAlign: 'left', mb: 3 }}>\n                          <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', color: '#f44336', mb: 1 }}>\n                            Giới hạn:\n                          </Typography>\n                          <List disablePadding>\n                            {plan.limitations.map((limitation, index) => (\n                              <FeatureItem key={index} sx={{ py: 0.5 }}>\n                                <ListItemIcon sx={{ minWidth: 36 }}>\n                                  <CheckCircleOutline sx={{ color: '#f44336', fontSize: 20 }} />\n                                </ListItemIcon>\n                                <Typography variant=\"body2\" sx={{ color: '#455a64' }}>{limitation}</Typography>\n                              </FeatureItem>\n                            ))}\n                          </List>\n                        </Box>\n                      )}\n                      \n                      <StyledButton\n                        disabled={plan.disabled}\n                        fullWidth\n                        sx={{ \n                          fontWeight: 600, \n                          fontSize: '1rem', \n                          py: 1.5, \n                          mt: 1,\n                          background: 'linear-gradient(90deg, #78909c 0%, #546e7a 100%)',\n                          '&:hover': {\n                            background: 'linear-gradient(90deg, #546e7a 0%, #455a64 100%)',\n                          },\n                        }}\n                      >\n                        {plan.buttonText}\n                      </StyledButton>\n                    </CardContent>\n                  </StyledCard>\n                )}\n              </Grid>\n            ))}\n          </Grid>\n        )}\n\n        <Box sx={{ textAlign: 'center', mt: 8 }}>\n          <Typography variant=\"body1\" sx={{ color: '#546e7a', mb: 3 }}>\n            Tất cả các gói đều bao gồm dịch vụ bảo mật và sao lưu dữ liệu. Bạn có thể nâng cấp hoặc hạ cấp bất kỳ lúc nào.\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              borderRadius: '30px',\n              padding: '12px 32px',\n              textTransform: 'none',\n              color: '#1976d2',\n              borderColor: '#1976d2',\n              fontWeight: 600,\n              fontSize: '1.1rem',\n              '&:hover': { \n                backgroundColor: '#e3f2fd',\n                borderColor: '#1565c0',\n                color: '#1565c0',\n              },\n              transition: 'all 0.3s ease',\n            }}\n            onClick={() => navigate('/dashboard')}\n          >\n            Quay lại Dashboard\n          </Button>\n        </Box>\n      </Box>\n\n      {selectedPlan && (\n        <Elements stripe={stripePromise}>\n          <StripeCheckoutDialog\n            open={stripeDialogOpen}\n            onClose={() => setStripeDialogOpen(false)}\n            plan={selectedPlan}\n            onSuccess={() => window.location.reload()}\n          />\n        </Elements>\n      )}\n    </Box>\n  );\n};\n\nexport default PricingPage;"],"names":["_ref","open","onClose","plan","onSuccess","stripe","useStripe","elements","useElements","loading","setLoading","useState","error","setError","_jsxs","Dialog","maxWidth","fullWidth","children","_jsx","DialogTitle","DialogContent","onSubmit","async","e","preventDefault","data","axiosInstance","post","clientSecret","result","confirmCardPayment","payment_method","card","getElement","CardElement","message","paymentIntent","status","err","_err$response","_err$response$data","response","options","hidePostalCode","Typography","color","sx","mt","DialogActions","Button","onClick","disabled","type","variant","CircularProgress","size","StyledCard","styled","Card","theme","borderRadius","background","boxShadow","transition","transform","position","overflow","ProCard","_ref2","border","concat","palette","primary","main","content","top","right","width","height","zIndex","StyledButton","_ref3","padding","textTransform","fontWeight","fontSize","dark","FeatureItem","ListItem","_ref4","paddingTop","paddingBottom","PriceBadge","Paper","_ref5","textAlign","stripePromise","loadStripe","process","PricingPage","selectedPlan","setSelectedPlan","currentPlan","setCurrentPlan","navigate","useNavigate","stripeDialogOpen","setStripeDialogOpen","useEffect","get","fetchSubscription","handleUpgrade","plans","title","price","description","features","limitations","buttonText","highlight","Box","minHeight","py","xs","md","px","left","bottom","align","mb","letterSpacing","textShadow","mx","lineHeight","display","alignItems","justifyContent","gap","Chip","label","Grid","container","spacing","map","item","sm","EmojiEvents","filter","CardContent","pt","pb","component","ml","List","feature","index","ListItemIcon","minWidth","CheckCircleOutline","disablePadding","limitation","borderColor","backgroundColor","Elements","StripeCheckoutDialog","window","location","reload"],"sourceRoot":""}