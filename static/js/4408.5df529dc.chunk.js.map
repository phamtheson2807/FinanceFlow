{"version":3,"file":"static/js/4408.5df529dc.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/Delete.js","pages/admin/AdminNotifications.tsx","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { Alert, Box, Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, List, ListItem, ListItemText, Switch, TextField, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Giữ useNavigate\n\ninterface Notification {\n  _id: string;\n  title: string;\n  content: string;\n  isActive: boolean;\n  createdBy: { name: string; email: string };\n  recipients: { _id: string; name: string; email: string }[];\n  createdAt: Date;\n}\n\nconst AdminNotifications = () => {\n  const navigate = useNavigate(); // Sử dụng navigate\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedNotification, setSelectedNotification] = useState<Partial<Notification> | null>(null);\n  const [newNotification, setNewNotification] = useState<Partial<Notification>>({ title: '', content: '', isActive: false, recipients: [] });\n\n  const fetchNotifications = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) throw new Error('Token không tồn tại');\n      const response = await axios.get('/api/admin/notifications', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setNotifications(response.data);\n    } catch (error) {\n      console.error('Lỗi tải thông báo:', error);\n      setError('Không thể tải danh sách thông báo.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddOrUpdateNotification = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) throw new Error('Token không tồn tại');\n\n      if (selectedNotification?._id) {\n        // Cập nhật thông báo\n        await axios.put(`/api/admin/notifications/${selectedNotification._id}`, newNotification, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n      } else {\n        // Thêm mới thông báo\n        await axios.post('/api/admin/notifications', newNotification, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n      }\n      setOpenDialog(false);\n      setSelectedNotification(null);\n      setNewNotification({ title: '', content: '', isActive: false, recipients: [] });\n      fetchNotifications();\n    } catch (error) {\n      console.error('Lỗi xử lý thông báo:', error);\n      setError('Không thể xử lý thông báo.');\n    }\n  };\n\n  const handleDeleteNotification = async (id: string) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) throw new Error('Token không tồn tại');\n      await axios.delete(`/api/admin/notifications/${id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      fetchNotifications();\n      navigate('/admin/notifications'); // Điều hướng lại sau khi xóa\n    } catch (error) {\n      console.error('Lỗi xóa thông báo:', error);\n      setError('Không thể xóa thông báo.');\n    }\n  };\n\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n\n  return (\n    <Box sx={{ p: { xs: 2, sm: 3, md: 4 }, bgcolor: '#f0f4f8', minHeight: 'calc(100vh - 64px)' }}>\n      <motion.div\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.8, type: 'spring', stiffness: 200, damping: 20 }}\n      >\n        <Typography variant=\"h4\" gutterBottom sx={{ fontFamily: 'Poppins, sans-serif', fontWeight: 'bold', color: '#1E3A8A' }}>\n          Quản lý thông báo\n        </Typography>\n        <Button variant=\"contained\" onClick={() => setOpenDialog(true)} sx={{ mb: 2, bgcolor: '#1976d2', color: 'white' }}>\n          Thêm mới thông báo\n        </Button>\n      </motion.div>\n\n      {loading ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\n          <CircularProgress sx={{ color: '#1E3A8A' }} />\n        </Box>\n      ) : error ? (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      ) : (\n        <List>\n          {notifications.length > 0 ? (\n            notifications.map((notification, index) => (\n              <motion.div\n                key={notification._id}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: index * 0.1, duration: 0.5 }}\n              >\n                <ListItem\n                  sx={{ bgcolor: 'white', mb: 1, borderRadius: 2, boxShadow: '0 2px 5px rgba(0,0,0,0.1)' }}\n                >\n                  <ListItemText\n                    primary={<Typography variant=\"h6\" sx={{ fontFamily: 'Poppins, sans-serif', color: '#1E3A8A' }}>{notification.title}</Typography>}\n                    secondary={\n                      <>\n                        <Typography sx={{ fontFamily: 'Poppins, sans-serif', color: '#555', mt: 0.5 }}>{notification.content}</Typography>\n                        <Typography variant=\"caption\" sx={{ fontFamily: 'Poppins, sans-serif', color: '#777', mt: 0.5 }}>\n                          Được tạo bởi: {notification.createdBy.name} - {new Date(notification.createdAt).toLocaleString('vi-VN')}\n                        </Typography>\n                        <Typography variant=\"caption\" sx={{ fontFamily: 'Poppins, sans-serif', color: notification.isActive ? '#2e7d32' : '#d32f2f', mt: 0.5 }}>\n                          Trạng thái: {notification.isActive ? 'Đang hiển thị' : 'Ẩn'}\n                        </Typography>\n                      </>\n                    }\n                  />\n                  <IconButton onClick={() => { setSelectedNotification(notification); setNewNotification(notification); setOpenDialog(true); }} color=\"primary\">\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton onClick={() => handleDeleteNotification(notification._id)} color=\"error\">\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItem>\n              </motion.div>\n            ))\n          ) : (\n            <Typography sx={{ fontFamily: 'Poppins, sans-serif', color: '#666', textAlign: 'center' }}>\n              Không có thông báo nào.\n            </Typography>\n          )}\n        </List>\n      )}\n\n      <Dialog open={openDialog} onClose={() => { setOpenDialog(false); setSelectedNotification(null); }}>\n        <DialogTitle sx={{ fontFamily: 'Poppins, sans-serif', fontWeight: 'bold', color: '#1E3A8A' }}>\n          {selectedNotification?._id ? 'Chỉnh sửa thông báo' : 'Thêm mới thông báo'}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            fullWidth\n            label=\"Tiêu đề\"\n            value={newNotification.title || ''}\n            onChange={(e) => setNewNotification({ ...newNotification, title: e.target.value })}\n            sx={{ mb: 2 }}\n          />\n          <TextField\n            fullWidth\n            label=\"Nội dung\"\n            value={newNotification.content || ''}\n            onChange={(e) => setNewNotification({ ...newNotification, content: e.target.value })}\n            multiline\n            rows={4}\n            sx={{ mb: 2 }}\n          />\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n            <Typography sx={{ fontFamily: 'Poppins, sans-serif' }}>Hiển thị giữa màn hình:</Typography>\n            <Switch\n              checked={newNotification.isActive || false}\n              onChange={(e) => setNewNotification({ ...newNotification, isActive: e.target.checked })}\n              color=\"primary\"\n            />\n          </Box>\n          {/* Có thể thêm trường recipients nếu cần chọn người dùng cụ thể */}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => { setOpenDialog(false); setSelectedNotification(null); setNewNotification({ title: '', content: '', isActive: false, recipients: [] }); }} sx={{ color: '#777' }}>\n            Hủy\n          </Button>\n          <Button onClick={handleAddOrUpdateNotification} variant=\"contained\" color=\"primary\" sx={{ bgcolor: '#1976d2', color: 'white' }}>\n            {selectedNotification?._id ? 'Cập nhật' : 'Thêm mới'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default AdminNotifications;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","AdminNotifications","navigate","useNavigate","notifications","setNotifications","useState","loading","setLoading","error","setError","openDialog","setOpenDialog","selectedNotification","setSelectedNotification","newNotification","setNewNotification","title","content","isActive","recipients","fetchNotifications","async","token","localStorage","getItem","Error","response","axios","get","headers","Authorization","concat","data","console","useEffect","_jsxs","Box","sx","p","xs","sm","md","bgcolor","minHeight","children","motion","div","initial","opacity","y","animate","transition","duration","type","stiffness","damping","_jsx","Typography","variant","gutterBottom","fontFamily","fontWeight","color","Button","onClick","mb","display","justifyContent","alignItems","height","CircularProgress","Alert","severity","List","length","map","notification","index","x","delay","ListItem","borderRadius","boxShadow","ListItemText","primary","secondary","_Fragment","mt","createdBy","name","Date","createdAt","toLocaleString","IconButton","EditIcon","delete","id","handleDeleteNotification","_id","DeleteIcon","textAlign","Dialog","open","onClose","DialogTitle","DialogContent","TextField","fullWidth","label","value","onChange","e","_objectSpread","target","multiline","rows","gap","Switch","checked","DialogActions","put","post"],"sourceRoot":""}