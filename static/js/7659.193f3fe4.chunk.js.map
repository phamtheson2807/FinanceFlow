{"version":3,"file":"static/js/7659.193f3fe4.chunk.js","mappings":"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","sources":["services/socketService.ts","pages/user/SupportPage.tsx"],"sourcesContent":["// src/services/socketService.ts\nimport { io } from 'socket.io-client';\n\nlet socket: any = null;\n\nexport const initSocket = (token: string) => {\n  if (socket) {\n    socket.disconnect();\n  }\n\n  if (!token) {\n    console.error('‚ùå Token kh√¥ng t·ªìn t·∫°i, kh√¥ng th·ªÉ k·∫øt n·ªëi WebSocket');\n    throw new Error('Token kh√¥ng t·ªìn t·∫°i');\n  }\n\n  // Thay ƒë·ªïi URL t·ª´ localhost sang URL backend ƒë√£ tri·ªÉn khai\n  const socketUrl = process.env.REACT_APP_API_URL \n    ? process.env.REACT_APP_API_URL.replace('/api', '') \n    : 'https://quanlythuchi-backend.onrender.com';\n  \n  socket = io(socketUrl, {\n    auth: { token: `Bearer ${token}` },\n    transports: ['websocket'],\n    reconnection: true,\n    reconnectionAttempts: 5,\n    reconnectionDelay: 1000,\n  });\n\n  socket.on('connect_error', (err: Error) => {\n    console.error('Socket connection error:', err.message, err.stack);\n  });\n\n  socket.on('disconnect', () => {\n    console.log('üì° Socket disconnected');\n  });\n\n  console.log('üì° Socket initialized with full token:', `Bearer ${token}`); // In to√†n b·ªô token\n  return socket;\n};\n\nexport const getSocket = () => socket;\n\nexport const closeSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n    console.log('üì° Socket disconnected');\n  }\n};","import SendIcon from '@mui/icons-material/Send';\nimport { Box, CircularProgress, IconButton, List, ListItem, ListItemText, TextField, Typography } from '@mui/material';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { closeSocket, getSocket, initSocket } from '../../services/socketService';\n\ninterface Message {\n  _id: string;\n  sessionId: string;\n  sender: 'user' | 'admin';\n  content: string;\n  createdAt: Date;\n}\n\nconst SupportPage = () => {\n  const { user, loading } = useAuth();\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState('');\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSendMessage = useCallback(() => {\n    if (!input.trim()) return;\n\n    const socket = getSocket();\n    if (!socket || !socket.connected) {\n      setError('Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn: Ch∆∞a k·∫øt n·ªëi ƒë·∫øn h·ªá th·ªëng h·ªó tr·ª£.');\n      return;\n    }\n\n    const newMessage: Message = {\n      _id: Date.now().toString(),\n      sessionId: user!._id,\n      sender: 'user',\n      content: input,\n      createdAt: new Date(),\n    };\n\n    socket.emit('message', newMessage);\n    setMessages((prev) => [...prev, newMessage]); // Th√™m tin nh·∫Øn v√†o UI ngay l·∫≠p t·ª©c\n    setInput('');\n  }, [input, user]);\n\n  useEffect(() => {\n    if (loading) return;\n\n    if (!user) {\n      setError('B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ chat v·ªõi admin.');\n      return;\n    }\n\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('Kh√¥ng t√¨m th·∫•y token. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.');\n      return;\n    }\n\n    console.log('SupportPage - User:', user);\n    const socket = initSocket(token);\n\n    socket.on('connect', () => {\n      console.log('‚úÖ User connected to support system');\n      socket.emit('join-support', { userId: user._id });\n    });\n\n    socket.on('message', (message: Message) => {\n      console.log('üì© Nh·∫≠n tin nh·∫Øn t·ª´ server:', message);\n      setMessages((prev) => [...prev, message]);\n    });\n\n    socket.on('connect_error', (err: Error) => {\n      console.error('‚ùå Socket connection error:', err.message);\n      setError('Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn h·ªá th·ªëng h·ªó tr·ª£: ' + err.message);\n    });\n\n    socket.on('error', (errMsg: string) => {\n      console.error('‚ùå Server error:', errMsg);\n      setError(errMsg);\n    });\n\n    return () => {\n      console.log('‚úÖ ƒê√≥ng socket t·ª´ SupportPage');\n      closeSocket();\n    };\n  }, [user, loading]);\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ p: 3, display: 'flex', flexDirection: 'column', height: 'calc(100vh - 64px)' }}>\n      <Typography variant=\"h5\" sx={{ mb: 2, fontFamily: 'Poppins, sans-serif', fontWeight: 'bold', color: '#1E3A8A' }}>\n        Chat v·ªõi Admin\n      </Typography>\n      {error && (\n        <Typography sx={{ color: 'error.main', mb: 2, textAlign: 'center' }}>{error}</Typography>\n      )}\n      <List sx={{ flexGrow: 1, overflowY: 'auto', bgcolor: '#fafafa', borderRadius: 2, p: 2 }}>\n        {messages.map((msg) => (\n          <ListItem\n            key={msg._id}\n            sx={{ justifyContent: msg.sender === 'user' ? 'flex-end' : 'flex-start', p: 0 }}\n          >\n            <ListItemText\n              primary={msg.content}\n              secondary={new Date(msg.createdAt).toLocaleTimeString('vi-VN')}\n              sx={{\n                bgcolor: msg.sender === 'user' ? 'primary.light' : 'grey.200',\n                color: msg.sender === 'user' ? 'white' : 'text.primary',\n                p: 1.5,\n                borderRadius: 2,\n                maxWidth: '70%',\n                fontFamily: 'Poppins, sans-serif',\n              }}\n            />\n          </ListItem>\n        ))}\n      </List>\n      <Box sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\n        <TextField\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n          fullWidth\n          placeholder=\"Nh·∫≠p tin nh·∫Øn...\"\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{ '& .MuiOutlinedInput-root': { borderRadius: 2 } }}\n        />\n        <IconButton onClick={handleSendMessage} sx={{ ml: 1, color: 'primary.main' }}>\n          <SendIcon />\n        </IconButton>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SupportPage;"],"names":["socket","initSocket","token","disconnect","console","error","Error","socketUrl","process","REACT_APP_API_URL","replace","io","auth","concat","transports","reconnection","reconnectionAttempts","reconnectionDelay","on","err","message","stack","log","getSocket","closeSocket","SupportPage","user","loading","useAuth","messages","setMessages","useState","input","setInput","setError","handleSendMessage","useCallback","trim","connected","newMessage","_id","Date","now","toString","sessionId","sender","content","createdAt","emit","prev","useEffect","localStorage","getItem","userId","errMsg","_jsx","Box","sx","display","justifyContent","alignItems","height","children","CircularProgress","_jsxs","p","flexDirection","Typography","variant","mb","fontFamily","fontWeight","color","textAlign","List","flexGrow","overflowY","bgcolor","borderRadius","map","msg","ListItem","ListItemText","primary","secondary","toLocaleTimeString","maxWidth","mt","TextField","value","onChange","e","target","onKeyPress","key","fullWidth","placeholder","size","IconButton","onClick","ml","SendIcon"],"sourceRoot":""}