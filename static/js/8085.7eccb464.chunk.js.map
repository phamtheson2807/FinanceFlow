{"version":3,"file":"static/js/8085.7eccb464.chunk.js","mappings":"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","sources":["pages/ai-advisor/FinancialForecast.tsx","services/geminiService.ts"],"sourcesContent":["import { TrendingUp } from '@mui/icons-material';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CircularProgress,\n  Container,\n  Typography\n} from '@mui/material';\nimport { motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport geminiService from '../../services/geminiService';\nimport axiosInstance from '../../utils/axiosInstance';\n\nconst markdownStyles = {\n  heading1: {\n    color: '#A78BFA',\n    fontWeight: 700,\n    marginTop: '24px',\n    marginBottom: '16px',\n    fontSize: '1.5rem'\n  },\n  heading2: {\n    color: '#A78BFA',\n    fontWeight: 600,\n    marginTop: '24px',\n    marginBottom: '16px',\n    fontSize: '1.2rem'\n  },\n  heading3: {\n    color: '#A78BFA',\n    fontWeight: 600,\n    marginTop: '16px',\n    marginBottom: '8px',\n    fontSize: '1.1rem'\n  },\n  paragraph: {\n    color: '#A1A1AA',\n    marginBottom: '8px',\n    lineHeight: 1.7\n  },\n  listItem: {\n    color: '#A1A1AA',\n    marginBottom: '6px',\n    fontSize: '1rem',\n    marginLeft: '16px'\n  },\n  strong: {\n    color: '#A78BFA',\n    fontWeight: 600\n  }\n} as const;\n\nconst ReactMarkdownWrapper = ReactMarkdown as any;\n\nconst FinancialForecast: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [forecast, setForecast] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchDataAndForecast = async () => {\n      try {\n        setLoading(true);\n        const [transactionsRes, savingsRes, investmentsRes] = await Promise.all([\n          axiosInstance.get('/api/transactions').catch(err => ({ data: { transactions: [] } })),\n          axiosInstance.get('/api/savings').catch(err => ({ data: [] })),\n          axiosInstance.get('/api/investments').catch(err => ({ data: [] }))\n        ]);\n\n        const fetchedTransactions = transactionsRes.data.transactions || [];\n        const fetchedSavings = savingsRes.data || [];\n        const fetchedInvestments = investmentsRes.data || [];\n\n        if (fetchedTransactions.length > 0) {\n          const aiForecast = await geminiService.generateFinancialAdvice(\n            { transactions: fetchedTransactions, savings: fetchedSavings, investments: fetchedInvestments, budget: null },\n            'Dựa trên dữ liệu giao dịch, tiết kiệm và đầu tư của tôi, hãy dự báo tình hình tài chính trong 6 tháng tới và đưa ra các khuyến nghị'\n          );\n          setForecast(aiForecast);\n        } else {\n          setForecast('Không có đủ dữ liệu giao dịch để tạo dự báo.');\n        }\n      } catch (error: any) {\n        console.error('Error:', error);\n        setError(error.message || 'Không thể tải dữ liệu dự báo');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDataAndForecast();\n  }, []);\n\n  const formatMessage = (content: string | null) => {\n    if (!content) return null;\n    return (\n      <Box className=\"markdown-content\">\n        <style>\n          {`\n            .markdown-content h1 { \n              color: ${markdownStyles.heading1.color};\n              font-weight: ${markdownStyles.heading1.fontWeight};\n              margin-top: ${markdownStyles.heading1.marginTop};\n              margin-bottom: ${markdownStyles.heading1.marginBottom};\n              font-size: ${markdownStyles.heading1.fontSize};\n            }\n            .markdown-content h2 {\n              color: ${markdownStyles.heading2.color};\n              font-weight: ${markdownStyles.heading2.fontWeight};\n              margin-top: ${markdownStyles.heading2.marginTop};\n              margin-bottom: ${markdownStyles.heading2.marginBottom};\n              font-size: ${markdownStyles.heading2.fontSize};\n            }\n            .markdown-content h3 {\n              color: ${markdownStyles.heading3.color};\n              font-weight: ${markdownStyles.heading3.fontWeight};\n              margin-top: ${markdownStyles.heading3.marginTop};\n              margin-bottom: ${markdownStyles.heading3.marginBottom};\n              font-size: ${markdownStyles.heading3.fontSize};\n            }\n            .markdown-content p {\n              color: ${markdownStyles.paragraph.color};\n              margin-bottom: ${markdownStyles.paragraph.marginBottom};\n              line-height: ${markdownStyles.paragraph.lineHeight};\n            }\n            .markdown-content li {\n              color: ${markdownStyles.listItem.color};\n              margin-bottom: ${markdownStyles.listItem.marginBottom};\n              font-size: ${markdownStyles.listItem.fontSize};\n              margin-left: ${markdownStyles.listItem.marginLeft};\n            }\n            .markdown-content strong {\n              color: ${markdownStyles.strong.color};\n              font-weight: ${markdownStyles.strong.fontWeight};\n            }\n          `}\n        </style>\n        <ReactMarkdownWrapper children={content || ''} />\n      </Box>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <Typography\n          variant=\"h4\"\n          gutterBottom\n          sx={{\n            fontWeight: 700,\n            background: 'linear-gradient(45deg, #A78BFA, #8B5CF6)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            mb: 4\n          }}\n        >\n          Dự Báo Tài Chính\n        </Typography>\n\n        <Card sx={{ \n          borderRadius: 3, \n          boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n          background: '#1C1C3D'\n        }}>\n          <CardContent>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <TrendingUp sx={{ fontSize: 32, color: '#A78BFA', mr: 2 }} />\n              <Typography variant=\"h6\" sx={{ color: '#FFFFFF' }}>Dự Báo 6 Tháng Tới</Typography>\n            </Box>\n            {loading ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', py: 3 }}>\n                <CircularProgress sx={{ color: '#A78BFA' }} />\n              </Box>\n            ) : error ? (\n              <Typography color=\"error\">{error}</Typography>\n            ) : (\n              <Box sx={{ color: '#A1A1AA', maxHeight: 350, overflowY: 'auto' }}>\n                {formatMessage(forecast) || 'Chưa có dữ liệu dự báo'}\n              </Box>\n            )}\n          </CardContent>\n        </Card>\n      </motion.div>\n    </Container>\n  );\n};\n\nexport default FinancialForecast; \n ","import { GoogleGenerativeAI } from \"@google/generative-ai\";\n\nconst API_KEY = process.env.REACT_APP_GEMINI_API_KEY || \"AIzaSyCWqESnXoAoAgMGLeQwsTntDEzS5hmdIyc\";\nconst genAI = new GoogleGenerativeAI(API_KEY);\n\nconst geminiService = {\n  generateFinancialAdvice: async (context: any, userInput: string) => {\n    try {\n      // Khởi tạo model với cấu hình cụ thể\n      const model = genAI.getGenerativeModel({ \n        model: \"gemini-1.5-flash\",\n        generationConfig: {\n          temperature: 0.7,\n          topK: 40,\n          topP: 0.95,\n          maxOutputTokens: 2048,\n        }\n      });\n\n      // Chuẩn bị prompt với ngữ cảnh\n      const prompt = `\n        Bạn là trợ lý tài chính cá nhân của FinanceFlow, một trang web giúp người dùng quản lý tài chính. \n        Bạn hỗ trợ người dùng bằng tiếng Việt, trả lời các câu hỏi về quản lý tài chính, tiết kiệm, đầu tư, ngân sách, thu chi, báo cáo tài chính, và các tính năng của FinanceFlow.\n        Hãy trả lời một cách tự nhiên, dễ hiểu, và chuyên nghiệp.\n\n        Thông tin tài chính của người dùng:\n        - Giao dịch: ${JSON.stringify(context.transactions, null, 2)}\n        - Tiết kiệm: ${JSON.stringify(context.savings, null, 2)}\n        - Đầu tư: ${JSON.stringify(context.investments, null, 2)}\n        - Ngân sách: ${JSON.stringify(context.budget, null, 2)}\n\n        Câu hỏi của người dùng: ${userInput}\n\n        Hãy phân tích thông tin và đưa ra lời khuyên chi tiết bằng tiếng Việt. Tập trung vào:\n        1. Phân tích tình hình tài chính hiện tại\n        2. Đề xuất cải thiện cụ thể\n        3. Các bước hành động tiếp theo\n      `;\n\n      // Gọi API để sinh nội dung\n      const result = await model.generateContent(prompt);\n      const response = await result.response;\n      return response.text();\n    } catch (error: any) {\n      console.error('Gemini API Error:', error);\n      throw new Error('Không thể kết nối với AI Assistant. Vui lòng thử lại sau.');\n    }\n  }\n};\n\nexport default geminiService; "],"names":["markdownStyles","color","fontWeight","marginTop","marginBottom","fontSize","lineHeight","marginLeft","ReactMarkdownWrapper","ReactMarkdown","FinancialForecast","loading","setLoading","useState","forecast","setForecast","error","setError","useEffect","async","transactionsRes","savingsRes","investmentsRes","Promise","all","axiosInstance","get","catch","err","data","transactions","fetchedTransactions","fetchedSavings","fetchedInvestments","length","aiForecast","geminiService","generateFinancialAdvice","savings","investments","budget","console","message","fetchDataAndForecast","_jsx","Container","maxWidth","sx","py","children","_jsxs","motion","div","initial","opacity","y","animate","transition","duration","Typography","variant","gutterBottom","background","WebkitBackgroundClip","WebkitTextFillColor","mb","Card","borderRadius","boxShadow","CardContent","Box","display","alignItems","TrendingUp","mr","justifyContent","CircularProgress","maxHeight","overflowY","content","className","concat","genAI","GoogleGenerativeAI","process","context","userInput","model","getGenerativeModel","generationConfig","temperature","topK","topP","maxOutputTokens","prompt","JSON","stringify","result","generateContent","response","text","Error"],"sourceRoot":""}