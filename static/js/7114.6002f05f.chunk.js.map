{"version":3,"file":"static/js/7114.6002f05f.chunk.js","mappings":"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","sources":["services/socketService.ts","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","pages/admin/AdminSupportPage.tsx"],"sourcesContent":["// src/services/socketService.ts\nimport { io } from 'socket.io-client';\n\nlet socket: any = null;\n\nexport const initSocket = (token: string) => {\n  if (socket) {\n    socket.disconnect();\n  }\n\n  if (!token) {\n    console.error('❌ Token không tồn tại, không thể kết nối WebSocket');\n    throw new Error('Token không tồn tại');\n  }\n\n  // Thay đổi URL từ localhost sang URL backend đã triển khai\n  const socketUrl = process.env.REACT_APP_API_URL \n    ? process.env.REACT_APP_API_URL.replace('/api', '') \n    : 'https://quanlythuchi-backend.onrender.com';\n  \n  socket = io(socketUrl, {\n    auth: { token: `Bearer ${token}` },\n    transports: ['websocket'],\n    reconnection: true,\n    reconnectionAttempts: 5,\n    reconnectionDelay: 1000,\n  });\n\n  socket.on('connect_error', (err: Error) => {\n    console.error('Socket connection error:', err.message, err.stack);\n  });\n\n  socket.on('disconnect', () => {\n    console.log('📡 Socket disconnected');\n  });\n\n  console.log('📡 Socket initialized with full token:', `Bearer ${token}`); // In toàn bộ token\n  return socket;\n};\n\nexport const getSocket = () => socket;\n\nexport const closeSocket = () => {\n  if (socket) {\n    socket.disconnect();\n    socket = null;\n    console.log('📡 Socket disconnected');\n  }\n};","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","import SendIcon from '@mui/icons-material/Send';\nimport {\n  Avatar,\n  Badge,\n  Box,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Paper,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { useCallback, useEffect, useState } from 'react';\nimport { closeSocket, getSocket, initSocket } from '../../services/socketService';\nimport axiosInstance from '../../utils/axiosInstance';\n\ninterface Message {\n  _id: string;\n  sessionId: string;\n  sender: 'user' | 'admin';\n  content: string;\n  createdAt: Date;\n}\n\ninterface ChatSession {\n  _id: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  messages: Message[];\n  status: 'active' | 'closed';\n  createdAt: Date;\n  updatedAt: Date;\n  unreadCount: number;\n}\n\nconst SupportChat: React.FC<{ session: ChatSession }> = ({ session }) => {\n  const [messageInput, setMessageInput] = useState('');\n  const socket = getSocket();\n\n  const handleSendMessage = useCallback(() => {\n    if (!messageInput.trim() || !socket || !socket.connected) {\n      console.error('❌ Không thể gửi tin nhắn: Socket chưa kết nối hoặc tin nhắn rỗng');\n      return;\n    }\n\n    const newMessage: Message = {\n      _id: Date.now().toString(),\n      sessionId: session._id,\n      sender: 'admin',\n      content: messageInput,\n      createdAt: new Date(),\n    };\n\n    socket.emit('message', newMessage);\n    setMessageInput('');\n  }, [messageInput, session._id, socket]);\n\n  return (\n    <Paper sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column', height: '100%' }}>\n      <Box sx={{ p: 2, bgcolor: 'primary.main', color: 'white', borderTopLeftRadius: 4, borderTopRightRadius: 4 }}>\n        <Typography variant=\"h6\">{session.userName} ({session.userEmail})</Typography>\n      </Box>\n      <Box sx={{ flexGrow: 1, overflowY: 'auto', p: 2 }}>\n        {session.messages.map((msg) => (\n          <Box\n            key={msg._id}\n            sx={{\n              mb: 1,\n              display: 'flex',\n              justifyContent: msg.sender === 'admin' ? 'flex-end' : 'flex-start',\n            }}\n          >\n            <Typography\n              sx={{\n                bgcolor: msg.sender === 'admin' ? 'primary.main' : 'grey.200',\n                color: msg.sender === 'admin' ? 'white' : 'text.primary',\n                p: 1,\n                borderRadius: 2,\n                maxWidth: '70%',\n                fontFamily: 'Poppins, sans-serif',\n              }}\n            >\n              {msg.content}\n            </Typography>\n          </Box>\n        ))}\n      </Box>\n      <Box sx={{ p: 2, display: 'flex', alignItems: 'center', borderTop: '1px solid', borderColor: 'grey.300' }}>\n        <TextField\n          value={messageInput}\n          onChange={(e) => setMessageInput(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n          fullWidth\n          placeholder=\"Nhập tin nhắn...\"\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <IconButton onClick={handleSendMessage} sx={{ ml: 1, color: 'primary.main' }}>\n          <SendIcon />\n        </IconButton>\n      </Box>\n    </Paper>\n  );\n};\n\nconst AdminSupportPage: React.FC = () => {\n  const [sessions, setSessions] = useState<ChatSession[]>([]);\n  const [selectedSession, setSelectedSession] = useState<ChatSession | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchSessions = useCallback(async () => {\n    try {\n      const response = await axiosInstance.get('/api/admin/support/sessions');\n      console.log('📡 Sessions fetched:', response.data);\n      setSessions(response.data.sessions || []);\n    } catch (error: any) {\n      console.error('Error fetching sessions:', error.message);\n      setError('Không thể tải danh sách phiên hỗ trợ: ' + (error.response?.data?.message || error.message));\n    }\n  }, []);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('Bạn cần đăng nhập để truy cập hỗ trợ.');\n      return;\n    }\n\n    const socket = initSocket(token);\n\n    socket.on('connect', () => {\n      console.log('✅ Admin connected to support system');\n      fetchSessions(); // Gọi API khi kết nối thành công\n    });\n\n    socket.on('connect_error', (err: Error) => {\n      console.error('❌ Socket connection error:', err.message);\n      setError('Không thể kết nối đến hệ thống hỗ trợ: ' + err.message);\n    });\n\n    socket.on('new-session', (session: ChatSession) => {\n      console.log('📡 New session received:', session);\n      setSessions((prev) => [...prev, { ...session, messages: session.messages || [], unreadCount: 1 }]);\n    });\n\n    socket.on('message', (message: Message & { sessionId: string }) => { // Cập nhật kiểu để bao gồm sessionId\n      console.log('📩 New message received:', message);\n      setSessions((prev) =>\n        prev.map((session) =>\n          session._id === message.sessionId\n            ? {\n                ...session,\n                messages: [...session.messages, message],\n                unreadCount: selectedSession?._id === session._id ? 0 : session.unreadCount + 1,\n              }\n            : session\n        )\n      );\n    });\n\n    socket.on('disconnect', () => {\n      console.log('❌ Socket disconnected');\n    });\n\n    return () => {\n      console.log('✅ Closing socket from AdminSupportPage');\n      closeSocket();\n    };\n  }, [fetchSessions, selectedSession]);\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" sx={{ mb: 3, fontWeight: 'bold', color: '#1E3A8A' }}>\n        Quản lý hỗ trợ\n      </Typography>\n      {error && (\n        <Typography sx={{ color: 'error.main', mb: 2, textAlign: 'center' }}>{error}</Typography>\n      )}\n\n      <Box sx={{ display: 'flex', height: 'calc(100vh - 180px)', gap: 2 }}>\n        {/* Sessions list */}\n        <Paper\n          sx={{\n            width: { xs: '100%', sm: 300 },\n            height: '100%',\n            overflow: 'auto',\n            bgcolor: 'background.paper',\n            borderRadius: 2,\n          }}\n        >\n          <Typography\n            variant=\"h6\"\n            sx={{ p: 2, bgcolor: '#1E3A8A', color: 'white', fontFamily: 'Poppins, sans-serif' }}\n          >\n            Danh sách người dùng\n          </Typography>\n          <List>\n            {sessions.length > 0 ? (\n              sessions.map((session) => (\n                <ListItem\n                  key={session._id}\n                  button\n                  selected={selectedSession?._id === session._id}\n                  onClick={() => setSelectedSession(session)}\n                  sx={{\n                    '&.Mui-selected': { bgcolor: 'primary.light' },\n                    '&:hover': { bgcolor: 'grey.100' },\n                  }}\n                >\n                  <ListItemAvatar>\n                    <Badge badgeContent={session.unreadCount} color=\"error\">\n                      <Avatar>{session.userName[0]}</Avatar>\n                    </Badge>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={session.userName}\n                    secondary={session.userEmail}\n                    primaryTypographyProps={{ fontFamily: 'Poppins, sans-serif' }}\n                    secondaryTypographyProps={{ fontFamily: 'Poppins, sans-serif' }}\n                  />\n                </ListItem>\n              ))\n            ) : (\n              <Typography sx={{ p: 2, textAlign: 'center', color: 'text.secondary' }}>\n                Chưa có phiên hỗ trợ nào\n              </Typography>\n            )}\n          </List>\n        </Paper>\n\n        {/* Chat area */}\n        <Paper sx={{ flexGrow: 1, height: '100%', display: 'flex', flexDirection: 'column' }}>\n          {selectedSession ? (\n            <SupportChat session={selectedSession} />\n          ) : (\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%' }}>\n              <Typography color=\"text.secondary\" sx={{ fontFamily: 'Poppins, sans-serif' }}>\n                Chọn một người dùng để bắt đầu trò chuyện\n              </Typography>\n            </Box>\n          )}\n        </Paper>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AdminSupportPage;"],"names":["socket","initSocket","token","disconnect","console","error","Error","socketUrl","process","REACT_APP_API_URL","replace","io","auth","concat","transports","reconnection","reconnectionAttempts","reconnectionDelay","on","err","message","stack","log","getSocket","closeSocket","getListItemAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListItemAvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","alignItems","alignItemsFlexStart","_ref","_extends","minWidth","flexShrink","marginTop","React","inProps","ref","useDefaultProps","className","other","_objectWithoutPropertiesLoose","context","ListContext","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","SupportChat","session","messageInput","setMessageInput","useState","handleSendMessage","useCallback","trim","connected","newMessage","_id","Date","now","toString","sessionId","sender","content","createdAt","emit","_jsxs","Paper","sx","flexGrow","display","flexDirection","height","children","Box","p","bgcolor","color","borderTopLeftRadius","borderTopRightRadius","Typography","variant","userName","userEmail","overflowY","messages","map","msg","mb","justifyContent","borderRadius","maxWidth","fontFamily","borderTop","borderColor","TextField","value","onChange","e","target","onKeyPress","key","fullWidth","placeholder","size","IconButton","onClick","ml","SendIcon","AdminSupportPage","sessions","setSessions","selectedSession","setSelectedSession","setError","fetchSessions","async","response","axiosInstance","get","data","_error$response","_error$response$data","useEffect","localStorage","getItem","prev","_objectSpread","unreadCount","fontWeight","textAlign","gap","width","xs","sm","overflow","List","length","ListItem","button","selected","ListItemAvatar","Badge","badgeContent","Avatar","ListItemText","primary","secondary","primaryTypographyProps","secondaryTypographyProps"],"sourceRoot":""}