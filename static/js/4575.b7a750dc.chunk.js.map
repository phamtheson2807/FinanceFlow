{"version":3,"file":"static/js/4575.b7a750dc.chunk.js","mappings":"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","sources":["pages/ai-advisor/SavingsSuggestions.tsx","services/geminiService.ts"],"sourcesContent":["import { Savings } from '@mui/icons-material';\nimport {\n    Box,\n    Card,\n    CardContent,\n    CircularProgress,\n    Container,\n    Typography,\n    useTheme\n} from '@mui/material';\nimport { motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport geminiService from '../../services/geminiService';\nimport axiosInstance from '../../utils/axiosInstance';\n\nconst markdownStyles = {\n  heading1: {\n    color: '#A78BFA',\n    fontWeight: 700,\n    marginTop: '24px',\n    marginBottom: '16px',\n    fontSize: '1.5rem'\n  },\n  heading2: {\n    color: '#A78BFA',\n    fontWeight: 600,\n    marginTop: '24px',\n    marginBottom: '16px',\n    fontSize: '1.2rem'\n  },\n  heading3: {\n    color: '#A78BFA',\n    fontWeight: 600,\n    marginTop: '16px',\n    marginBottom: '8px',\n    fontSize: '1.1rem'\n  },\n  paragraph: {\n    color: '#A1A1AA',\n    marginBottom: '8px',\n    lineHeight: 1.7\n  },\n  listItem: {\n    color: '#A1A1AA',\n    marginBottom: '6px',\n    fontSize: '1rem',\n    marginLeft: '16px'\n  },\n  strong: {\n    color: '#A78BFA',\n    fontWeight: 600\n  }\n} as const;\n\nconst SavingsSuggestions: React.FC = () => {\n  const theme = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [suggestions, setSuggestions] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [transactions, setTransactions] = useState<any[]>([]);\n  const [savings, setSavings] = useState<any[]>([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // Fetch financial data\n        const [transactionsRes, savingsRes] = await Promise.all([\n          axiosInstance.get('/api/transactions').catch(err => ({ data: { transactions: [] } })),\n          axiosInstance.get('/api/savings').catch(err => ({ data: [] }))\n        ]);\n\n        const transactions = transactionsRes.data.transactions || [];\n        const savings = savingsRes.data || [];\n\n        setTransactions(transactions);\n        setSavings(savings);\n\n        if (transactions.length > 0) {\n          // Generate AI savings suggestions\n          const aiSuggestions = await geminiService.generateFinancialAdvice(\n            { transactions, savings, investments: [], budget: null },\n            'Dựa trên lịch sử giao dịch và tiết kiệm của tôi, hãy đưa ra các gợi ý tiết kiệm chi tiết bao gồm:\\n1. Phân tích thói quen chi tiêu hiện tại\\n2. Đề xuất các khoản có thể cắt giảm\\n3. Kế hoạch tiết kiệm phù hợp\\n4. Các mục tiêu tiết kiệm ngắn và dài hạn'\n          );\n          setSuggestions(aiSuggestions);\n        }\n      } catch (error: any) {\n        console.error('Error:', error);\n        setError(error.message || 'Không thể tải dữ liệu gợi ý');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const formatMessage = (content: string | null) => {\n    if (!content) return null;\n    return (\n      <Box className=\"markdown-content\">\n        <style>\n          {`\n            .markdown-content h1 { \n              color: ${markdownStyles.heading1.color};\n              font-weight: ${markdownStyles.heading1.fontWeight};\n              margin-top: ${markdownStyles.heading1.marginTop};\n              margin-bottom: ${markdownStyles.heading1.marginBottom};\n              font-size: ${markdownStyles.heading1.fontSize};\n            }\n            .markdown-content h2 {\n              color: ${markdownStyles.heading2.color};\n              font-weight: ${markdownStyles.heading2.fontWeight};\n              margin-top: ${markdownStyles.heading2.marginTop};\n              margin-bottom: ${markdownStyles.heading2.marginBottom};\n              font-size: ${markdownStyles.heading2.fontSize};\n            }\n            .markdown-content h3 {\n              color: ${markdownStyles.heading3.color};\n              font-weight: ${markdownStyles.heading3.fontWeight};\n              margin-top: ${markdownStyles.heading3.marginTop};\n              margin-bottom: ${markdownStyles.heading3.marginBottom};\n              font-size: ${markdownStyles.heading3.fontSize};\n            }\n            .markdown-content p {\n              color: ${markdownStyles.paragraph.color};\n              margin-bottom: ${markdownStyles.paragraph.marginBottom};\n              line-height: ${markdownStyles.paragraph.lineHeight};\n            }\n            .markdown-content li {\n              color: ${markdownStyles.listItem.color};\n              margin-bottom: ${markdownStyles.listItem.marginBottom};\n              font-size: ${markdownStyles.listItem.fontSize};\n              margin-left: ${markdownStyles.listItem.marginLeft};\n            }\n            .markdown-content strong {\n              color: ${markdownStyles.strong.color};\n              font-weight: ${markdownStyles.strong.fontWeight};\n            }\n          `}\n        </style>\n        <ReactMarkdown>\n          {content}\n        </ReactMarkdown>\n      </Box>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <Typography\n          variant=\"h4\"\n          gutterBottom\n          sx={{\n            fontWeight: 700,\n            background: 'linear-gradient(45deg, #A78BFA, #8B5CF6)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            mb: 4\n          }}\n        >\n          Gợi Ý Tiết Kiệm\n        </Typography>\n\n        <Card sx={{ \n          borderRadius: 3, \n          boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n          background: '#1C1C3D'\n        }}>\n          <CardContent>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <Savings sx={{ fontSize: 32, color: '#A78BFA', mr: 2 }} />\n              <Typography variant=\"h6\" sx={{ color: '#FFFFFF' }}>Kế Hoạch Tiết Kiệm Thông Minh</Typography>\n            </Box>\n            {loading ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', py: 3 }}>\n                <CircularProgress sx={{ color: '#A78BFA' }} />\n              </Box>\n            ) : error ? (\n              <Typography color=\"error\">{error}</Typography>\n            ) : (\n              <Box sx={{ color: '#A1A1AA', maxHeight: 350, overflowY: 'auto' }}>\n                {formatMessage(suggestions) || 'Chưa có dữ liệu gợi ý'}\n              </Box>\n            )}\n          </CardContent>\n        </Card>\n      </motion.div>\n    </Container>\n  );\n};\n\nexport default SavingsSuggestions; ","import { GoogleGenerativeAI } from \"@google/generative-ai\";\n\nconst API_KEY = process.env.REACT_APP_GEMINI_API_KEY || \"AIzaSyCWqESnXoAoAgMGLeQwsTntDEzS5hmdIyc\";\nconst genAI = new GoogleGenerativeAI(API_KEY);\n\nconst geminiService = {\n  generateFinancialAdvice: async (context: any, userInput: string) => {\n    try {\n      // Khởi tạo model với cấu hình cụ thể\n      const model = genAI.getGenerativeModel({ \n        model: \"gemini-1.5-flash\",\n        generationConfig: {\n          temperature: 0.7,\n          topK: 40,\n          topP: 0.95,\n          maxOutputTokens: 2048,\n        }\n      });\n\n      // Chuẩn bị prompt với ngữ cảnh\n      const prompt = `\n        Bạn là trợ lý tài chính cá nhân của FinanceFlow, một trang web giúp người dùng quản lý tài chính. \n        Bạn hỗ trợ người dùng bằng tiếng Việt, trả lời các câu hỏi về quản lý tài chính, tiết kiệm, đầu tư, ngân sách, thu chi, báo cáo tài chính, và các tính năng của FinanceFlow.\n        Hãy trả lời một cách tự nhiên, dễ hiểu, và chuyên nghiệp.\n\n        Thông tin tài chính của người dùng:\n        - Giao dịch: ${JSON.stringify(context.transactions, null, 2)}\n        - Tiết kiệm: ${JSON.stringify(context.savings, null, 2)}\n        - Đầu tư: ${JSON.stringify(context.investments, null, 2)}\n        - Ngân sách: ${JSON.stringify(context.budget, null, 2)}\n\n        Câu hỏi của người dùng: ${userInput}\n\n        Hãy phân tích thông tin và đưa ra lời khuyên chi tiết bằng tiếng Việt. Tập trung vào:\n        1. Phân tích tình hình tài chính hiện tại\n        2. Đề xuất cải thiện cụ thể\n        3. Các bước hành động tiếp theo\n      `;\n\n      // Gọi API để sinh nội dung\n      const result = await model.generateContent(prompt);\n      const response = await result.response;\n      return response.text();\n    } catch (error: any) {\n      console.error('Gemini API Error:', error);\n      throw new Error('Không thể kết nối với AI Assistant. Vui lòng thử lại sau.');\n    }\n  }\n};\n\nexport default geminiService; "],"names":["markdownStyles","color","fontWeight","marginTop","marginBottom","fontSize","lineHeight","marginLeft","SavingsSuggestions","useTheme","loading","setLoading","useState","suggestions","setSuggestions","error","setError","transactions","setTransactions","savings","setSavings","useEffect","async","transactionsRes","savingsRes","Promise","all","axiosInstance","get","catch","err","data","length","aiSuggestions","geminiService","generateFinancialAdvice","investments","budget","console","message","fetchData","_jsx","Container","maxWidth","sx","py","children","_jsxs","motion","div","initial","opacity","y","animate","transition","duration","Typography","variant","gutterBottom","background","WebkitBackgroundClip","WebkitTextFillColor","mb","Card","borderRadius","boxShadow","CardContent","Box","display","alignItems","Savings","mr","justifyContent","CircularProgress","maxHeight","overflowY","content","className","concat","ReactMarkdown","genAI","GoogleGenerativeAI","process","context","userInput","model","getGenerativeModel","generationConfig","temperature","topK","topP","maxOutputTokens","prompt","JSON","stringify","result","generateContent","response","text","Error"],"sourceRoot":""}