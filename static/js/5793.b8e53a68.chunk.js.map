{"version":3,"file":"static/js/5793.b8e53a68.chunk.js","mappings":"0UAiBA,MAAMA,EACM,CACRC,MAAO,UACPC,WAAY,IACZC,UAAW,OACXC,aAAc,OACdC,SAAU,UANRL,EAQM,CACRC,MAAO,UACPC,WAAY,IACZC,UAAW,OACXC,aAAc,OACdC,SAAU,UAbRL,EAeM,CACRC,MAAO,UACPC,WAAY,IACZC,UAAW,OACXC,aAAc,MACdC,SAAU,UApBRL,EAsBO,CACTC,MAAO,UACPG,aAAc,MACdE,WAAY,KAzBVN,EA2BM,CACRC,MAAO,UACPG,aAAc,MACdC,SAAU,OACVE,WAAY,QA/BVP,EAiCI,CACNC,MAAO,UACPC,WAAY,KA+MhB,EA3MmCM,MACnBC,EAAAA,EAAAA,KAAd,MACOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAwB,OACjDG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAwB,OAC3CK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAgB,KACjDO,EAAkBC,IAAuBR,EAAAA,EAAAA,UAAwB,OACjES,EAAqBC,IAA0BV,EAAAA,EAAAA,UAAwB,OAE9EW,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACEb,GAAW,GAEX,MACMM,SADiBQ,EAAAA,EAAcC,IAAI,sBACXC,KAAKV,cAAgB,GAGnD,GAFAC,EAAgBD,GAEZA,EAAaW,OAAS,EAAG,CAE3B,MAAMC,QAAmBC,EAAAA,EAAcC,wBACrC,CAAEd,eAAce,QAAS,GAAIC,YAAa,GAAIC,OAAQ,MACtD,wGAEFpB,EAAYe,GAGZ,MAAMM,QAAiBL,EAAAA,EAAcC,wBACnC,CAAEd,eAAce,QAAS,GAAIC,YAAa,GAAIC,OAAQ,MACtD,8HAEFd,EAAoBe,GAGpB,MAAMC,QAAoBN,EAAAA,EAAcC,wBACtC,CAAEd,eAAce,QAAS,GAAIC,YAAa,GAAIC,OAAQ,MACtD,oIAEFZ,EAAuBc,EACzB,CACF,CAAE,MAAOrB,GACPsB,QAAQtB,MAAM,SAAUA,GACxBC,EAASD,EAAMuB,SAAW,+DAC5B,CAAC,QACC3B,GAAW,EACb,GAGF4B,EAAW,GACV,IAEH,MAAMC,EAAiBC,GAChBA,GAEHC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,+DAAAE,OAGe/C,EAAwBC,MAAK,kCAAA8C,OACvB/C,EAAwBE,WAAU,iCAAA6C,OACnC/C,EAAwBG,UAAS,oCAAA4C,OAC9B/C,EAAwBI,aAAY,gCAAA2C,OACxC/C,EAAwBK,SAAQ,+EAAA0C,OAGpC/C,EAAwBC,MAAK,kCAAA8C,OACvB/C,EAAwBE,WAAU,iCAAA6C,OACnC/C,EAAwBG,UAAS,oCAAA4C,OAC9B/C,EAAwBI,aAAY,gCAAA2C,OACxC/C,EAAwBK,SAAQ,+EAAA0C,OAGpC/C,EAAwBC,MAAK,kCAAA8C,OACvB/C,EAAwBE,WAAU,iCAAA6C,OACnC/C,EAAwBG,UAAS,oCAAA4C,OAC9B/C,EAAwBI,aAAY,gCAAA2C,OACxC/C,EAAwBK,SAAQ,8EAAA0C,OAGpC/C,EAAyBC,MAAK,oCAAA8C,OACtB/C,EAAyBI,aAAY,kCAAA2C,OACvC/C,EAAyBM,WAAU,+EAAAyC,OAGzC/C,EAAwBC,MAAK,oCAAA8C,OACrB/C,EAAwBI,aAAY,gCAAA2C,OACxC/C,EAAwBK,SAAQ,kCAAA0C,OAC9B/C,EAAwBO,WAAU,mFAAAwC,OAGxC/C,EAAsBC,MAAK,kCAAA8C,OACrB/C,EAAsBE,WAAU,mCAIrD4C,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,SACXJ,OA5Cc,KAkDvB,OACEK,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,GAAI,GAAIP,UACrCH,EAAAA,EAAAA,MAACW,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,IAAMf,SAAA,EAE9BC,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACTC,QAAQ,KACRC,cAAY,EACZZ,GAAI,CACFjD,WAAY,IACZ8D,WAAY,2CACZC,qBAAsB,OACtBC,oBAAqB,cACrBC,GAAI,GACJtB,SACH,iCAIDH,EAAAA,EAAAA,MAAC0B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEzB,SAAA,EACzBC,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAG3B,UAChBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAACtB,GAAI,CACRuB,aAAc,EACdC,UAAW,6BACXX,WAAY,WACZnB,UACAH,EAAAA,EAAAA,MAACkC,EAAAA,EAAW,CAAA/B,SAAA,EACVH,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACQ,GAAI,CAAE0B,QAAS,OAAQC,WAAY,SAAUX,GAAI,GAAItB,SAAA,EACxDC,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CAAC5B,GAAI,CAAE9C,SAAU,GAAIJ,MAAO,UAAW+E,GAAI,MACrDlC,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAAQ,KAAKX,GAAI,CAAElD,MAAO,WAAY4C,SAAC,kCAEpDnC,GACCoC,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CAACQ,GAAI,CAAE0B,QAAS,OAAQI,eAAgB,SAAU7B,GAAI,GAAIP,UAC5DC,EAAAA,EAAAA,KAACoC,EAAAA,EAAgB,CAAC/B,GAAI,CAAElD,MAAO,eAE/Bc,GACF+B,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAAC5D,MAAM,QAAO4C,SAAE9B,KAE3B+B,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CAACQ,GAAI,CAAElD,MAAO,UAAWkF,UAAW,IAAKC,UAAW,QAASvC,SAC9DL,EAAc3B,IAAa,8DAOtCiC,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIa,GAAI,EAAExC,UACvBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAACtB,GAAI,CACRuB,aAAc,EACdC,UAAW,6BACXX,WAAY,WACZnB,UACAH,EAAAA,EAAAA,MAACkC,EAAAA,EAAW,CAAA/B,SAAA,EACVH,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACQ,GAAI,CAAE0B,QAAS,OAAQC,WAAY,SAAUX,GAAI,GAAItB,SAAA,EACxDC,EAAAA,EAAAA,KAACwC,EAAAA,EAAU,CAACnC,GAAI,CAAE9C,SAAU,GAAIJ,MAAO,UAAW+E,GAAI,MACtDlC,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAAQ,KAAKX,GAAI,CAAElD,MAAO,WAAY4C,SAAC,kCAEpDnC,GACCoC,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CAACQ,GAAI,CAAE0B,QAAS,OAAQI,eAAgB,SAAU7B,GAAI,GAAIP,UAC5DC,EAAAA,EAAAA,KAACoC,EAAAA,EAAgB,CAAC/B,GAAI,CAAElD,MAAO,gBAGjC6C,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CAACQ,GAAI,CAAElD,MAAO,UAAWkF,UAAW,IAAKC,UAAW,QAASvC,SAC9DL,EAAcrB,IAAqB,6DAO9C2B,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIa,GAAI,EAAExC,UACvBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAACtB,GAAI,CACRuB,aAAc,EACdC,UAAW,6BACXX,WAAY,WACZnB,UACAH,EAAAA,EAAAA,MAACkC,EAAAA,EAAW,CAAA/B,SAAA,EACVH,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACQ,GAAI,CAAE0B,QAAS,OAAQC,WAAY,SAAUX,GAAI,GAAItB,SAAA,EACxDC,EAAAA,EAAAA,KAACyC,EAAAA,EAAY,CAACpC,GAAI,CAAE9C,SAAU,GAAIJ,MAAO,UAAW+E,GAAI,MACxDlC,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAAQ,KAAKX,GAAI,CAAElD,MAAO,WAAY4C,SAAC,oCAEpDnC,GACCoC,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CAACQ,GAAI,CAAE0B,QAAS,OAAQI,eAAgB,SAAU7B,GAAI,GAAIP,UAC5DC,EAAAA,EAAAA,KAACoC,EAAAA,EAAgB,CAAC/B,GAAI,CAAElD,MAAO,gBAGjC6C,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CAACQ,GAAI,CAAElD,MAAO,UAAWkF,UAAW,IAAKC,UAAW,QAASvC,SAC9DL,EAAcnB,IAAwB,mEAQ3C,C,mCC7PhB,MACMmE,EAAQ,I,SAAIC,IADFC,2CAgDhB,EA7CsB,CACpB3D,wBAAyBP,MAAOmE,EAAcC,KAC5C,IAEE,MAAMC,EAAQL,EAAMM,mBAAmB,CACrCD,MAAO,mBACPE,iBAAkB,CAChBC,YAAa,GACbC,KAAM,GACNC,KAAM,IACNC,gBAAiB,QAKfC,EAAM,qtBAAArD,OAMKsD,KAAKC,UAAUX,EAAQ1E,aAAc,KAAM,GAAE,qCAAA8B,OAC7CsD,KAAKC,UAAUX,EAAQ3D,QAAS,KAAM,GAAE,uCAAAe,OAC3CsD,KAAKC,UAAUX,EAAQ1D,YAAa,KAAM,GAAE,iCAAAc,OACzCsD,KAAKC,UAAUX,EAAQzD,OAAQ,KAAM,GAAE,kEAAAa,OAE5B6C,EAAS,yYAS/BW,QAAeV,EAAMW,gBAAgBJ,GAE3C,aADuBG,EAAOE,UACdC,MAClB,CAAE,MAAO3F,GAEP,MADAsB,QAAQtB,MAAM,oBAAqBA,GAC7B,IAAI4F,MAAM,gGAClB,G,6DC1CJ,SAAeC,EAAAA,EAAAA,IAA4B9D,EAAAA,EAAAA,KAAK,OAAQ,CACtD+D,EAAG,2EACD,e","sources":["pages/ai-advisor/SpendingAnalysis.tsx","services/geminiService.ts","../node_modules/@mui/icons-material/esm/TrendingDown.js"],"sourcesContent":["import { Analytics, TrendingDown, TrendingUp } from '@mui/icons-material';\nimport {\n    Box,\n    Card,\n    CardContent,\n    CircularProgress,\n    Container,\n    Grid,\n    Typography,\n    useTheme\n} from '@mui/material';\nimport { motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport geminiService from '../../services/geminiService';\nimport axiosInstance from '../../utils/axiosInstance';\n\nconst markdownStyles = {\n  heading1: {\n    color: '#A78BFA',\n    fontWeight: 700,\n    marginTop: '24px',\n    marginBottom: '16px',\n    fontSize: '1.5rem'\n  },\n  heading2: {\n    color: '#A78BFA',\n    fontWeight: 600,\n    marginTop: '24px',\n    marginBottom: '16px',\n    fontSize: '1.2rem'\n  },\n  heading3: {\n    color: '#A78BFA',\n    fontWeight: 600,\n    marginTop: '16px',\n    marginBottom: '8px',\n    fontSize: '1.1rem'\n  },\n  paragraph: {\n    color: '#A1A1AA',\n    marginBottom: '8px',\n    lineHeight: 1.7\n  },\n  listItem: {\n    color: '#A1A1AA',\n    marginBottom: '6px',\n    fontSize: '1rem',\n    marginLeft: '16px'\n  },\n  strong: {\n    color: '#A78BFA',\n    fontWeight: 600\n  }\n} as const;\n\nconst SpendingAnalysis: React.FC = () => {\n  const theme = useTheme();\n  const [loading, setLoading] = useState(true);\n  const [analysis, setAnalysis] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [transactions, setTransactions] = useState<any[]>([]);\n  const [positiveAnalysis, setPositiveAnalysis] = useState<string | null>(null);\n  const [improvementAnalysis, setImprovementAnalysis] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // Fetch transactions\n        const response = await axiosInstance.get('/api/transactions');\n        const transactions = response.data.transactions || [];\n        setTransactions(transactions);\n\n        if (transactions.length > 0) {\n          // Generate AI analysis\n          const aiAnalysis = await geminiService.generateFinancialAdvice(\n            { transactions, savings: [], investments: [], budget: null },\n            'Phân tích chi tiêu của tôi và đưa ra gợi ý cải thiện'\n          );\n          setAnalysis(aiAnalysis);\n\n          // Generate positive analysis\n          const positive = await geminiService.generateFinancialAdvice(\n            { transactions, savings: [], investments: [], budget: null },\n            'Phân tích các khoản chi tiêu hợp lý và hiệu quả trong giao dịch của tôi'\n          );\n          setPositiveAnalysis(positive);\n\n          // Generate improvement analysis\n          const improvement = await geminiService.generateFinancialAdvice(\n            { transactions, savings: [], investments: [], budget: null },\n            'Phân tích các khoản chi tiêu cần cải thiện và đề xuất cách tối ưu'\n          );\n          setImprovementAnalysis(improvement);\n        }\n      } catch (error: any) {\n        console.error('Error:', error);\n        setError(error.message || 'Không thể tải dữ liệu phân tích');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const formatMessage = (content: string | null) => {\n    if (!content) return null;\n    return (\n      <Box className=\"markdown-content\">\n        <style>\n          {`\n            .markdown-content h1 { \n              color: ${markdownStyles.heading1.color};\n              font-weight: ${markdownStyles.heading1.fontWeight};\n              margin-top: ${markdownStyles.heading1.marginTop};\n              margin-bottom: ${markdownStyles.heading1.marginBottom};\n              font-size: ${markdownStyles.heading1.fontSize};\n            }\n            .markdown-content h2 {\n              color: ${markdownStyles.heading2.color};\n              font-weight: ${markdownStyles.heading2.fontWeight};\n              margin-top: ${markdownStyles.heading2.marginTop};\n              margin-bottom: ${markdownStyles.heading2.marginBottom};\n              font-size: ${markdownStyles.heading2.fontSize};\n            }\n            .markdown-content h3 {\n              color: ${markdownStyles.heading3.color};\n              font-weight: ${markdownStyles.heading3.fontWeight};\n              margin-top: ${markdownStyles.heading3.marginTop};\n              margin-bottom: ${markdownStyles.heading3.marginBottom};\n              font-size: ${markdownStyles.heading3.fontSize};\n            }\n            .markdown-content p {\n              color: ${markdownStyles.paragraph.color};\n              margin-bottom: ${markdownStyles.paragraph.marginBottom};\n              line-height: ${markdownStyles.paragraph.lineHeight};\n            }\n            .markdown-content li {\n              color: ${markdownStyles.listItem.color};\n              margin-bottom: ${markdownStyles.listItem.marginBottom};\n              font-size: ${markdownStyles.listItem.fontSize};\n              margin-left: ${markdownStyles.listItem.marginLeft};\n            }\n            .markdown-content strong {\n              color: ${markdownStyles.strong.color};\n              font-weight: ${markdownStyles.strong.fontWeight};\n            }\n          `}\n        </style>\n        <ReactMarkdown>\n          {content}\n        </ReactMarkdown>\n      </Box>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <Typography\n          variant=\"h4\"\n          gutterBottom\n          sx={{\n            fontWeight: 700,\n            background: 'linear-gradient(45deg, #A78BFA, #8B5CF6)',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            mb: 4\n          }}\n        >\n          Phân Tích Chi Tiêu\n        </Typography>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Card sx={{ \n              borderRadius: 3, \n              boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n              background: '#1C1C3D'\n            }}>\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                  <Analytics sx={{ fontSize: 32, color: '#A78BFA', mr: 2 }} />\n                  <Typography variant=\"h6\" sx={{ color: '#FFFFFF' }}>Tổng Quan Chi Tiêu</Typography>\n                </Box>\n                {loading ? (\n                  <Box sx={{ display: 'flex', justifyContent: 'center', py: 3 }}>\n                    <CircularProgress sx={{ color: '#A78BFA' }} />\n                  </Box>\n                ) : error ? (\n                  <Typography color=\"error\">{error}</Typography>\n                ) : (\n                  <Box sx={{ color: '#A1A1AA', maxHeight: 350, overflowY: 'auto' }}>\n                    {formatMessage(analysis) || 'Chưa có dữ liệu phân tích'}\n                  </Box>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Card sx={{ \n              borderRadius: 3, \n              boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n              background: '#1C1C3D'\n            }}>\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                  <TrendingUp sx={{ fontSize: 32, color: '#10B981', mr: 2 }} />\n                  <Typography variant=\"h6\" sx={{ color: '#FFFFFF' }}>Chi Tiêu Hợp Lý</Typography>\n                </Box>\n                {loading ? (\n                  <Box sx={{ display: 'flex', justifyContent: 'center', py: 3 }}>\n                    <CircularProgress sx={{ color: '#10B981' }} />\n                  </Box>\n                ) : (\n                  <Box sx={{ color: '#A1A1AA', maxHeight: 350, overflowY: 'auto' }}>\n                    {formatMessage(positiveAnalysis) || 'Chưa có dữ liệu giao dịch'}\n                  </Box>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Card sx={{ \n              borderRadius: 3, \n              boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n              background: '#1C1C3D'\n            }}>\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                  <TrendingDown sx={{ fontSize: 32, color: '#EF4444', mr: 2 }} />\n                  <Typography variant=\"h6\" sx={{ color: '#FFFFFF' }}>Cần Cải Thiện</Typography>\n                </Box>\n                {loading ? (\n                  <Box sx={{ display: 'flex', justifyContent: 'center', py: 3 }}>\n                    <CircularProgress sx={{ color: '#EF4444' }} />\n                  </Box>\n                ) : (\n                  <Box sx={{ color: '#A1A1AA', maxHeight: 350, overflowY: 'auto' }}>\n                    {formatMessage(improvementAnalysis) || 'Chưa có dữ liệu giao dịch'}\n                  </Box>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </motion.div>\n    </Container>\n  );\n};\n\nexport default SpendingAnalysis; ","import { GoogleGenerativeAI } from \"@google/generative-ai\";\n\nconst API_KEY = process.env.REACT_APP_GEMINI_API_KEY || \"AIzaSyCWqESnXoAoAgMGLeQwsTntDEzS5hmdIyc\";\nconst genAI = new GoogleGenerativeAI(API_KEY);\n\nconst geminiService = {\n  generateFinancialAdvice: async (context: any, userInput: string) => {\n    try {\n      // Khởi tạo model với cấu hình cụ thể\n      const model = genAI.getGenerativeModel({ \n        model: \"gemini-1.5-flash\",\n        generationConfig: {\n          temperature: 0.7,\n          topK: 40,\n          topP: 0.95,\n          maxOutputTokens: 2048,\n        }\n      });\n\n      // Chuẩn bị prompt với ngữ cảnh\n      const prompt = `\n        Bạn là trợ lý tài chính cá nhân của FinanceFlow, một trang web giúp người dùng quản lý tài chính. \n        Bạn hỗ trợ người dùng bằng tiếng Việt, trả lời các câu hỏi về quản lý tài chính, tiết kiệm, đầu tư, ngân sách, thu chi, báo cáo tài chính, và các tính năng của FinanceFlow.\n        Hãy trả lời một cách tự nhiên, dễ hiểu, và chuyên nghiệp.\n\n        Thông tin tài chính của người dùng:\n        - Giao dịch: ${JSON.stringify(context.transactions, null, 2)}\n        - Tiết kiệm: ${JSON.stringify(context.savings, null, 2)}\n        - Đầu tư: ${JSON.stringify(context.investments, null, 2)}\n        - Ngân sách: ${JSON.stringify(context.budget, null, 2)}\n\n        Câu hỏi của người dùng: ${userInput}\n\n        Hãy phân tích thông tin và đưa ra lời khuyên chi tiết bằng tiếng Việt. Tập trung vào:\n        1. Phân tích tình hình tài chính hiện tại\n        2. Đề xuất cải thiện cụ thể\n        3. Các bước hành động tiếp theo\n      `;\n\n      // Gọi API để sinh nội dung\n      const result = await model.generateContent(prompt);\n      const response = await result.response;\n      return response.text();\n    } catch (error: any) {\n      console.error('Gemini API Error:', error);\n      throw new Error('Không thể kết nối với AI Assistant. Vui lòng thử lại sau.');\n    }\n  }\n};\n\nexport default geminiService; ","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 18 2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z\"\n}), 'TrendingDown');"],"names":["markdownStyles","color","fontWeight","marginTop","marginBottom","fontSize","lineHeight","marginLeft","SpendingAnalysis","useTheme","loading","setLoading","useState","analysis","setAnalysis","error","setError","transactions","setTransactions","positiveAnalysis","setPositiveAnalysis","improvementAnalysis","setImprovementAnalysis","useEffect","async","axiosInstance","get","data","length","aiAnalysis","geminiService","generateFinancialAdvice","savings","investments","budget","positive","improvement","console","message","fetchData","formatMessage","content","_jsxs","Box","className","children","_jsx","concat","ReactMarkdown","Container","maxWidth","sx","py","motion","div","initial","opacity","y","animate","transition","duration","Typography","variant","gutterBottom","background","WebkitBackgroundClip","WebkitTextFillColor","mb","Grid","container","spacing","item","xs","Card","borderRadius","boxShadow","CardContent","display","alignItems","Analytics","mr","justifyContent","CircularProgress","maxHeight","overflowY","md","TrendingUp","TrendingDown","genAI","GoogleGenerativeAI","process","context","userInput","model","getGenerativeModel","generationConfig","temperature","topK","topP","maxOutputTokens","prompt","JSON","stringify","result","generateContent","response","text","Error","createSvgIcon","d"],"sourceRoot":""}