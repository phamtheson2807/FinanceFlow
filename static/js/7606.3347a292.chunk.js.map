{"version":3,"file":"static/js/7606.3347a292.chunk.js","mappings":"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","sources":["pages/user/BudgetReport.tsx"],"sourcesContent":["import {\n    Alert,\n    Box,\n    CircularProgress,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n} from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Cell, Legend, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\nimport { useThemeContext } from '../../contexts/ThemeContext';\nimport axiosInstance from '../../utils/axiosInstance';\n\ninterface Budget {\n  _id: string;\n  category: string;\n  amount: number;\n  period: 'monthly' | 'weekly';\n}\n\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7f50', '#a4de6c', '#d0ed57', '#8dd1e1'];\n\nconst BudgetReport: React.FC = () => {\n  const { darkMode, currency } = useThemeContext();\n  const [budgets, setBudgets] = useState<Budget[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchBudgets = async () => {\n    try {\n      const response = await axiosInstance.get('/api/budgets');\n      setBudgets(response.data || []);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Không thể tải ngân sách');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchBudgets();\n  }, []);\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ p: 3 }}>\n        <Alert severity=\"error\">{error}</Alert>\n      </Box>\n    );\n  }\n\n  const formatCurrency = (amount: number) =>\n    new Intl.NumberFormat('vi-VN', {\n      style: 'currency',\n      currency: currency === 'VND' ? 'VND' : 'USD',\n    }).format(amount);\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" sx={{ mb: 3 }}>\n        Báo cáo Ngân sách\n      </Typography>\n\n      <Paper elevation={3} sx={{ p: 2, mb: 4 }}>\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>\n          Danh sách ngân sách\n        </Typography>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Danh mục</TableCell>\n              <TableCell>Số tiền</TableCell>\n              <TableCell>Chu kỳ</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {budgets.map((budget) => (\n              <TableRow key={budget._id}>\n                <TableCell>{budget.category}</TableCell>\n                <TableCell>{formatCurrency(budget.amount)}</TableCell>\n                <TableCell>{budget.period === 'monthly' ? 'Hàng tháng' : 'Hàng tuần'}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n\n      <Paper elevation={3} sx={{ p: 2 }}>\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>\n          Biểu đồ phân bổ ngân sách\n        </Typography>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <PieChart>\n            <Pie\n              data={budgets}\n              dataKey=\"amount\"\n              nameKey=\"category\"\n              cx=\"50%\"\n              cy=\"50%\"\n              outerRadius={100}\n              fill=\"#8884d8\"\n              label\n            >\n              {budgets.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n              ))}\n            </Pie>\n            <Tooltip />\n            <Legend />\n          </PieChart>\n        </ResponsiveContainer>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default BudgetReport;\n"],"names":["COLORS","BudgetReport","darkMode","currency","useThemeContext","budgets","setBudgets","useState","loading","setLoading","error","setError","useEffect","async","response","axiosInstance","get","data","err","_err$response","_err$response$data","message","fetchBudgets","_jsx","Box","sx","display","justifyContent","mt","children","CircularProgress","p","Alert","severity","_jsxs","Typography","variant","mb","Paper","elevation","Table","TableHead","TableRow","TableCell","TableBody","map","budget","category","amount","Intl","NumberFormat","style","format","period","_id","ResponsiveContainer","width","height","PieChart","Pie","dataKey","nameKey","cx","cy","outerRadius","fill","label","entry","index","Cell","length","concat","Tooltip","Legend"],"sourceRoot":""}