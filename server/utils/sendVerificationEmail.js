const nodemailer = require('nodemailer');

// Kh·ªüi t·∫°o transporter cho nodemailer
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});

// Ki·ªÉm tra k·∫øt n·ªëi v·ªõi Gmail SMTP
transporter.verify((error, success) => {
  if (error) {
    console.error('‚ùå L·ªói k·∫øt n·ªëi v·ªõi Gmail SMTP:', error);
  } else {
    console.log('‚úÖ K·∫øt n·ªëi Gmail SMTP th√†nh c√¥ng');
  }
});

// ‚úÖ G·ª¨I EMAIL X√ÅC TH·ª∞C
const sendVerificationEmail = async (email, token) => {
  console.log(`üöÄ B·∫Øt ƒë·∫ßu g·ª≠i email x√°c th·ª±c ƒë·∫øn: ${email}`);

  try {
    // Ki·ªÉm tra email ƒë·∫ßu v√†o
    if (!email || !email.includes('@')) {
      throw new Error('Email kh√¥ng h·ª£p l·ªá');
    }

    // T·∫°o URL x√°c th·ª±c
    const verificationUrl = `${process.env.CLIENT_URL}/verify-email?token=${token}`;

    // ƒê·ªãnh d·∫°ng th·ªùi gian g·ª≠i email
    const sentAt = new Date().toLocaleString('vi-VN', {
      timeZone: 'Asia/Ho_Chi_Minh',
      dateStyle: 'medium',
      timeStyle: 'short',
    });

    // N·ªôi dung plain text (d·ª± ph√≤ng cho c√°c email client kh√¥ng h·ªó tr·ª£ HTML)
    const textContent = `
Email: ${email}
Th·ªùi gian g·ª≠i: ${sentAt}
Li√™n k·∫øt x√°c th·ª±c: ${verificationUrl}
    `;

    // Thi·∫øt k·∫ø n·ªôi dung email d∆∞·ªõi d·∫°ng HTML (gi·ªëng phong c√°ch c·ªßa support.js)
    const htmlContent = `
      <div style="font-family: 'Poppins', Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f8fafc; border-radius: 10px;">
        <!-- Header -->
        <div style="text-align: center; padding: 20px; background: linear-gradient(45deg, #A78BFA, #60A5FA); border-radius: 10px 10px 0 0;">
          <h1 style="color: #ffffff; font-size: 24px; margin: 0;">X√°c Th·ª±c Email C·ªßa B·∫°n</h1>
        </div>

        <!-- Body -->
        <div style="padding: 20px; background-color: #ffffff; border-radius: 0 0 10px 10px;">
          <p style="color: #1E293B; font-size: 16px; margin: 0 0 10px;">Ch√†o b·∫°n,</p>
          <p style="color: #1E293B; font-size: 16px; margin: 0 0 20px;">
            C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t·∫°i FinanceFlow! Vui l√≤ng x√°c th·ª±c email c·ªßa b·∫°n ƒë·ªÉ b·∫Øt ƒë·∫ßu s·ª≠ d·ª•ng d·ªãch v·ª•. D∆∞·ªõi ƒë√¢y l√† th√¥ng tin chi ti·∫øt:
          </p>

          <table style="width: 100%; border-collapse: collapse; margin-bottom: 20px;">
            <tr>
              <td style="padding: 10px; font-weight: 600; color: #A78BFA; font-size: 16px; border-bottom: 1px solid #E5E7EB;">Email:</td>
              <td style="padding: 10px; color: #64748B; font-size: 16px; border-bottom: 1px solid #E5E7EB;">${email}</td>
            </tr>
            <tr>
              <td style="padding: 10px; font-weight: 600; color: #A78BFA; font-size: 16px; border-bottom: 1px solid #E5E7EB;">Th·ªùi gian g·ª≠i:</td>
              <td style="padding: 10px; color: #64748B; font-size: 16px; border-bottom: 1px solid #E5E7EB;">${sentAt}</td>
            </tr>
            <tr>
              <td style="padding: 10px; font-weight: 600; color: #A78BFA; font-size: 16px; border-bottom: 1px solid #E5E7EB;">Li√™n k·∫øt x√°c th·ª±c:</td>
              <td style="padding: 10px; color: #64748B; font-size: 16px; border-bottom: 1px solid #E5E7EB;">
                <a href="${verificationUrl}" style="color: #60A5FA; text-decoration: none; font-weight: 600;">Nh·∫•n ƒë·ªÉ x√°c th·ª±c</a>
              </td>
            </tr>
          </table>

          <p style="color: #1E293B; font-size: 16px; margin: 0 0 10px;">
            N·∫øu li√™n k·∫øt tr√™n kh√¥ng ho·∫°t ƒë·ªông, b·∫°n c√≥ th·ªÉ sao ch√©p v√† d√°n URL sau v√†o tr√¨nh duy·ªát:
          </p>
          <p style="color: #64748B; font-size: 14px; margin: 0 0 20px; word-break: break-all;">
            <a href="${verificationUrl}" style="color: #60A5FA; text-decoration: none;">${verificationUrl}</a>
          </p>
          <p style="color: #1E293B; font-size: 16px; margin: 0;">
            Li√™n k·∫øt n√†y s·∫Ω h·∫øt h·∫°n sau 24 gi·ªù. N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, vui l√≤ng b·ªè qua email n√†y.
          </p>
        </div>

        <!-- Footer -->
        <div style="text-align: center; padding: 20px; background-color: #1E293B; border-radius: 0 0 10px 10px; margin-top: 10px;">
          <p style="color: #CBD5E1; font-size: 14px; margin: 0 0 5px;">FinanceFlow - Qu·∫£n L√Ω T√†i Ch√≠nh D·ªÖ D√†ng</p>
          <p style="color: #CBD5E1; font-size: 14px; margin: 0;">
            Email: <a href="mailto:support@financeflow.com" style="color: #60A5FA; text-decoration: none;">support@financeflow.com</a> | Hotline: 0123-456-789
          </p>
          <p style="color: #64748B; font-size: 12px; margin: 10px 0 0;">¬© 2025 FinanceFlow. All rights reserved.</p>
        </div>
      </div>
    `;

    // G·ª≠i email
    const mailOptions = {
      from: `"FinanceFlow Support" <${process.env.EMAIL_USER}>`,
      to: email,
      subject: 'üîë X√°c Th·ª±c T√†i Kho·∫£n C·ªßa B·∫°n - FinanceFlow',
      text: textContent, // N·ªôi dung plain text d·ª± ph√≤ng
      html: htmlContent, // N·ªôi dung HTML ch√≠nh
    };

    console.log('üì° ƒêang g·ª≠i email x√°c th·ª±c...');
    const info = await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Email x√°c th·ª±c ƒë√£ ƒë∆∞·ª£c g·ª≠i: ${info.messageId}`);
    return info.messageId; // Tr·∫£ v·ªÅ messageId ƒë·ªÉ s·ª≠ d·ª•ng n·∫øu c·∫ßn
  } catch (error) {
    console.error('‚ùå L·ªói khi g·ª≠i email x√°c th·ª±c:', error.message);
    throw new Error(`Kh√¥ng th·ªÉ g·ª≠i email x√°c th·ª±c: ${error.message}`);
  }
};

module.exports = sendVerificationEmail;